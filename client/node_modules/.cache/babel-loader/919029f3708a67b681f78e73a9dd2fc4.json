{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/containers/registerContainer.js\";\nimport React from 'react'; //import { connect } from 'react-redux'\n\nimport { reduxForm } from 'redux-form'; //import {registerAction} from '../actions/registerAction'\n\nimport Register from '../components/user/Register';\nimport TextField from '@material-ui/core/TextField';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstname', 'lastname', 'username', 'email', 'password', 'confirmPassword'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n  /*if(values.username.length < 2)\n  errors.username = 'Username must contain at least 2 characters';*/\n\n  if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!/\\d/.test(values.password)) errors.password = \"Password must contain a number\";\n  if (!/[a-z]/.test(values.password)) errors.password = \"Password must contain a lowercase letter\";\n  if (!/[A-Z]/.test(values.password)) errors.password = \"Password must contain an uppercase letter\";\n  if (!/[a-zA-Z0-9]{6,20}/.test(values.password)) errors.password = \"Password must contain at least 6 characters\";\n  if (values.password !== values.confirmPassword) errors.confirmPassword = \"Passwords does not match\";\n  return errors;\n};\n\nconst renderField = ({\n  type,\n  input,\n  label,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(TextField, Object.assign({}, input, {\n  type: type,\n  label: label,\n  error: touched && error,\n  helperText: touched && error,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}));\n\nconst RegisterContainer = () => {\n  return React.createElement(Register, {\n    renderField: renderField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n};\n\nexport default reduxForm({\n  form: 'RegisterContainer',\n  validate\n})(RegisterContainer);\n/*const mapStateToProps = (state) => {\n    return{\n\n    }\n}\n\nconst mapDispatchToProps = (dipatch) => {\n    return{\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer) */","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/containers/registerContainer.js"],"names":["React","reduxForm","Register","TextField","validate","values","errors","requiredFields","forEach","field","test","email","password","confirmPassword","renderField","type","input","label","meta","touched","error","RegisterContainer","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,SAAR,QAAwB,YAAxB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,cAAc,GAAG,CACnB,WADmB,EAEnB,UAFmB,EAGnB,UAHmB,EAInB,OAJmB,EAKnB,UALmB,EAMnB,iBANmB,CAAvB;AAQEA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC9B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAX,EAAoB;AAClBH,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,UAAhB;AACD;AACF,GAJD;AAKE;;;AAEA,MAAI,CAAC,4CAA4CC,IAA5C,CAAiDL,MAAM,CAACM,KAAxD,CAAL,EAAqE;AACjEL,IAAAA,MAAM,CAACK,KAAP,GAAe,uBAAf;AACH;;AACD,MAAG,CAAC,KAAKD,IAAL,CAAUL,MAAM,CAACO,QAAjB,CAAJ,EACEN,MAAM,CAACM,QAAP,GAAkB,gCAAlB;AACF,MAAG,CAAC,QAAQF,IAAR,CAAaL,MAAM,CAACO,QAApB,CAAJ,EACIN,MAAM,CAACM,QAAP,GAAkB,0CAAlB;AACJ,MAAG,CAAC,QAAQF,IAAR,CAAaL,MAAM,CAACO,QAApB,CAAJ,EACIN,MAAM,CAACM,QAAP,GAAkB,2CAAlB;AACJ,MAAG,CAAC,oBAAoBF,IAApB,CAAyBL,MAAM,CAACO,QAAhC,CAAJ,EACIN,MAAM,CAACM,QAAP,GAAkB,6CAAlB;AACJ,MAAGP,MAAM,CAACO,QAAP,KAAoBP,MAAM,CAACQ,eAA9B,EACIP,MAAM,CAACO,eAAP,GAAyB,0BAAzB;AAEJ,SAAOP,MAAP;AACP,CAjCD;;AAoCA,MAAMQ,WAAW,GAAG,CACb;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAAI,EAAG;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAA5B,CADa,KAGZ,oBAAC,SAAD,oBACQJ,KADR;AAEI,EAAA,IAAI,EAAID,IAFZ;AAGI,EAAA,KAAK,EAAIE,KAHb;AAII,EAAA,KAAK,EAAIE,OAAO,IAAIC,KAJxB;AAKI,EAAA,UAAU,EAAED,OAAO,IAAIC,KAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHR;;AAcA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,SACG,oBAAC,QAAD;AACK,IAAA,WAAW,EAAIP,WADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAOH,CATD;;AAWA,eAAeb,SAAS,CAAC;AACrBqB,EAAAA,IAAI,EAAG,mBADc;AAErBlB,EAAAA;AAFqB,CAAD,CAAT,CAGZiB,iBAHY,CAAf;AAKA","sourcesContent":["import React from 'react'\n//import { connect } from 'react-redux'\nimport {reduxForm} from 'redux-form'\n//import {registerAction} from '../actions/registerAction'\nimport Register from '../components/user/Register'\nimport TextField from '@material-ui/core/TextField';\n\nconst validate = (values) => {\n    const errors = {};\n\n    const requiredFields = [\n        'firstname',\n        'lastname',\n        'username',\n        'email',\n        'password',\n        'confirmPassword',\n      ];\n      requiredFields.forEach(field => {\n        if (!values[field]) {\n          errors[field] = 'Required';\n        }\n      });\n        /*if(values.username.length < 2)\n        errors.username = 'Username must contain at least 2 characters';*/\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n        }\n        if(!/\\d/.test(values.password))\n          errors.password = \"Password must contain a number\"\n        if(!/[a-z]/.test(values.password))\n            errors.password = \"Password must contain a lowercase letter\"\n        if(!/[A-Z]/.test(values.password))\n            errors.password = \"Password must contain an uppercase letter\"\n        if(!/[a-zA-Z0-9]{6,20}/.test(values.password))\n            errors.password = \"Password must contain at least 6 characters\"\n        if(values.password !== values.confirmPassword)\n            errors.confirmPassword = \"Passwords does not match\"\n        \n        return errors;\n}\n\n\nconst renderField = (\n       {type, input, label, meta : {touched, error}}\n       ) => (\n        <TextField\n            {...input}\n            type = {type}\n            label = {label}\n            error = {touched && error}\n            helperText={touched && error}\n        />\n   )\n\n\n\nconst RegisterContainer = () => {\n   \n    return (\n       <Register\n            renderField = {renderField}\n            \n        /> \n    )\n    \n}\n\nexport default reduxForm({\n    form : 'RegisterContainer',\n    validate,\n})(RegisterContainer);\n\n/*const mapStateToProps = (state) => {\n    return{\n\n    }\n}\n\nconst mapDispatchToProps = (dipatch) => {\n    return{\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer) */"]},"metadata":{},"sourceType":"module"}