{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { SendEmailSuccess, SendEmailError } from \"../actions/sendEmail\";\nimport axios from 'axios';\n\nconst sendEmailS = function* sendEmailS(data) {\n  try {\n    const response = yield axios.post('http://localhost:5000/sendResetEmail', {\n      email: data.email\n    });\n    console.log(response.data);\n\n    if (response.data === 'success') {\n      yield put(SendEmailSuccess());\n    } else if (response.data === 'error') {\n      yield put(SendEmailError());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(SendEmailError());\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"SEND_EMAIL\", sendEmailS);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/sendEmailSaga.js"],"names":["takeLatest","put","SendEmailSuccess","SendEmailError","axios","sendEmailS","data","response","post","email","console","log","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,QAA8B,oBAA9B;AACA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,sBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GACd,UAAUA,UAAV,CAAsBC,IAAtB,EAA4B;AAC1B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,sCAAX,EAAmD;AAACC,MAAAA,KAAK,EAAEH,IAAI,CAACG;AAAb,KAAnD,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACD,IAArB;;AACA,QAAGC,QAAQ,CAACD,IAAT,KAAkB,SAArB,EACA;AACE,YAAML,GAAG,CAACC,gBAAgB,EAAjB,CAAT;AACD,KAHD,MAIK,IAAGK,QAAQ,CAACD,IAAT,KAAkB,OAArB,EACL;AACE,YAAML,GAAG,CAACE,cAAc,EAAf,CAAT;AACD;AACF,GAXD,CAWC,OAAOS,KAAP,EAAc;AACb,QAAIA,KAAK,CAACL,QAAV,EAAoB;AAClB,YAAMN,GAAG,CAACE,cAAc,EAAf,CAAT;AACD;AACF;AACF,CAlBH;;AAoBA,eAAe,aAAa;AAC1B,QAAMH,UAAU,CAAC,YAAD,EAAeK,UAAf,CAAhB;AACD","sourcesContent":["import {takeLatest, put} from \"redux-saga/effects\";\nimport {SendEmailSuccess,SendEmailError} from \"../actions/sendEmail\";\nimport axios from 'axios';\n\nconst sendEmailS =\n  function *sendEmailS (data) {\n    try {\n      const response = yield axios.post('http://localhost:5000/sendResetEmail', {email: data.email});\n      console.log(response.data);\n      if(response.data === 'success')\n      {\n        yield put(SendEmailSuccess());\n      }\n      else if(response.data === 'error')\n      {\n        yield put(SendEmailError());\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(SendEmailError());\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"SEND_EMAIL\", sendEmailS);\n}"]},"metadata":{},"sourceType":"module"}