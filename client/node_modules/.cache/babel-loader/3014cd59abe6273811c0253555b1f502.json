{"ast":null,"code":"var _jsxFileName = \"/Users/isifeddi/Desktop/Matcha/client/src/components/resetPassword/index.js\";\nimport React from 'react';\nimport { Field } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MySnackBar from '../commun/snackBar';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nconst renderField = ({\n  type,\n  input,\n  label,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(TextField, Object.assign({}, input, {\n  type: type,\n  label: label,\n  error: touched && error,\n  helperText: touched && error,\n  variant: \"outlined\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}));\n\nconst ResetPassword = props => {\n  const handleSubmit = props.handleSubmit,\n        status = props.status,\n        resetPasswordStatus = props.resetPasswordStatus,\n        resetError = props.resetError;\n  const classes = useStyles();\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), resetPasswordStatus === \"success\" && React.createElement(MySnackBar, {\n    variant: \"success\",\n    message: \"Your password has been reset successfully! You will be redirected to login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), resetPasswordStatus === \"error\" && React.createElement(MySnackBar, {\n    variant: \"error\",\n    message: resetError + 'You will be redirected to login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), status !== \"loading\" && React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(LockRoundedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Reset password\"), React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"password\",\n    component: renderField,\n    label: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"confirmPassword\",\n    component: renderField,\n    label: \"ConfirmPassword\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    className: classes.submit,\n    fullWidth: true,\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    name: \"submit\",\n    value: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Submit\"))))), status === \"loading\" && React.createElement(\"div\", {\n    className: classes.paper,\n    style: {\n      marginTop: \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/components/resetPassword/index.js"],"names":["React","Field","Button","CssBaseline","Avatar","LockRoundedIcon","Grid","Typography","makeStyles","Container","TextField","CircularProgress","MySnackBar","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","backgroundColor","palette","secondary","main","avatar","renderField","type","input","label","meta","touched","error","ResetPassword","props","handleSubmit","status","resetPasswordStatus","resetError","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,KAAT,QAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AAErCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAF8B;AAQrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJN,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAR+B;AAYrCM,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CADF;AAENQ,IAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAZ6B;AAgBrCC,EAAAA,MAAM,EAAE;AACNL,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENQ,IAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC,SAAd,CAAwBC;AAFnC;AAhB6B,CAAL,CAAN,CAA5B;;AAsBA,MAAME,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAAI,EAAG;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAA5B,CAAD,KAChB,oBAAC,SAAD,oBACQJ,KADR;AAEI,EAAA,IAAI,EAAID,IAFZ;AAGI,EAAA,KAAK,EAAIE,KAHb;AAII,EAAA,KAAK,EAAIE,OAAO,IAAIC,KAJxB;AAKI,EAAA,UAAU,EAAED,OAAO,IAAIC,KAL3B;AAMI,EAAA,OAAO,EAAC,UANZ;AAOI,EAAA,SAAS,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAYA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA,QACtBC,YADsB,GACmCD,KADnC,CACtBC,YADsB;AAAA,QACRC,MADQ,GACmCF,KADnC,CACRE,MADQ;AAAA,QACAC,mBADA,GACmCH,KADnC,CACAG,mBADA;AAAA,QACqBC,UADrB,GACmCJ,KADnC,CACqBI,UADrB;AAE7B,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;AAEA,SACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEC4B,mBAAmB,KAAK,SAAxB,IAAqC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,OAAO,EAAC,4EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtC,EAGCA,mBAAmB,KAAK,OAAxB,IAAmC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,OAAO,EAAEC,UAAU,GAAC,iCAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHpC,EAICF,MAAM,KAAK,SAAX,IACD;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAC5B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE4B,OAAO,CAACd,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADF,EAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,EAOI;AAAO,IAAA,SAAS,EAAEc,OAAO,CAACtB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAES,WAFf;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,IAAI,EAAC,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EASI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,SAAS,EAAEA,WAFf;AAGI,IAAA,KAAK,EAAC,iBAHV;AAII,IAAA,IAAI,EAAC,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,EAiBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAES,YAAlB;AAAgC,IAAA,SAAS,EAAEI,OAAO,CAACpB,MAAnD;AAA2D,IAAA,SAAS,MAApE;AAAqE,IAAA,OAAO,EAAC,WAA7E;AAAyF,IAAA,IAAI,EAAC,QAA9F;AAAuG,IAAA,KAAK,EAAC,SAA7G;AAAuH,IAAA,IAAI,EAAC,QAA5H;AAAqI,IAAA,KAAK,EAAC,IAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAjBJ,CADJ,CAPJ,CALA,EAsCCiB,MAAM,KAAK,SAAX,IAAwB;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAC5B,KAAxB;AAA+B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4D,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5D,CAtCzB,CADA;AA2CH,CA/CD;;AAiDA,eAAeqB,aAAf","sourcesContent":["import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MySnackBar from '../commun/snackBar'\n\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst renderField = ({type, input, label, meta : { touched, error}} ) => (\n    <TextField\n        {...input}\n        type = {type}\n        label = {label}\n        error = {touched && error}\n        helperText={touched && error}\n        variant=\"outlined\"\n        fullWidth\n    />\n)\n\nconst ResetPassword = (props) => {\n    const {handleSubmit, status, resetPasswordStatus, resetError} = props;\n    const classes = useStyles();\n\n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n    {resetPasswordStatus === \"success\" && <MySnackBar variant=\"success\" message='Your password has been reset successfully! You will be redirected to login'/>}\n    {resetPasswordStatus === \"error\" && <MySnackBar variant=\"error\" message={resetError+'You will be redirected to login'}/>}\n    {status !== \"loading\" &&\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Reset password\n        </Typography>\n        <form  className={classes.form}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Field\n                        name=\"password\"\n                        component={renderField}\n                        label=\"Password\"\n                        type=\"password\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Field\n                        name=\"confirmPassword\"\n                        component={renderField}\n                        label=\"ConfirmPassword\"\n                        type=\"password\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n                </Grid>\n            </Grid>\n        </form>    \n        \n        \n    </div>}\n    {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n      \n    </Container>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}