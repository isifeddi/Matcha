{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/components/Home/viewProfile.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    maxHeight: 550,\n    border: 'solid',\n    borderColor: '#DBDFF3'\n  },\n  cardMedia: {\n    maxWidth: 400,\n    maxHeight: 250\n  },\n  cardHeader: {\n    maxWidth: 400,\n    maxHeight: 150\n  },\n  cardContent: {\n    maxWidth: 400,\n    maxHeight: 100\n  },\n  cardAction: {\n    maxWidth: 400,\n    maxHeight: 50\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15\n  }\n}));\nexport default function ViewProfile(props) {\n  const user = props.user,\n        images = props.images,\n        interests = props.interests,\n        handleBlock = props.handleBlock,\n        handleLike = props.handleLike,\n        handleReport = props.handleReport,\n        handleViewProfile = props.handleViewProfile,\n        nbr = props.nbr;\n  const classes = useStyles();\n  const value = user.rating;\n  const labels = {\n    0.5: 'Useless',\n    1: 'Useless+',\n    1.5: 'Poor',\n    2: 'Poor+',\n    2.5: 'Ok',\n    3: 'Ok+',\n    3.5: 'Good',\n    4: 'Good+',\n    4.5: 'Excellent',\n    5: 'Excellent+'\n  };\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: classes.cardHeader,\n    action: React.createElement(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.rating1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Box, {\n      ml: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, labels[value]), React.createElement(Rating, {\n      name: \"read-only\",\n      value: value,\n      precision: 0.5,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))),\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: user.isOnline === 1 ? classes.avatarON : classes.avatarOF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }),\n    title: user.firstname + ' ' + user.lastname + ' ' + user.birthday,\n    subheader: user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    children: images.length !== 0 ? images.map(tile => React.createElement(\"div\", {\n      key: tile.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, tile.isProfilePic === 1 && React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"250px\"\n      },\n      src: `http://localhost:5000/images/${tile.path}`,\n      alt: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))) : React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"250px\"\n      },\n      src: defaultImg,\n      alt: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"TAGS :\"), \" \", interests !== null && interests.map(item => item.value + ' '))), React.createElement(CardActions, {\n    className: classes.cardAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    userid: user.id,\n    onClick: handleLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"LIKE\"), React.createElement(\"button\", {\n    userid: user.id,\n    onClick: handleBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Block\"), React.createElement(\"button\", {\n    user: JSON.stringify(user),\n    img: JSON.stringify(images),\n    inters: JSON.stringify(interests),\n    onClick: handleViewProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"ViewProfile\"))));\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/components/Home/viewProfile.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Box","Rating","defaultImg","Grid","useStyles","theme","card","maxWidth","maxHeight","border","borderColor","cardMedia","cardHeader","cardContent","cardAction","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatarON","backgroundColor","width","height","avatarOF","ViewProfile","props","user","images","interests","handleBlock","handleLike","handleReport","handleViewProfile","nbr","classes","value","rating","labels","rating1","isOnline","firstname","lastname","birthday","lastSignIn","length","map","tile","id","isProfilePic","path","item","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport { Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    maxHeight:550,\n    border : 'solid',\n   borderColor : '#DBDFF3'\n  },\n  cardMedia : {\n    maxWidth: 400,\n    maxHeight : 250,\n  },\n  cardHeader : {\n    maxWidth: 400,\n    maxHeight : 150,\n  },\n  cardContent : {\n    maxWidth: 400,\n    maxHeight : 100,\n  },\n  cardAction : {\n    maxWidth: 400,\n    maxHeight : 50,\n  },\n\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15,\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15,\n  },\n}));\n\nexport default function ViewProfile(props) {\n  const {user,images,interests,handleBlock,handleLike,handleReport,handleViewProfile,nbr} = props;\n  const classes = useStyles();\n  const value = user.rating;\n      const labels = {\n        0.5: 'Useless',\n        1: 'Useless+',\n        1.5: 'Poor',\n        2: 'Poor+',\n        2.5: 'Ok',\n        3: 'Ok+',\n        3.5: 'Good',\n        4: 'Good+',\n        4.5: 'Excellent',\n        5: 'Excellent+',\n      };\n\n  return (\n    <Grid container justify='center'>\n    <Card  className={classes.card}>\n      <CardHeader\n      className={classes.cardHeader}\n      action={ \n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <div className={classes.rating1}>\n        <Box ml={2}>{labels[value]}</Box>\n          <Rating\n            name=\"read-only\"\n            value={value}\n            precision={0.5}\n            readOnly\n          />\n          \n        </div>\n        </Box>\n        \n        }\n        avatar={\n          <Avatar aria-label=\"recipe\" className={user.isOnline === 1 ? classes.avatarON : classes.avatarOF}>\n              \n          </Avatar>\n          \n        }\n        title={user.firstname +' ' +user.lastname + ' '+ user.birthday}\n        subheader={user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn}\n      >\n     \n      </CardHeader>\n      \n      <CardMedia\n        className={classes.cardMedia}\n        children={\n          images.length !== 0 ? images.map((tile) =>\n            <div key={tile.id}>\n              {tile.isProfilePic === 1 &&\n                <img style={{width: \"100%\",height:\"250px\"}} src={`http://localhost:5000/images/${tile.path}`} alt=\"images\"/>\n              }\n            </div>\n            ) : <img  style={{width: \"100%\",height:\"250px\"}} src={defaultImg} alt=\"images\"/>\n        }\n      \n      />\n      <CardContent className={classes.cardContent}> \n        <Typography>\n        <strong>TAGS :</strong> {interests !== null &&  interests.map((item) =>item.value + ' ' )}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardAction}>\n        <button  userid = {user.id} onClick={handleLike}>LIKE</button>\n        <button  userid = {user.id} onClick={handleBlock}>Block</button>\n        <button  user = {JSON.stringify(user)} img= {JSON.stringify(images)} inters = {JSON.stringify(interests)}  onClick={handleViewProfile}>ViewProfile</button>\n      </CardActions>\n    </Card>\n    </Grid>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}