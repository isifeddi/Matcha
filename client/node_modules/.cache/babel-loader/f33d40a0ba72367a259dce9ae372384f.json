{"ast":null,"code":"import _objectSpread from \"/Volumes/Storage/goinfre/isifeddi/Matcha-i2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport Login from '../../components/Login';\nimport { LoginAction } from '../../actions/loginAction';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['username', 'password'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  \"form\": state.form,\n  \"status\": state.login.status,\n  \"errors\": state.login.error,\n  \"token\": state.user,\n  \"registredStatus\": state.register.registerStatus\n});\n\nconst mapDispatchToProps = {\n  \"loginAction\": LoginAction\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(form => {\n    dispatchProps.loginAction(form);\n  })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Login);\nconst LoginContainer = reduxForm({\n  form: \"login\",\n  \"destroyOnUnmount\": true,\n  validate\n})(connectedLoginContainer);\nexport default LoginContainer;","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/Matcha-i2/client/src/containers/Login/index.js"],"names":["Login","LoginAction","connect","reduxForm","validate","values","errors","requiredFields","forEach","field","trim","mapStateToProps","state","form","login","status","error","user","register","registerStatus","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","loginAction","connectedLoginContainer","LoginContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,UADmB,EAEnB,UAFmB,CAAvB;AAIAA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AACzCJ,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKA,SAAOH,MAAP;AACH,CAZD;;AAcA,MAAMK,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAACC,IADnB;AAEI,YAAWD,KAAK,CAACE,KAAN,CAAYC,MAF3B;AAGI,YAAUH,KAAK,CAACE,KAAN,CAAYE,KAH1B;AAII,WAAUJ,KAAK,CAACK,IAJpB;AAKI,qBAAmBL,KAAK,CAACM,QAAN,CAAeC;AALtC,CADwB,CAAxB;;AAQA,MAAMC,kBAAkB,GAAG;AACvB,iBAAenB;AADQ,CAA3B;;AAGA,MAAMoB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAyBZ,IAAD,IAAU;AAC/CU,IAAAA,aAAa,CAACG,WAAd,CAA0Bb,IAA1B;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMc,uBAAuB,GAAGzB,OAAO,CAACS,eAAD,EAAkBS,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDrB,KAAxD,CAAhC;AAEA,MAAM4B,cAAc,GAAGzB,SAAS,CAAC;AAC7BU,EAAAA,IAAI,EAAG,OADsB;AAE7B,sBAAoB,IAFS;AAG7BT,EAAAA;AAH6B,CAAD,CAAT,CAIpBuB,uBAJoB,CAAvB;AAMA,eAAeC,cAAf","sourcesContent":["import Login from '../../components/Login';\nimport {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'username',\n        'password',\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.login.status,\n    \"errors\": state.login.error,\n    \"token\" : state.user,\n    \"registredStatus\": state.register.registerStatus,\n});\nconst mapDispatchToProps = {\n    \"loginAction\": LoginAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        dispatchProps.loginAction(form);\n    })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Login);\n\nconst LoginContainer = reduxForm({\n    form : \"login\",\n    \"destroyOnUnmount\": true,\n    validate,\n})(connectedLoginContainer);\n\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}