{"ast":null,"code":"import _defineProperty from \"/Users/ibouroum/Desktop/matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Login from '../../components/Login';\nimport { LoginAction } from '../../actions/loginAction';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport { SubmissionError } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['username', 'password'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  return errors;\n};\n\nconst serverValidate = (state, props) => {\n  const error = {};\n  console.log(state.login.error);\n\n  if (state.login.error === 'Password Incorrect') {\n    error.password = 'Password Incorrect';\n  } else if (state.login.error === 'Username Not Found') {\n    error.username = 'Username Not Found';\n  }\n\n  throw new SubmissionError(error);\n};\n\nconst mapStateToProps = state => ({\n  \"form\": state.form,\n  \"status\": state.login.status,\n  \"error\": state.login.error\n});\n\nconst mapDispatchToProps = {\n  \"loginAction\": LoginAction\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(form => {\n    dispatchProps.loginAction(form);\n    console.log(stateProps); //otherProps.serverValidate(stateProps);\n  })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Login);\nconst LoginContainer = reduxForm({\n  form: \"login\",\n  \"destroyOnUnmount\": false,\n  validate,\n  serverValidate\n})(connectedLoginContainer);\nexport default LoginContainer;","map":{"version":3,"sources":["/Users/ibouroum/Desktop/matcha/client/src/containers/Login/index.js"],"names":["Login","LoginAction","connect","reduxForm","SubmissionError","validate","values","errors","requiredFields","forEach","field","trim","serverValidate","state","props","error","console","log","login","password","username","mapStateToProps","form","status","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","loginAction","connectedLoginContainer","LoginContainer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAGA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,UADmB,EAEnB,UAFmB,CAAvB;AAIAA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AACzCJ,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKA,SAAOH,MAAP;AACH,CAZD;;AAcA,MAAMK,cAAc,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,QAAMC,KAAK,GAAG,EAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAN,CAAYH,KAAxB;;AACA,MAAGF,KAAK,CAACK,KAAN,CAAYH,KAAZ,KAAsB,oBAAzB,EAA8C;AAC1CA,IAAAA,KAAK,CAACI,QAAN,GAAiB,oBAAjB;AACH,GAFD,MAGK,IAAGN,KAAK,CAACK,KAAN,CAAYH,KAAZ,KAAsB,oBAAzB,EAA8C;AAC/CA,IAAAA,KAAK,CAACK,QAAN,GAAiB,oBAAjB;AACH;;AACD,QAAM,IAAIhB,eAAJ,CAAoBW,KAApB,CAAN;AACH,CAVD;;AAYA,MAAMM,eAAe,GAAIR,KAAD,KACxB;AACI,UAASA,KAAK,CAACS,IADnB;AAEI,YAAWT,KAAK,CAACK,KAAN,CAAYK,MAF3B;AAGI,WAASV,KAAK,CAACK,KAAN,CAAYH;AAHzB,CADwB,CAAxB;;AAMA,MAAMS,kBAAkB,GAAG;AACvB,iBAAevB;AADQ,CAA3B;;AAGA,MAAMwB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAyBP,IAAD,IAAQ;AAC7CK,IAAAA,aAAa,CAACG,WAAd,CAA0BR,IAA1B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYS,UAAZ,EAF6C,CAG7C;AACH,GAJgB;AAJF,EAAnB;;AAaA,MAAMK,uBAAuB,GAAG7B,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDzB,KAAxD,CAAhC;AACA,MAAMgC,cAAc,GAAG7B,SAAS,CAAC;AAC7BmB,EAAAA,IAAI,EAAG,OADsB;AAE7B,sBAAoB,KAFS;AAG7BjB,EAAAA,QAH6B;AAI7BO,EAAAA;AAJ6B,CAAD,CAAT,CAMpBmB,uBANoB,CAAvB;AASA,eAAeC,cAAf","sourcesContent":["import Login from '../../components/Login';\nimport {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport { SubmissionError } from 'redux-form'\n\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'username',\n        'password',\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst serverValidate = (state, props) => {\n    const error = {};\n    console.log(state.login.error)\n    if(state.login.error === 'Password Incorrect'){\n        error.password = 'Password Incorrect'\n    }\n    else if(state.login.error === 'Username Not Found'){\n        error.username = 'Username Not Found'\n    }\n    throw new SubmissionError(error);\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.login.status,\n    \"error\": state.login.error\n});\nconst mapDispatchToProps = {\n    \"loginAction\": LoginAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form)=>{\n        dispatchProps.loginAction(form);\n        console.log(stateProps)\n        //otherProps.serverValidate(stateProps);\n    })\n\n\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Login);\nconst LoginContainer = reduxForm({\n    form : \"login\",\n    \"destroyOnUnmount\": false,  \n    validate,\n    serverValidate\n\n})(connectedLoginContainer);\n\n\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}