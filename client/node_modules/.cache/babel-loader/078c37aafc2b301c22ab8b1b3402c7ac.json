{"ast":null,"code":"var _jsxFileName = \"/Users/isifeddi/Desktop/Matcha-i2/client/src/containers/completeProfile/localisation.js\";\nimport React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport axios from 'axios';\n\nclass LocalisationContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userLocation: {\n        lat: 32,\n        lng: 32\n      },\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://ipinfo.io/json').then(res => console.log(res)).catch(err => console.log(err)); // const options = {\n    //     enableHighAccuracy: true,\n    //     timeout: 5000,\n    //     maximumAge: 0\n    // };\n    // navigator.geolocation.getCurrentPosition(\n    //     position => {\n    //         const { latitude, longitude, accuracy } = position.coords;\n    //         this.setState({\n    //             userLocation: { lat: latitude, lng: longitude },\n    //             loading: false\n    //         });\n    //         console.log('Votre position actuelle est :');\n    //         console.log(`Latitude : ${latitude}`);\n    //         console.log(`Longitude : ${longitude}`);\n    //         console.log(`La précision est de ${accuracy} mètres.`);\n    //     },\n    //     err => {\n    //         this.setState({\n    //             userLocation: { lat: 32.8781004, lng: -6.8887306 },\n    //             loading: false\n    //         });\n    //         console.warn(`ERREUR (${err.code}): ${err.message}`);\n    //     },\n    //     options\n    // );\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          userLocation = _this$state.userLocation;\n    if (loading) return null;\n    return React.createElement(Localisation, {\n      userL: userLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n} // const mapStateToProps = (state) => (\n// {\n// });\n// const mapDispatchToProps = {\n// };\n//LocalisationContainer = connect(mapStateToProps, mapDispatchToProps)(Localisation);\n\n\nexport default LocalisationContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha-i2/client/src/containers/completeProfile/localisation.js"],"names":["React","Component","Localisation","axios","LocalisationContainer","state","userLocation","lat","lng","loading","componentDidMount","get","then","res","console","log","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,SAAoCH,SAApC,CAA6C;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AAAEC,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OAAhB;AAAsCC,MAAAA,OAAO,EAAE;AAA/C,KADiC;AAAA;;AAGzCC,EAAAA,iBAAiB,GAAE;AAEfP,IAAAA,KAAK,CAACQ,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA/C,EAAiEG,KAAjE,CAAuEC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAA9E,EAFe,CAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDC,EAAAA,MAAM,GAAE;AAAA,wBAC4B,KAAKb,KADjC;AAAA,UACGI,OADH,eACGA,OADH;AAAA,UACYH,YADZ,eACYA,YADZ;AAEJ,QAAGG,OAAH,EAAY,OAAO,IAAP;AACZ,WACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGH;;AAvCwC,C,CA0C7C;AACA;AAEA;AACA;AAEA;AAEA;;;AAEA,eAAeF,qBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport axios from 'axios';\n\nclass LocalisationContainer extends Component{\n    state = { userLocation: { lat: 32, lng: 32 }, loading: true};\n    \n    componentDidMount(){\n        \n        axios.get('http://ipinfo.io/json').then(res => console.log(res)).catch(err => console.log(err));\n        // const options = {\n        //     enableHighAccuracy: true,\n        //     timeout: 5000,\n        //     maximumAge: 0\n        // };\n        // navigator.geolocation.getCurrentPosition(\n        //     position => {\n        //         const { latitude, longitude, accuracy } = position.coords;\n        //         this.setState({\n        //             userLocation: { lat: latitude, lng: longitude },\n        //             loading: false\n        //         });\n        //         console.log('Votre position actuelle est :');\n        //         console.log(`Latitude : ${latitude}`);\n        //         console.log(`Longitude : ${longitude}`);\n        //         console.log(`La précision est de ${accuracy} mètres.`);\n        //     },\n        //     err => {\n        //         this.setState({\n        //             userLocation: { lat: 32.8781004, lng: -6.8887306 },\n        //             loading: false\n        //         });\n        //         console.warn(`ERREUR (${err.code}): ${err.message}`);\n        //     },\n        //     options\n        // );\n    }\n    render(){\n        const {loading, userLocation} = this.state;\n        if(loading) return null;\n        return (\n          <Localisation userL={userLocation}/>\n        )\n    }\n}\n\n// const mapStateToProps = (state) => (\n// {\n    \n// });\n// const mapDispatchToProps = {\n    \n// };\n\n//LocalisationContainer = connect(mapStateToProps, mapDispatchToProps)(Localisation);\n\nexport default LocalisationContainer;"]},"metadata":{},"sourceType":"module"}