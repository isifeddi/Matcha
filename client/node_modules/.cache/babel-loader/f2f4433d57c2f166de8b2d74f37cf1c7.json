{"ast":null,"code":"import _slicedToArray from \"/Users/ibouroum/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js\";\nimport React, { useState } from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nexport const Pictures = props => {\n  const user = props.user;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        imagePreviewUrl = _React$useState2[0],\n        setImagePreviewUrl = _React$useState2[1]; //const [message,setMessage] = React.useState(null);\n\n\n  const fileChangedHandler = async (event, user) => {\n    let files = event.target.files[0]; // if(files.types)\n    // {\n    //     console.log(files)\n    // }\n\n    let reader = new FileReader();\n\n    reader.onload = event => {\n      setImagePreviewUrl(reader.result);\n    };\n\n    reader.readAsDataURL(files);\n    const headers = {\n      'Content-Type': 'multipart/form-data'\n    };\n    const formData = new FormData();\n    formData.append('files', files);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', {\n        formData: formData,\n        userId: user.id\n      }, headers);\n      console.log(response);\n    } catch (err) {}\n  }; //console.log('ddsd'+imagePreviewUrl)\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Picture, {\n    fileChangedHandler: fileChangedHandler,\n    imagePreviewUrl: imagePreviewUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  \"user\": state.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js"],"names":["React","useState","Picture","connect","axios","Pictures","props","user","imagePreviewUrl","setImagePreviewUrl","fileChangedHandler","event","files","target","reader","FileReader","onload","result","readAsDataURL","headers","formData","FormData","append","response","post","userId","id","console","log","err","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QACxBC,IADwB,GAChBD,KADgB,CACxBC,IADwB;;AAAA,0BAEUP,KAAK,CAACC,QAAN,EAFV;AAAA;AAAA,QAE5BO,eAF4B;AAAA,QAEZC,kBAFY,wBAGnC;;;AACA,QAAMC,kBAAkB,GAAI,OAAQC,KAAR,EAAcJ,IAAd,KAAuB;AAC/C,QAAIK,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAmB,CAAnB,CAAb,CAD+C,CAE/C;AACA;AACA;AACA;;AACA,QAAIE,MAAM,GAAI,IAAIC,UAAJ,EAAd;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBL,KAAD,IAAW;AACvBF,MAAAA,kBAAkB,CAACK,MAAM,CAACG,MAAR,CAAlB;AACH,KAFD;;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBN,KAArB;AACA,UAAMO,OAAO,GAAG;AAAC,sBAAgB;AAAjB,KAAhB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwBV,KAAxB;;AACA,QAAG;AACD,YAAMW,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,8BAAX,EAA0C;AAACJ,QAAAA,QAAQ,EAAGA,QAAZ;AAAsBK,QAAAA,MAAM,EAAGlB,IAAI,CAACmB;AAApC,OAA1C,EAAkFP,OAAlF,CAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,KAHD,CAGE,OAAMM,GAAN,EAAU,CACX;AACJ,GAnBD,CAJmC,CAwBnC;;;AACI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,kBAAkB,EAAInB,kBAA/B;AAAmD,IAAA,eAAe,EAAIF,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA9BM;;AAiCP,MAAMsB,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAACxB;AADnB,CADwB,CAAxB;;AAIA,MAAMyB,kBAAkB,GAAG,EAA3B;AAIA,eAAe7B,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,QAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\n\nexport const Pictures = (props) => {\n    const {user} = props;\nconst [imagePreviewUrl,setImagePreviewUrl] = React.useState();\n//const [message,setMessage] = React.useState(null);\nconst fileChangedHandler =  async  (event,user) => {\n    let files  = event.target.files[0];\n    // if(files.types)\n    // {\n    //     console.log(files)\n    // }\n    let reader  = new FileReader();\n    reader.onload = (event) => {\n        setImagePreviewUrl(reader.result);\n    }\n    reader.readAsDataURL(files);\n    const headers = {'Content-Type': 'multipart/form-data'};\n    const formData = new FormData();\n    formData.append('files',files);\n    try{\n      const response = await axios.post('http://localhost:5000/upload',{formData : formData, userId : user.id},headers);\n      console.log(response)\n    } catch(err){\n    }\n}\n//console.log('ddsd'+imagePreviewUrl)\n    return (\n        <div>\n            <Picture fileChangedHandler = {fileChangedHandler} imagePreviewUrl = {imagePreviewUrl}/>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => (\n{\n    \"user\" : state.user,\n});\nconst mapDispatchToProps = {\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);"]},"metadata":{},"sourceType":"module"}