{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { push } from \"react-router-redux\"; //import { Redirect } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = props => {\n  const token = props.token,\n        children = props.children,\n        goToPage = props.goToPage; // return (\n  //     <>\n  //         { token ? children : goToPage('/login') }\n  //     </>\n\n  useEffect(() => {\n    if (token === null) {\n      goToPage(\"/login\");\n    }\n  }, []);\n\n  if (token !== null) {\n    return children;\n  }\n\n  return null;\n};\n\nconst goToPage = path => push(path);\n\nconst mapStateToProps = state => ({\n  'token': state.token\n});\n\nconst mapDispatchToProps = {\n  goToPage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/Routes/PrivateRoute.js"],"names":["React","useEffect","push","connect","PrivateRoute","props","token","children","goToPage","path","mapStateToProps","state","mapDispatchToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,oBAAnB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA,QACrBC,KADqB,GACQD,KADR,CACrBC,KADqB;AAAA,QACdC,QADc,GACQF,KADR,CACdE,QADc;AAAA,QACJC,QADI,GACQH,KADR,CACJG,QADI,EAE5B;AACA;AACA;AACA;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,KAAK,IAAd,EAAoB;AAClBE,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAJM,EAIJ,EAJI,CAAT;;AAKE,MAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,WACEC,QADF;AAGD;;AACD,SAAO,IAAP;AACL,CAjBD;;AAkBA,MAAMC,QAAQ,GAAIC,IAAD,IAAUP,IAAI,CAACO,IAAD,CAA/B;;AACA,MAAMC,eAAe,GAAIC,KAAD,KACxB;AACI,WAASA,KAAK,CAACL;AADnB,CADwB,CAAxB;;AAIA,MAAMM,kBAAkB,GAAG;AACvBJ,EAAAA;AADuB,CAA3B;AAGA,eAAeL,OAAO,CAACO,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,YAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {push} from \"react-router-redux\";\n//import { Redirect } from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nconst PrivateRoute = (props) => {\n    const {token, children, goToPage} = props\n    // return (\n    //     <>\n    //         { token ? children : goToPage('/login') }\n    //     </>\n    useEffect(() => {\n        if (token === null) {\n          goToPage(\"/login\");\n        }\n      }, []);\n      if (token !== null) {\n        return (\n          children\n        );\n      }\n      return null;\n}\nconst goToPage = (path) => push(path);\nconst mapStateToProps = (state) => (\n{\n    'token': state.token,\n});\nconst mapDispatchToProps = {\n    goToPage\n  };\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}