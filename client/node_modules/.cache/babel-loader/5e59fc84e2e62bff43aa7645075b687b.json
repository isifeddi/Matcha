{"ast":null,"code":"var _jsxFileName = \"/Volumes/Storage/goinfre/isifeddi/dd/client/src/containers/completeProfile/stepper.js\";\nimport React, { Component, useEffect } from 'react';\nimport Stepper from '../../components/completeProfile/stepper';\nimport { getOptions } from '../../actions/addInfoAction';\nimport { getImages } from '../../actions/imagesAction';\nimport { connect } from \"react-redux\";\nimport { decStepper } from '../../actions/stepperAction';\n\nconst StepperContainer = props => {\n  useEffect(props => {\n    if (props.user) {\n      props.getOptions();\n      props.getImages(this.props.user.id);\n    }\n  }, []);\n\n  const handleBack = props => {\n    props.decStepper();\n  };\n\n  return React.createElement(Stepper, {\n    handleBack: this.handleBack,\n    handleNext: this.handleNext,\n    user: this.props.user,\n    images: this.props.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n}; // class StepperContainer extends Component {\n//     componentDidMount = () => {\n// if(this.props.user){\n//     this.props.getOptions();\n//     this.props.getImages(this.props.user.id);\n// }\n//     }\n// handleBack (){\n//     this.props.decStepper();\n// }\n//     handleNext (){\n//     }\n//     render() {\n// return (\n//     <Stepper handleBack={this.handleBack} handleNext={this.handleNext} user={this.props.user} images={this.props.images}/> \n// )\n//     }\n// }\n\n\nconst mapStateToProps = state => ({\n  \"user\": state.user,\n  \"images\": state.images\n});\n\nconst mapDispatchToProps = {\n  \"getOptions\": getOptions,\n  \"getImages\": getImages,\n  \"decStepper\": decStepper\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperContainer);","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/dd/client/src/containers/completeProfile/stepper.js"],"names":["React","Component","useEffect","Stepper","getOptions","getImages","connect","decStepper","StepperContainer","props","user","id","handleBack","handleNext","images","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAAQC,SAAR,QAAwB,4BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChCP,EAAAA,SAAS,CAAEO,KAAD,IAAW;AACjB,QAAGA,KAAK,CAACC,IAAT,EAAc;AACVD,MAAAA,KAAK,CAACL,UAAN;AACAK,MAAAA,KAAK,CAACJ,SAAN,CAAgB,KAAKI,KAAL,CAAWC,IAAX,CAAgBC,EAAhC;AACH;AACJ,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMC,UAAU,GAAIH,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACF,UAAN;AACH,GAFD;;AAGA,SACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAE,KAAKK,UAA1B;AAAsC,IAAA,UAAU,EAAE,KAAKC,UAAvD;AAAmE,IAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAApF;AAA0F,IAAA,MAAM,EAAE,KAAKD,KAAL,CAAWK,MAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAbD,C,CAeA;AACA;AACQ;AACA;AACA;AACA;AACR;AACI;AACA;AACA;AACJ;AAEA;AACA;AACQ;AACA;AACA;AACR;AACA;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KACxB;AACI,UAAQA,KAAK,CAACN,IADlB;AAEI,YAAWM,KAAK,CAACF;AAFrB,CADwB,CAAxB;;AAKA,MAAMG,kBAAkB,GAAG;AACvB,gBAAcb,UADS;AAEvB,eAAcC,SAFS;AAGvB,gBAAcE;AAHS,CAA3B;AAOA,eAAeD,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,gBAA7C,CAAf","sourcesContent":["import React, { Component, useEffect } from 'react';\nimport Stepper from '../../components/completeProfile/stepper';\nimport {getOptions} from '../../actions/addInfoAction';\nimport {getImages} from '../../actions/imagesAction';\nimport {connect} from \"react-redux\";\nimport {decStepper} from '../../actions/stepperAction';\n\nconst StepperContainer = (props) => {\n    useEffect((props) => {\n        if(props.user){\n            props.getOptions();\n            props.getImages(this.props.user.id);\n        }\n    }, []);\n    const handleBack = (props) => {\n        props.decStepper();\n    }\n    return (\n        <Stepper handleBack={this.handleBack} handleNext={this.handleNext} user={this.props.user} images={this.props.images}/> \n    )\n}\n\n// class StepperContainer extends Component {\n//     componentDidMount = () => {\n        // if(this.props.user){\n        //     this.props.getOptions();\n        //     this.props.getImages(this.props.user.id);\n        // }\n//     }\n    // handleBack (){\n    //     this.props.decStepper();\n    // }\n//     handleNext (){\n        \n//     }\n//     render() {\n        // return (\n        //     <Stepper handleBack={this.handleBack} handleNext={this.handleNext} user={this.props.user} images={this.props.images}/> \n        // )\n//     }\n// }\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \"images\" : state.images\n});\nconst mapDispatchToProps = {\n    \"getOptions\": getOptions,\n    \"getImages\" : getImages,\n    \"decStepper\": decStepper,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperContainer);"]},"metadata":{},"sourceType":"module"}