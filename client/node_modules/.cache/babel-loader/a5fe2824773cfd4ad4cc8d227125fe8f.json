{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AddInfo from '../../components/completeProfile/addInfo';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport { incStepper } from '../../actions/stepperAction';\nimport { createOption, addInfo } from '../../actions/addInfoAction';\n\nconst validate = values => {\n  console.log(values);\n  const errors = {};\n  const requiredFields = ['gender', 'sexOrient', 'birthday', 'bio'];\n  const requiredArr = ['interests'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  requiredArr.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required !';\n    }\n  });\n  if (values.bio && !/^.{1,200}$/.test(values.bio)) errors.bio = 'maximum 200 charachters';\n  if (values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday)) errors.birthday = 'Invalid date !';\n  let today = new Date();\n  let birthDate = new Date(values.birthday);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  let m = today.getMonth() - birthDate.getMonth();\n\n  if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n  }\n\n  if (age < 18) errors.birthday = \"Come back when you're 18 ;)\";\n  if (age > 120) errors.birthday = 'Invalid age !';\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  'values': state.form.values,\n  'selectOptions': state.select.selectOptions,\n  'selectLoading': state.select.selectLoading,\n  'selectError': state.select.error,\n  'id': state.user.id\n});\n\nconst mapDispatchToProps = {\n  \"addInfo\": addInfo,\n  \"incStepper\": incStepper,\n  \"createOption\": createOption\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(values => {\n    dispatchProps.addInfo(values, stateProps.id);\n  })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\nlet AddInfoContainer = reduxForm({\n  form: \"addInfo\",\n  \"destroyOnUnmount\": false,\n  validate\n})(connectedAddInfoContainer);\nAddInfoContainer = connect(state => ({\n  initialValues: {\n    gender: state.user.gender,\n    sexOrient: state.user.sexOrient,\n    birthday: state.user.birthday,\n    bio: state.user.bio,\n    interests: state.user.interests\n  }\n}))(AddInfoContainer);\nexport default AddInfoContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/completeProfile/addInfo.js"],"names":["AddInfo","connect","reduxForm","incStepper","createOption","addInfo","validate","values","console","log","errors","requiredFields","requiredArr","forEach","field","trim","bio","test","birthday","today","Date","birthDate","age","getFullYear","m","getMonth","getDate","mapStateToProps","state","form","select","selectOptions","selectLoading","error","user","id","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","connectedAddInfoContainer","AddInfoContainer","initialValues","gender","sexOrient","interests"],"mappings":"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","sourcesContent":["import AddInfo from '../../components/completeProfile/addInfo';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport {incStepper} from '../../actions/stepperAction';\nimport {createOption, addInfo} from '../../actions/addInfoAction';\n\nconst validate = (values) => {\n    console.log(values);\n    const errors = {};\n    const requiredFields = [\n        'gender',\n        'sexOrient',\n        'birthday',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n    if(values.bio && !/^.{1,200}$/.test(values.bio))\n        errors.bio = 'maximum 200 charachters';\n\n    if(values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday))\n        errors.birthday = 'Invalid date !';\n    let today = new Date();\n    let birthDate = new Date(values.birthday);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    let m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    if(age < 18)\n        errors.birthday = \"Come back when you're 18 ;)\"\n    if(age > 120)\n        errors.birthday = 'Invalid age !'\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    'values' : state.form.values,\n    'selectOptions': state.select.selectOptions,\n    'selectLoading': state.select.selectLoading,\n    'selectError' : state.select.error,\n    'id': state.user.id,\n});\nconst mapDispatchToProps = {\n    \"addInfo\": addInfo,\n    \"incStepper\": incStepper,\n    \"createOption\": createOption\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n\n    \"handleSubmit\" : otherProps.handleSubmit((values) => {\n        dispatchProps.addInfo(values, stateProps.id);\n    }),\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\n\nlet AddInfoContainer = reduxForm ({\n    form : \"addInfo\",\n    \"destroyOnUnmount\": false,\n    validate,\n})(connectedAddInfoContainer);\n\nAddInfoContainer = connect(\n    state => ({\n        initialValues: {\n            gender: state.user.gender,\n            sexOrient: state.user.sexOrient,\n            birthday: state.user.birthday,\n            bio: state.user.bio,\n            interests: state.user.interests,\n        },\n    }),\n)(AddInfoContainer);\n\nexport default AddInfoContainer;"]},"metadata":{},"sourceType":"module"}