{"ast":null,"code":"import _objectSpread from \"/Volumes/Storage/goinfre/isifeddi/M/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Volumes/Storage/goinfre/isifeddi/M/client/src/containers/Profile/profileInfo.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport ProfileInfo from '../../components/Profile/profileInfo';\nimport Age from '../../components/commun/age';\nimport { editInfo } from '../../actions/profileAction';\n\nlet profileInfoContainer = props => {\n  return React.createElement(ProfileInfo, {\n    handleSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = [\"firstname\", \"lastname\", \"username\", \"email\", 'gender', 'birthday', 'sexOrient', 'bio'];\n  const requiredArr = ['interests'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  requiredArr.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required !';\n    }\n  });\n  if (values.bio && !/^.{1,200}$/.test(values.bio)) errors.bio = 'maximum 200 characters';\n  if (values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday)) errors.birthday = 'Invalid date !';\n  const age = Age(values.birthday);\n  if (age < 18) errors.birthday = \"Come back when you're 18 ;)\";\n  if (age > 120) errors.birthday = 'Invalid age !';\n  if (values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username)) errors.username = 'Username can contain 2-20 characters, letters (a-z), numbers, \"_\" and \"-\"';\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) errors.email = \"Invalid email address !\";\n  if (values.password && !/\\d/.test(values.password)) errors.password = \"Password must contain a number !\";else if (values.password && !/[A-Z]/.test(values.password)) errors.password = \"Password must contain an uppercase letter !\";else if (values.password && !/[a-z]/.test(values.password)) errors.password = \"Password must contain a lowercase letter !\";else if (values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password)) errors.password = \"Password must contain a special character !\";else if (values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password)) errors.password = \"Password must contain at least 8 characters !\";\n  if ('password' in values && !values.confirmPassword) errors.confirmPassword = \"Required !\";\n  if (values.confirmPassword && values.password !== values.confirmPassword) errors.confirmPassword = \"Passwords does not match !\";\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = {\n  \"editInfo\": editInfo\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(values => {\n    //console.log(values);\n    dispatchProps.editInfo(values);\n  })\n});\n\nprofileInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(profileInfoContainer);\nprofileInfoContainer = reduxForm({\n  'form': 'profileInfo',\n  touchOnBlur: ['password', 'confirmPassword'],\n  validate\n})(profileInfoContainer);\nprofileInfoContainer = connect(state => ({\n  initialValues: {\n    firstname: state.user.firstname,\n    lastname: state.user.lastname,\n    username: state.user.username,\n    email: state.user.email,\n    gender: state.user.gender,\n    birthday: state.user.birthday,\n    sexOrient: state.user.sexOrient,\n    interests: state.user.interests,\n    bio: state.user.bio\n  }\n}))(profileInfoContainer);\nexport default profileInfoContainer;","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/M/client/src/containers/Profile/profileInfo.js"],"names":["React","connect","reduxForm","ProfileInfo","Age","editInfo","profileInfoContainer","props","handleSubmit","validate","values","errors","requiredFields","requiredArr","forEach","field","trim","bio","test","birthday","age","username","email","password","confirmPassword","mapStateToProps","state","user","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","touchOnBlur","initialValues","firstname","lastname","gender","sexOrient","interests"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport ProfileInfo from '../../components/Profile/profileInfo';\nimport Age from '../../components/commun/age';\nimport {editInfo} from '../../actions/profileAction';\n\nlet profileInfoContainer = (props) => {\n    return(\n        <ProfileInfo \n            handleSubmit={props.handleSubmit}\n        />\n    )\n}\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        \"firstname\",\n        \"lastname\",\n        \"username\",\n        \"email\",\n        'gender',\n        'birthday',\n        'sexOrient',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.bio && !/^.{1,200}$/.test(values.bio))\n        errors.bio = 'maximum 200 characters';\n\n    if(values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday))\n        errors.birthday = 'Invalid date !';\n\n    const age = Age(values.birthday)\n    if(age < 18)\n        errors.birthday = \"Come back when you're 18 ;)\";\n    if(age > 120)\n        errors.birthday = 'Invalid age !';\n    if(values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username))\n        errors.username = 'Username can contain 2-20 characters, letters (a-z), numbers, \"_\" and \"-\"';\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))\n        errors.email = \"Invalid email address !\";\n    if(values.password && !/\\d/.test(values.password))\n        errors.password = \"Password must contain a number !\";\n    else if(values.password && !/[A-Z]/.test(values.password))\n        errors.password = \"Password must contain an uppercase letter !\";\n    else if(values.password && !/[a-z]/.test(values.password))\n        errors.password = \"Password must contain a lowercase letter !\";\n    else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n        errors.password = \"Password must contain a special character !\";\n    else if(values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password))\n        errors.password = \"Password must contain at least 8 characters !\";\n    if('password' in values && !values.confirmPassword)\n        errors.confirmPassword = \"Required !\";\n    if(values.confirmPassword && values.password !== values.confirmPassword)\n        errors.confirmPassword = \"Passwords does not match !\";\n    return errors;\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\nconst mapDispatchToProps = {\n    \"editInfo\": editInfo,\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((values) => {\n        //console.log(values);\n        dispatchProps.editInfo(values);\n    }),\n});\n\nprofileInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(profileInfoContainer);\n\nprofileInfoContainer = reduxForm({\n    'form' :'profileInfo',\n    touchOnBlur:['password', 'confirmPassword'],\n    validate,\n})(profileInfoContainer);\n\nprofileInfoContainer = connect(\n    state => ({\n        initialValues: {\n            firstname: state.user.firstname,\n            lastname: state.user.lastname,\n            username: state.user.username,\n            email: state.user.email,\n            gender: state.user.gender,\n            birthday: state.user.birthday,\n            sexOrient: state.user.sexOrient,\n            interests: state.user.interests,\n            bio: state.user.bio,\n        },\n    }),\n)(profileInfoContainer);\n\nexport default profileInfoContainer;\n"]},"metadata":{},"sourceType":"module"}