{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { ResetPasswordSuccess, ResetPasswordError } from \"../actions/resetPasswordAction\";\nimport axios from 'axios';\n\nconst resetPass = function* resetPass({\n  data\n}) {\n  try {\n    const response = yield axios.post('http://localhost:5000/resetPassword', {\n      email: data.data.email\n    });\n    console.log(response.data);\n\n    if (response.data.sent) {\n      yield put(ResetPasswordSuccess());\n    } else if (response.data.error === 'Email not found') {\n      yield put(ResetPasswordError('Email not found'));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(ResetPasswordError('Error sending the email, please retry'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"RESET_PASSWORD\", resetPass);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/resetPasswordSaga.js"],"names":["takeLatest","put","ResetPasswordSuccess","ResetPasswordError","axios","resetPass","data","response","post","email","console","log","sent","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,QAA8B,oBAA9B;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,gCAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GACb,UAAUA,SAAV,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,qCAAX,EAAkD;AAACC,MAAAA,KAAK,EAAEH,IAAI,CAACA,IAAL,CAAUG;AAAlB,KAAlD,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACD,IAArB;;AACA,QAAGC,QAAQ,CAACD,IAAT,CAAcM,IAAjB,EACA;AACE,YAAMX,GAAG,CAACC,oBAAoB,EAArB,CAAT;AACD,KAHD,MAIK,IAAGK,QAAQ,CAACD,IAAT,CAAcO,KAAd,KAAwB,iBAA3B,EACL;AACE,YAAMZ,GAAG,CAACE,kBAAkB,CAAC,iBAAD,CAAnB,CAAT;AACD;AACF,GAXD,CAWC,OAAOU,KAAP,EAAc;AACb,QAAIA,KAAK,CAACN,QAAV,EAAoB;AAClB,YAAMN,GAAG,CAACE,kBAAkB,CAAC,uCAAD,CAAnB,CAAT;AACD;AACF;AACF,CAlBH;;AAoBA,eAAe,aAAa;AAC1B,QAAMH,UAAU,CAAC,gBAAD,EAAmBK,SAAnB,CAAhB;AACD","sourcesContent":["import {takeLatest, put} from \"redux-saga/effects\";\nimport { ResetPasswordSuccess, ResetPasswordError } from \"../actions/resetPasswordAction\";\nimport axios from 'axios';\n\nconst resetPass =\n  function *resetPass ({data}) {\n    try {\n      const response = yield axios.post('http://localhost:5000/resetPassword', {email: data.data.email});\n      console.log(response.data);\n      if(response.data.sent)\n      {\n        yield put(ResetPasswordSuccess());\n      }\n      else if(response.data.error === 'Email not found')\n      {\n        yield put(ResetPasswordError('Email not found'));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(ResetPasswordError('Error sending the email, please retry'));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"RESET_PASSWORD\", resetPass);\n}"]},"metadata":{},"sourceType":"module"}