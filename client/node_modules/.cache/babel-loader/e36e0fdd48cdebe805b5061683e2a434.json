{"ast":null,"code":"var _jsxFileName = \"/Volumes/Storage/goinfre/isifeddi/Matcha/client/src/containers/completeProfile/localisation.js\";\nimport React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport { connect } from \"react-redux\";\nimport { getLoc, addLocationSuccess } from '../../actions/addInfoAction';\n\nclass LocalisationContainer extends Component {\n  componentDidMount() {\n    this.props.getLoc();\n  }\n\n  render() {\n    const userLocation = {\n      lat: parseFloat(this.props.user.latitude),\n      lng: parseFloat(this.props.user.longitude)\n    };\n\n    const setLocation = ({\n      lat,\n      lng\n    }) => {\n      this.props.addLocationSuccess({\n        lat,\n        lng\n      });\n    };\n\n    if (!this.props.user.lat) return null;\n    return React.createElement(Localisation, {\n      setLocation: setLocation,\n      userL: userLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  \"user\": state.user\n});\n\nconst mapDispatchToProps = {\n  \"getLoc\": getLoc,\n  \"addLocationSuccess\": addLocationSuccess\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalisationContainer);","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/Matcha/client/src/containers/completeProfile/localisation.js"],"names":["React","Component","Localisation","connect","getLoc","addLocationSuccess","LocalisationContainer","componentDidMount","props","render","userLocation","lat","parseFloat","user","latitude","lng","longitude","setLocation","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,kBAAhB,QAAyC,6BAAzC;;AAEA,MAAMC,qBAAN,SAAoCL,SAApC,CAA6C;AACzCM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,MAAX;AACH;;AACDK,EAAAA,MAAM,GAAE;AACJ,UAAMC,YAAY,GAAG;AAACC,MAAAA,GAAG,EAAEC,UAAU,CAAC,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,QAAjB,CAAhB;AAA4CC,MAAAA,GAAG,EAAEH,UAAU,CAAC,KAAKJ,KAAL,CAAWK,IAAX,CAAgBG,SAAjB;AAA3D,KAArB;;AAEA,UAAMC,WAAW,GAAG,CAAC;AAACN,MAAAA,GAAD;AAAMI,MAAAA;AAAN,KAAD,KAAgB;AAChC,WAAKP,KAAL,CAAWH,kBAAX,CAA8B;AAACM,QAAAA,GAAD;AAAMI,QAAAA;AAAN,OAA9B;AACH,KAFD;;AAIA,QAAG,CAAC,KAAKP,KAAL,CAAWK,IAAX,CAAgBF,GAApB,EACI,OAAO,IAAP;AAEJ,WACI,oBAAC,YAAD;AAAc,MAAA,WAAW,EAAEM,WAA3B;AAAwC,MAAA,KAAK,EAAEP,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAjBwC;;AAmB7C,MAAMQ,eAAe,GAAIC,KAAD,KACxB;AACI,UAAQA,KAAK,CAACN;AADlB,CADwB,CAAxB;;AAIA,MAAMO,kBAAkB,GAAG;AACvB,YAAUhB,MADa;AAEvB,wBAAsBC;AAFC,CAA3B;AAKA,eAAeF,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,qBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport {connect} from \"react-redux\";\nimport {getLoc, addLocationSuccess} from '../../actions/addInfoAction';\n\nclass LocalisationContainer extends Component{\n    componentDidMount(){\n        this.props.getLoc();\n    }\n    render(){\n        const userLocation = {lat: parseFloat(this.props.user.latitude), lng: parseFloat(this.props.user.longitude)}\n\n        const setLocation = ({lat, lng}) => {\n            this.props.addLocationSuccess({lat, lng});\n        }\n\n        if(!this.props.user.lat) \n            return null;\n\n        return (\n            <Localisation setLocation={setLocation} userL={userLocation}/>\n        )\n    }\n}\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n});\nconst mapDispatchToProps = {\n    \"getLoc\": getLoc,\n    \"addLocationSuccess\": addLocationSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalisationContainer);"]},"metadata":{},"sourceType":"module"}