{"ast":null,"code":"var _jsxFileName = \"/Users/isifeddi/Desktop/Matcha/client/src/components/completeProfile/addInfo.js\";\nimport React from 'react';\nimport { Field } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel'; //import Chip from '@material-ui/core/Chip';\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  add: {\n    margin: theme.spacing(1, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nconst RadioGroup = props => {\n  const input = props.input,\n        meta = props.meta,\n        options = props.options;\n  const hasError = meta.touched && meta.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, options.map(o => React.createElement(\"label\", {\n    key: o.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Radio, Object.assign({}, input, {\n    checked: o.value === input.value,\n    value: o.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), o.title)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), hasError && React.createElement(\"span\", {\n    style: {\n      fontSize: '0.75rem',\n      color: '#ff3d2e'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, meta.error));\n};\n\nconst renderField = ({\n  rows,\n  type,\n  input,\n  label,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(TextField, Object.assign({}, input, {\n  type: type,\n  label: label,\n  error: touched && error,\n  helperText: touched && error,\n  variant: \"outlined\",\n  fullWidth: true,\n  multiline: true,\n  rows: rows,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}));\n\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: \"Pulp Fiction\",\n  year: 1994\n}, {\n  title: \"The Lord of the Rings: The Return of the King\",\n  year: 2003\n}, {\n  title: \"The Good, the Bad and the Ugly\",\n  year: 1966\n}, {\n  title: \"Fight Club\",\n  year: 1999\n}, {\n  title: \"The Lord of the Rings: The Fellowship of the Ring\",\n  year: 2001\n}, {\n  title: \"Star Wars: Episode V - The Empire Strikes Back\",\n  year: 1980\n}, {\n  title: \"Forrest Gump\",\n  year: 1994\n}, {\n  title: \"Inception\",\n  year: 2010\n}, {\n  title: \"The Lord of the Rings: The Two Towers\",\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: \"Goodfellas\",\n  year: 1990\n}, {\n  title: \"The Matrix\",\n  year: 1999\n}, {\n  title: \"Seven Samurai\",\n  year: 1954\n}, {\n  title: \"Star Wars: Episode IV - A New Hope\",\n  year: 1977\n}, {\n  title: \"City of God\",\n  year: 2002\n}, {\n  title: \"Se7en\",\n  year: 1995\n}, {\n  title: \"The Silence of the Lambs\",\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: \"Life Is Beautiful\",\n  year: 1997\n}, {\n  title: \"The Usual Suspects\",\n  year: 1995\n}, {\n  title: \"Léon: The Professional\",\n  year: 1994\n}, {\n  title: \"Spirited Away\",\n  year: 2001\n}, {\n  title: \"Saving Private Ryan\",\n  year: 1998\n}, {\n  title: \"Once Upon a Time in the West\",\n  year: 1968\n}, {\n  title: \"American History X\",\n  year: 1998\n}, {\n  title: \"Interstellar\",\n  year: 2014\n}, {\n  title: \"Casablanca\",\n  year: 1942\n}, {\n  title: \"City Lights\",\n  year: 1931\n}, {\n  title: \"Psycho\",\n  year: 1960\n}, {\n  title: \"The Green Mile\",\n  year: 1999\n}, {\n  title: \"The Intouchables\",\n  year: 2011\n}, {\n  title: \"Modern Times\",\n  year: 1936\n}, {\n  title: \"Raiders of the Lost Ark\",\n  year: 1981\n}, {\n  title: \"Rear Window\",\n  year: 1954\n}, {\n  title: \"The Pianist\",\n  year: 2002\n}, {\n  title: \"The Departed\",\n  year: 2006\n}, {\n  title: \"Terminator 2: Judgment Day\",\n  year: 1991\n}, {\n  title: \"Back to the Future\",\n  year: 1985\n}, {\n  title: \"Whiplash\",\n  year: 2014\n}, {\n  title: \"Gladiator\",\n  year: 2000\n}, {\n  title: \"Memento\",\n  year: 2000\n}, {\n  title: \"The Prestige\",\n  year: 2006\n}, {\n  title: \"The Lion King\",\n  year: 1994\n}, {\n  title: \"Apocalypse Now\",\n  year: 1979\n}, {\n  title: \"Alien\",\n  year: 1979\n}, {\n  title: \"Sunset Boulevard\",\n  year: 1950\n}, {\n  title: \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n  year: 1964\n}, {\n  title: \"The Great Dictator\",\n  year: 1940\n}, {\n  title: \"Cinema Paradiso\",\n  year: 1988\n}, {\n  title: \"The Lives of Others\",\n  year: 2006\n}, {\n  title: \"Grave of the Fireflies\",\n  year: 1988\n}, {\n  title: \"Paths of Glory\",\n  year: 1957\n}, {\n  title: \"Django Unchained\",\n  year: 2012\n}, {\n  title: \"The Shining\",\n  year: 1980\n}, {\n  title: \"WALL·E\",\n  year: 2008\n}, {\n  title: \"American Beauty\",\n  year: 1999\n}, {\n  title: \"The Dark Knight Rises\",\n  year: 2012\n}, {\n  title: \"Princess Mononoke\",\n  year: 1997\n}, {\n  title: \"Aliens\",\n  year: 1986\n}, {\n  title: \"Oldboy\",\n  year: 2003\n}, {\n  title: \"Once Upon a Time in America\",\n  year: 1984\n}, {\n  title: \"Witness for the Prosecution\",\n  year: 1957\n}, {\n  title: \"Das Boot\",\n  year: 1981\n}, {\n  title: \"Citizen Kane\",\n  year: 1941\n}, {\n  title: \"North by Northwest\",\n  year: 1959\n}, {\n  title: \"Vertigo\",\n  year: 1958\n}, {\n  title: \"Star Wars: Episode VI - Return of the Jedi\",\n  year: 1983\n}, {\n  title: \"Reservoir Dogs\",\n  year: 1992\n}, {\n  title: \"Braveheart\",\n  year: 1995\n}, {\n  title: \"M\",\n  year: 1931\n}, {\n  title: \"Requiem for a Dream\",\n  year: 2000\n}, {\n  title: \"Amélie\",\n  year: 2001\n}, {\n  title: \"A Clockwork Orange\",\n  year: 1971\n}, {\n  title: \"Like Stars on Earth\",\n  year: 2007\n}, {\n  title: \"Taxi Driver\",\n  year: 1976\n}, {\n  title: \"Lawrence of Arabia\",\n  year: 1962\n}, {\n  title: \"Double Indemnity\",\n  year: 1944\n}, {\n  title: \"Eternal Sunshine of the Spotless Mind\",\n  year: 2004\n}, {\n  title: \"Amadeus\",\n  year: 1984\n}, {\n  title: \"To Kill a Mockingbird\",\n  year: 1962\n}, {\n  title: \"Toy Story 3\",\n  year: 2010\n}, {\n  title: \"Logan\",\n  year: 2017\n}, {\n  title: \"Full Metal Jacket\",\n  year: 1987\n}, {\n  title: \"Dangal\",\n  year: 2016\n}, {\n  title: \"The Sting\",\n  year: 1973\n}, {\n  title: \"2001: A Space Odyssey\",\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: \"Toy Story\",\n  year: 1995\n}, {\n  title: \"Bicycle Thieves\",\n  year: 1948\n}, {\n  title: \"The Kid\",\n  year: 1921\n}, {\n  title: \"Inglourious Basterds\",\n  year: 2009\n}, {\n  title: \"Snatch\",\n  year: 2000\n}, {\n  title: \"3 Idiots\",\n  year: 2009\n}, {\n  title: \"Monty Python and the Holy Grail\",\n  year: 1975\n}];\n\nconst AddInfo = props => {\n  const handleSubmit = props.handleSubmit;\n  const classes = useStyles();\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Additional infos\"), React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(Field, {\n    component: RadioGroup,\n    name: \"gender\",\n    required: true,\n    options: [{\n      title: 'Male',\n      value: 'male'\n    }, {\n      title: 'Female',\n      value: 'female'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Match with\"), React.createElement(Field, {\n    component: RadioGroup,\n    name: \"sexOrient\",\n    required: true,\n    options: [{\n      title: 'Men ',\n      value: 'men'\n    }, {\n      title: 'Women',\n      value: 'women'\n    }, {\n      title: 'Both',\n      value: 'both'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"bio\",\n    component: renderField,\n    label: \"Bio\",\n    type: \"text\",\n    rows: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    multiple: true,\n    id: \"tags-outlined\",\n    options: top100Films,\n    getOptionLabel: option => option.title,\n    filterSelectedOptions: true,\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      label: \"filterSelectedOptions\",\n      placeholder: \"Favorites\",\n      margin: \"normal\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    className: classes.submit,\n    fullWidth: true,\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    name: \"submit\",\n    value: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Next\"))))));\n};\n\nexport default AddInfo;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/components/completeProfile/addInfo.js"],"names":["React","Field","Button","CssBaseline","Grid","Typography","makeStyles","Container","TextField","Radio","FormLabel","Autocomplete","useStyles","theme","paper","display","flexDirection","alignItems","width","form","marginTop","spacing","submit","margin","backgroundColor","palette","secondary","main","add","RadioGroup","props","input","meta","options","hasError","touched","error","map","o","value","title","fontSize","color","renderField","rows","type","label","top100Films","year","AddInfo","handleSubmit","classes","option","params"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport {Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\n//import Chip from '@material-ui/core/Chip';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles(theme => ({\n  \n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(2, 0, 2),\n        backgroundColor: theme.palette.secondary.main\n    },\n    add: {\n        margin: theme.spacing(1, 0, 2),\n        backgroundColor: theme.palette.secondary.main\n    },\n}));\n\nconst RadioGroup = (props) => {\n    const { input, meta, options } = props\n    const hasError = meta.touched && meta.error;\n\n    return (\n      <div>\n        {options.map(o => <label key={o.value}> \n          <Radio {...input}  checked={o.value === input.value} value={o.value} />\n          {o.title}</label>)}<br/>\n        {hasError && <span style={{fontSize: '0.75rem', color:'#ff3d2e'}}>{meta.error}</span>}\n      </div>\n    );\n}\nconst renderField = (\n    {rows, type, input, label, meta : { touched, error}}\n    ) => (\n        <TextField\n            {...input}\n            type = {type}\n            label = {label}\n            error = {touched && error}\n            helperText={touched && error}\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            rows={rows}\n        />\n)\n\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"Léon: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n  { title: \"Casablanca\", year: 1942 },\n  { title: \"City Lights\", year: 1931 },\n  { title: \"Psycho\", year: 1960 },\n  { title: \"The Green Mile\", year: 1999 },\n  { title: \"The Intouchables\", year: 2011 },\n  { title: \"Modern Times\", year: 1936 },\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\n  { title: \"Rear Window\", year: 1954 },\n  { title: \"The Pianist\", year: 2002 },\n  { title: \"The Departed\", year: 2006 },\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\n  { title: \"Back to the Future\", year: 1985 },\n  { title: \"Whiplash\", year: 2014 },\n  { title: \"Gladiator\", year: 2000 },\n  { title: \"Memento\", year: 2000 },\n  { title: \"The Prestige\", year: 2006 },\n  { title: \"The Lion King\", year: 1994 },\n  { title: \"Apocalypse Now\", year: 1979 },\n  { title: \"Alien\", year: 1979 },\n  { title: \"Sunset Boulevard\", year: 1950 },\n  {\n    title:\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n    year: 1964\n  },\n  { title: \"The Great Dictator\", year: 1940 },\n  { title: \"Cinema Paradiso\", year: 1988 },\n  { title: \"The Lives of Others\", year: 2006 },\n  { title: \"Grave of the Fireflies\", year: 1988 },\n  { title: \"Paths of Glory\", year: 1957 },\n  { title: \"Django Unchained\", year: 2012 },\n  { title: \"The Shining\", year: 1980 },\n  { title: \"WALL·E\", year: 2008 },\n  { title: \"American Beauty\", year: 1999 },\n  { title: \"The Dark Knight Rises\", year: 2012 },\n  { title: \"Princess Mononoke\", year: 1997 },\n  { title: \"Aliens\", year: 1986 },\n  { title: \"Oldboy\", year: 2003 },\n  { title: \"Once Upon a Time in America\", year: 1984 },\n  { title: \"Witness for the Prosecution\", year: 1957 },\n  { title: \"Das Boot\", year: 1981 },\n  { title: \"Citizen Kane\", year: 1941 },\n  { title: \"North by Northwest\", year: 1959 },\n  { title: \"Vertigo\", year: 1958 },\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\n  { title: \"Reservoir Dogs\", year: 1992 },\n  { title: \"Braveheart\", year: 1995 },\n  { title: \"M\", year: 1931 },\n  { title: \"Requiem for a Dream\", year: 2000 },\n  { title: \"Amélie\", year: 2001 },\n  { title: \"A Clockwork Orange\", year: 1971 },\n  { title: \"Like Stars on Earth\", year: 2007 },\n  { title: \"Taxi Driver\", year: 1976 },\n  { title: \"Lawrence of Arabia\", year: 1962 },\n  { title: \"Double Indemnity\", year: 1944 },\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\n  { title: \"Amadeus\", year: 1984 },\n  { title: \"To Kill a Mockingbird\", year: 1962 },\n  { title: \"Toy Story 3\", year: 2010 },\n  { title: \"Logan\", year: 2017 },\n  { title: \"Full Metal Jacket\", year: 1987 },\n  { title: \"Dangal\", year: 2016 },\n  { title: \"The Sting\", year: 1973 },\n  { title: \"2001: A Space Odyssey\", year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: \"Toy Story\", year: 1995 },\n  { title: \"Bicycle Thieves\", year: 1948 },\n  { title: \"The Kid\", year: 1921 },\n  { title: \"Inglourious Basterds\", year: 2009 },\n  { title: \"Snatch\", year: 2000 },\n  { title: \"3 Idiots\", year: 2009 },\n  { title: \"Monty Python and the Holy Grail\", year: 1975 }\n];\n\n\nconst AddInfo = (props) => {\n  const {handleSubmit} = props;\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      \n    <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Additional infos\n        </Typography>\n        \n        <form  className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Gender</FormLabel>\n              <Field component={RadioGroup} name=\"gender\" required={true} options={[\n                    { title: 'Male', value: 'male' },\n                    { title: 'Female', value: 'female' }\n                  ]}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <FormLabel component=\"legend\">Match with</FormLabel>\n              <Field component={RadioGroup} name=\"sexOrient\" required={true} options={[\n                    { title: 'Men '  , value: 'men'   },\n                    { title: 'Women', value: 'women' },\n                    { title :'Both' , value: 'both'  }\n                  ]}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                name=\"bio\"\n                component={renderField}\n                label=\"Bio\"\n                type = \"text\"\n                rows='4'\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n                  <Autocomplete\n                    multiple\n                    id=\"tags-outlined\"\n                    options={top100Films}\n                    getOptionLabel={option => option.title}\n                    filterSelectedOptions\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"filterSelectedOptions\"\n                        placeholder=\"Favorites\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Next</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      \n    </Container>\n  );\n}\n\nexport default AddInfo;"]},"metadata":{},"sourceType":"module"}