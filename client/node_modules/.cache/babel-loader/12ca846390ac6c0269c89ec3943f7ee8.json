{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess } from \"../actions/addInfoAction\";\nimport axios from 'axios';\n\nconst getSelectOptions = function* getSelectOptions() {\n  try {\n    const response = yield axios.post('http://localhost:5000/getOptions');\n\n    if (response.data) {\n      yield put(getOptionsSuccess(decoded.data));\n    } else {\n      yield put(getOptionsSuccess([]));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess([]));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/addInfoSaga.js"],"names":["takeLatest","put","getOptionsSuccess","axios","getSelectOptions","response","post","data","decoded","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GACpB,UAAUA,gBAAV,GAA8B;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,kCAAX,CAAxB;;AACA,QAAGD,QAAQ,CAACE,IAAZ,EACA;AACI,YAAMN,GAAG,CAACC,iBAAiB,CAACM,OAAO,CAACD,IAAT,CAAlB,CAAT;AACH,KAHD,MAKA;AACI,YAAMN,GAAG,CAACC,iBAAiB,CAAC,EAAD,CAAlB,CAAT;AACH;AACJ,GAVD,CAUC,OAAOO,KAAP,EAAc;AACb,QAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB,YAAMJ,GAAG,CAACC,iBAAiB,CAAC,EAAD,CAAlB,CAAT;AACD;AACF;AACF,CAjBH;;AAmBA,eAAe,aAAa;AAC1B,QAAMF,UAAU,CAAC,aAAD,EAAgBI,gBAAhB,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess} from \"../actions/addInfoAction\";\nimport axios from 'axios';\n\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/getOptions');\n        if(response.data)\n        {\n            yield put(getOptionsSuccess(decoded.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess([]));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess([]));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n}"]},"metadata":{},"sourceType":"module"}