{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/containers/SyncValidationForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.age) {\n    errors.age = 'Required';\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number';\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  return errors;\n};\n\nconst warn = values => {\n  const warnings = {};\n\n  if (values.age < 19) {\n    warnings.age = 'Hmm, you seem a bit young...';\n  }\n\n  return warnings;\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, warning))));\n\nconst SyncValidationForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        reset = props.reset,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderField,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"age\",\n    type: \"number\",\n    component: renderField,\n    label: \"Age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'syncValidation',\n  // a unique identifier for this form\n  validate,\n  // <--- validation function given to redux-form\n  warn // <--- warning function given to redux-form\n\n})(SyncValidationForm);","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/containers/SyncValidationForm.js"],"names":["React","Field","reduxForm","validate","values","errors","username","length","email","test","age","isNaN","Number","warn","warnings","renderField","input","label","type","meta","touched","error","warning","SyncValidationForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nconst validate = values => {\n  const errors = {}\n  if (!values.username) {\n    errors.username = 'Required'\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less'\n  }\n  if (!values.email) {\n    errors.email = 'Required'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.age) {\n    errors.age = 'Required'\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number'\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old'\n  }\n  return errors\n}\n\nconst warn = values => {\n  const warnings = {}\n  if (values.age < 19) {\n    warnings.age = 'Hmm, you seem a bit young...'\n  }\n  return warnings\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\nconst SyncValidationForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field name=\"username\" type=\"text\" component={renderField} label=\"Username\"/>\n      <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\"/>\n      <Field name=\"age\" type=\"number\" component={renderField} label=\"Age\"/>\n      <div>\n        <button type=\"submit\" disabled={submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'syncValidation',  // a unique identifier for this form\n  validate,                // <--- validation function given to redux-form\n  warn                     // <--- warning function given to redux-form\n})(SyncValidationForm)"]},"metadata":{},"sourceType":"module"}