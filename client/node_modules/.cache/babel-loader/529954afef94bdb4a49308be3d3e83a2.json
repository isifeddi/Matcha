{"ast":null,"code":"import { takeLatest, put, delay } from \"redux-saga/effects\";\nimport { push } from \"react-router-redux\";\nimport { ResetPasswordSuccess, ResetPasswordError } from \"../actions/resetPasswordAction\";\nimport axios from 'axios';\n\nconst resetPass = function* resetPass({\n  data\n}) {\n  try {\n    const response = yield axios.post('http://localhost:5000/resetPassword', {\n      token: data.token,\n      pass: data.form.password,\n      c_pass: data.form.confirmPassword\n    });\n    console.log(response.data);\n\n    if (response.data.reset) {\n      yield put(ResetPasswordSuccess());\n      yield delay(3000);\n      yield put(push('/login'));\n    } else {\n      yield put(ResetPasswordError(response.data.error));\n      yield delay(3000);\n      yield put(push('/login'));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(ResetPasswordError('Error, please retry'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"RESET_PASSWORD\", resetPass);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/resetPasswordSaga.js"],"names":["takeLatest","put","delay","push","ResetPasswordSuccess","ResetPasswordError","axios","resetPass","data","response","post","token","pass","form","password","c_pass","confirmPassword","console","log","reset","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,KAAzB,QAAqC,oBAArC;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,gCAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GACb,UAAUA,SAAV,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,qCAAX,EAAkD;AAACC,MAAAA,KAAK,EAAEH,IAAI,CAACG,KAAb;AAAoBC,MAAAA,IAAI,EAAEJ,IAAI,CAACK,IAAL,CAAUC,QAApC;AAA8CC,MAAAA,MAAM,EAAEP,IAAI,CAACK,IAAL,CAAUG;AAAhE,KAAlD,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACD,IAArB;;AACA,QAAGC,QAAQ,CAACD,IAAT,CAAcW,KAAjB,EACA;AACE,YAAMlB,GAAG,CAACG,oBAAoB,EAArB,CAAT;AACA,YAAMF,KAAK,CAAC,IAAD,CAAX;AACA,YAAMD,GAAG,CAACE,IAAI,CAAC,QAAD,CAAL,CAAT;AACD,KALD,MAOA;AACE,YAAMF,GAAG,CAACI,kBAAkB,CAACI,QAAQ,CAACD,IAAT,CAAcY,KAAf,CAAnB,CAAT;AACA,YAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,YAAMD,GAAG,CAACE,IAAI,CAAC,QAAD,CAAL,CAAT;AACD;AACF,GAfD,CAeC,OAAOiB,KAAP,EAAc;AACb,QAAIA,KAAK,CAACX,QAAV,EAAoB;AAClB,YAAMR,GAAG,CAACI,kBAAkB,CAAC,qBAAD,CAAnB,CAAT;AACD;AACF;AACF,CAtBH;;AAwBA,eAAe,aAAa;AAC1B,QAAML,UAAU,CAAC,gBAAD,EAAmBO,SAAnB,CAAhB;AACD","sourcesContent":["import {takeLatest, put, delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport { ResetPasswordSuccess, ResetPasswordError } from \"../actions/resetPasswordAction\";\nimport axios from 'axios';\n\nconst resetPass =\n  function *resetPass ({data}) {\n    try {\n      const response = yield axios.post('http://localhost:5000/resetPassword', {token: data.token, pass: data.form.password, c_pass: data.form.confirmPassword});\n      console.log(response.data);\n      if(response.data.reset)\n      {\n        yield put(ResetPasswordSuccess());\n        yield delay(3000);\n        yield put(push('/login'));\n      }\n      else\n      {\n        yield put(ResetPasswordError(response.data.error));\n        yield delay(3000);\n        yield put(push('/login'));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(ResetPasswordError('Error, please retry'));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"RESET_PASSWORD\", resetPass);\n}"]},"metadata":{},"sourceType":"module"}