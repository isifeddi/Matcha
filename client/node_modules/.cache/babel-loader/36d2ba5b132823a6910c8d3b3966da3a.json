{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { decodeTokenSuccess, decodeTokenError } from \"../actions/decodeAction\";\nimport { push } from \"react-router-redux\";\nimport axios from 'axios';\n\nconst decodeToken = function* decodeToken(token) {\n  try {\n    const To = token.token;\n    const decoded = yield axios.post('http://localhost:5000/decodeToken', {\n      token: To\n    });\n\n    if (decoded.data && decoded.data !== 'Invalid signature') {\n      yield put(decodeTokenSuccess(decoded.data));\n      console.log(decoded.data);\n      if (decoded.data.complete === 4) yield put(push(\"/\"));else yield put(push(\"/completeProfile\"));\n    } else {\n      yield put(decodeTokenError('error'));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(decodeTokenError(\"error.response.statusText\", \"error.response.status\"));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"DECODE_TOKEN\", decodeToken);\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/sagas/decodeSaga.js"],"names":["takeLatest","put","decodeTokenSuccess","decodeTokenError","push","axios","decodeToken","token","To","decoded","post","data","console","log","complete","error","response"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,yBAArD;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GACf,UAAUA,WAAV,CAAuBC,KAAvB,EAA8B;AAC5B,MAAI;AACA,UAAMC,EAAE,GAAGD,KAAK,CAACA,KAAjB;AACA,UAAME,OAAO,GAAI,MAAMJ,KAAK,CAACK,IAAN,CAAW,mCAAX,EAAgD;AAACH,MAAAA,KAAK,EAAEC;AAAR,KAAhD,CAAvB;;AACA,QAAGC,OAAO,CAACE,IAAR,IAAgBF,OAAO,CAACE,IAAR,KAAiB,mBAApC,EACA;AACI,YAAMV,GAAG,CAACC,kBAAkB,CAACO,OAAO,CAACE,IAAT,CAAnB,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACE,IAApB;AACA,UAAGF,OAAO,CAACE,IAAR,CAAaG,QAAb,KAA0B,CAA7B,EACE,MAAMb,GAAG,CAACG,IAAI,CAAC,GAAD,CAAL,CAAT,CADF,KAGE,MAAMH,GAAG,CAACG,IAAI,CAAC,kBAAD,CAAL,CAAT;AACL,KARD,MAUA;AACI,YAAMH,GAAG,CAACE,gBAAgB,CAAC,OAAD,CAAjB,CAAT;AACH;AACJ,GAhBD,CAgBC,OAAOY,KAAP,EAAc;AACb,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAMf,GAAG,CAACE,gBAAgB,CAAC,2BAAD,EAA8B,uBAA9B,CAAjB,CAAT;AACD;AACF;AACF,CAvBH;;AAyBA,eAAe,aAAa;AAC1B,QAAMH,UAAU,CAAC,cAAD,EAAiBM,WAAjB,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport { decodeTokenSuccess, decodeTokenError } from \"../actions/decodeAction\";\nimport {push} from \"react-router-redux\";\nimport axios from 'axios';\n\nconst decodeToken =\n  function *decodeToken (token) {\n    try {\n        const To = token.token;\n        const decoded  = yield axios.post('http://localhost:5000/decodeToken', {token: To});\n        if(decoded.data && decoded.data !== 'Invalid signature')\n        {\n            yield put(decodeTokenSuccess(decoded.data));\n            console.log(decoded.data)\n            if(decoded.data.complete === 4)\n              yield put(push(\"/\"));\n            else\n              yield put(push(\"/completeProfile\"));\n        }\n        else\n        {\n            yield put(decodeTokenError('error'));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(decodeTokenError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"DECODE_TOKEN\", decodeToken);\n}"]},"metadata":{},"sourceType":"module"}