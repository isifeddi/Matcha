{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AddInfo from '../../components/completeProfile/addInfo'; //import {LoginAction} from '../../actions/loginAction';\n\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['gender', 'sexOrient', 'bio', 'interests'];\n  requiredFields.forEach(field => {\n    if (!Array.isArray(values[field])) {\n      if (!values[field] || !values[field].trim()) {\n        errors[field] = 'Required !';\n      }\n    } else {\n      if (!values[field] || !values[field].split()) {\n        errors[field] = 'Required !';\n      }\n    }\n  });\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  \"form\": state.form\n});\n\nconst mapDispatchToProps = {//\"addInfoAction\": AddInfoAction\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(form => {//dispatchProps.addInfoAction(form);\n  })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\nconst AddInfoContainer = reduxForm({\n  form: \"addInfo\",\n  \"destroyOnUnmount\": true,\n  validate\n})(connectedAddInfoContainer);\nexport default AddInfoContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/completeProfile/addInfo.js"],"names":["AddInfo","connect","reduxForm","validate","values","errors","requiredFields","forEach","field","Array","isArray","trim","split","mapStateToProps","state","form","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","connectedAddInfoContainer","AddInfoContainer"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,0CAApB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,QADmB,EAEnB,WAFmB,EAGnB,KAHmB,EAInB,WAJmB,CAAvB;AAMAA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAG,CAACC,KAAK,CAACC,OAAN,CAAcN,MAAM,CAACI,KAAD,CAApB,CAAJ,EAAiC;AAC7B,UAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcG,IAAd,EAAvB,EAA6C;AAC7CN,QAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACC;AACJ,KAJD,MAKI;AACA,UAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcI,KAAd,EAAvB,EAA8C;AAC9CP,QAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACC;AACJ;AACJ,GAXD;AAYA,SAAOH,MAAP;AACH,CArBD;;AAuBA,MAAMQ,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAACC;AADnB,CADwB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,CACvB;AADuB,CAA3B;;AAGA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAyBN,IAAD,IAAU,CAC/C;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMO,yBAAyB,GAAGrB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDjB,OAAxD,CAAlC;AAEA,MAAMuB,gBAAgB,GAAGrB,SAAS,CAAC;AAC/Ba,EAAAA,IAAI,EAAG,SADwB;AAE/B,sBAAoB,IAFW;AAG/BZ,EAAAA;AAH+B,CAAD,CAAT,CAItBmB,yBAJsB,CAAzB;AAMA,eAAeC,gBAAf","sourcesContent":["import AddInfo from '../../components/completeProfile/addInfo';\n//import {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'gender',\n        'sexOrient',\n        'bio',\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if(!Array.isArray(values[field])){\n            if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n            }\n        }\n        else{\n            if (!values[field] || !values[field].split()) {\n            errors[field] = 'Required !';\n            }\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n});\nconst mapDispatchToProps = {\n    //\"addInfoAction\": AddInfoAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        //dispatchProps.addInfoAction(form);\n    })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(AddInfo);\n\nconst AddInfoContainer = reduxForm({\n    form : \"addInfo\",\n    \"destroyOnUnmount\": true,\n    validate,\n})(connectedAddInfoContainer);\n\nexport default AddInfoContainer;"]},"metadata":{},"sourceType":"module"}