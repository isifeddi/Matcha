{"ast":null,"code":"import _slicedToArray from \"/Users/ibouroum/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/components/completeProfile/pictures.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container } from '@material-ui/core';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: 150,\n    position: 'center'\n  },\n  input: {\n    display: 'none'\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nconst Pictures = () => {\n  const classes = useStyles(); //const [selectedFile,setselectedFile] = React.useState(null);\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        imagePreviewUrl = _React$useState2[0],\n        setImagePreviewUrl = _React$useState2[1]; //const [uploadedFile, setUploadedFile] = useState({});\n\n\n  const fileChangedHandler = async event => {\n    let files = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.loadend = event => {\n      reader.readAsDataURL(event.target.files[0]);\n      setImagePreviewUrl(reader.result);\n    }; //setImagePreviewUrl(files);\n\n\n    const headers = {\n      'Content-Type': 'multipart/form-data'\n    };\n    const formData = new FormData();\n    formData.append('files', files);\n    axios.post('http://localhost:5000/uploadFile', formData, headers);\n    console.log(imagePreviewUrl);\n  };\n\n  const handleSubmit = () => {};\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    width: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"icon-button-file\",\n    type: \"file\",\n    onChange: fileChangedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(AddAPhotoIcon, {\n    color: \"secondary\",\n    style: {\n      fontSize: 70\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))), imagePreviewUrl && React.createElement(\"img\", {\n    src: imagePreviewUrl,\n    alt: \"icon\",\n    width: \"200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"flex-end\",\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    className: classes.submit,\n    fullWidth: true,\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    name: \"submit\",\n    value: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default Pictures; // setImagePreviewUrl(files);\n// const formData = new FormData();\n// formData.append('file',files);\n// try {\n//   const res = await axios.post('http://localhost:5000/uploadFile', formData, {\n//     headers: {\n//       'Content-Type': 'multipart/form-data'\n//     }\n//   });\n//   console.log(res)\n//   // const { fileName, filePath } = res.data;\n//   // setUploadedFile({ fileName, filePath });\n// } catch (err) {\n//   console.log(err);\n//   // if (err.response.status === 500) {\n//   //   console.log('There was a problem with the server');\n//   // } else {\n//   //   console.log(err.response.data.msg);\n//   // }\n// }\n//setselectedFile(files);\n// let reader  = new FileReader();\n// reader.onload = (event) => {\n//   reader.readAsDataURL(files);\n//   setImagePreviewUrl(reader.result);\n//const res =  axios.post('http://localhost:5000/uploadFile',{path : reader.result});","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/components/completeProfile/pictures.js"],"names":["React","useState","makeStyles","Grid","Container","AddAPhotoIcon","IconButton","Button","axios","useStyles","theme","card","height","position","input","display","submit","margin","spacing","backgroundColor","palette","secondary","main","Pictures","classes","imagePreviewUrl","setImagePreviewUrl","fileChangedHandler","event","files","target","reader","FileReader","loadend","readAsDataURL","result","headers","formData","FormData","append","post","console","log","handleSubmit","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container } from '@material-ui/core';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  card: {\n   height :150,\n    position : 'center',\n  },\n  input: {\n    display: 'none',\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main,\n}\n}));\nconst  Pictures = () => {\n  const classes = useStyles();\n  //const [selectedFile,setselectedFile] = React.useState(null);\n  const [imagePreviewUrl,setImagePreviewUrl] = React.useState();\n  //const [uploadedFile, setUploadedFile] = useState({});\n\n  const fileChangedHandler = async  event => {\n    let files  = event.target.files[0];\n    let reader  = new FileReader();\n    reader.loadend = (event) => {\n    reader.readAsDataURL(event.target.files[0]);\n    setImagePreviewUrl(reader.result);\n  }\n    //setImagePreviewUrl(files);\n    const headers = {'Content-Type': 'multipart/form-data'};\n    const formData = new FormData;\n    formData.append('files',files);\n    axios.post('http://localhost:5000/uploadFile',formData,headers)\n\n  console.log(imagePreviewUrl)\n}\n  const handleSubmit = () => {\n    \n  } \n\n  return (\n    <Container>\n      <Grid container  justify=\"center\" width>\n        <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\"  onChange={fileChangedHandler}/>\n        <label htmlFor=\"icon-button-file\">\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n            <AddAPhotoIcon color='secondary' style={{fontSize : 70}}/>\n          </IconButton>\n        </label>\n      </Grid>\n      {imagePreviewUrl && <img src={imagePreviewUrl} alt=\"icon\" width=\"200\" />}\n      <Grid item container alignItems=\"flex-end\" xs={3}>\n        <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Next</Button>\n      </Grid>\n    </Container>\n  )\n}\n  \nexport default Pictures;\n// setImagePreviewUrl(files);\n    // const formData = new FormData();\n    // formData.append('file',files);\n    // try {\n    //   const res = await axios.post('http://localhost:5000/uploadFile', formData, {\n    //     headers: {\n    //       'Content-Type': 'multipart/form-data'\n    //     }\n    //   });\n    //   console.log(res)\n    //   // const { fileName, filePath } = res.data;\n\n    //   // setUploadedFile({ fileName, filePath });\n\n    // } catch (err) {\n    //   console.log(err);\n    //   // if (err.response.status === 500) {\n    //   //   console.log('There was a problem with the server');\n    //   // } else {\n    //   //   console.log(err.response.data.msg);\n    //   // }\n    // }\n   //setselectedFile(files);\n    // let reader  = new FileReader();\n    // reader.onload = (event) => {\n    //   reader.readAsDataURL(files);\n    //   setImagePreviewUrl(reader.result);\n      //const res =  axios.post('http://localhost:5000/uploadFile',{path : reader.result});"]},"metadata":{},"sourceType":"module"}