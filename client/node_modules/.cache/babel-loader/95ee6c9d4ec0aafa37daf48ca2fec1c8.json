{"ast":null,"code":"import _objectSpread from \"/Volumes/Storage/goinfre/isifeddi/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, select } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoError, addLocationSuccess, addLocation } from \"../actions/addInfoAction\";\nimport { updateUserSuccess } from '../actions/userAction';\nimport axios from 'axios';\n\nconst getSelectOptions = function* getSelectOptions() {\n  try {\n    const response = yield axios.post('http://localhost:5000/getOptions');\n\n    if (response.data) {\n      yield put(getOptionsSuccess(response.data));\n    } else {\n      yield put(getOptionsSuccess());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess());\n    }\n  }\n};\n\nconst createSelectOption = function* createSelectOption(act) {\n  try {\n    const id = yield select(state => state.user.id);\n    const option = act.data.value;\n    const response = yield axios.post('http://localhost:5000/createOption', {\n      option: option,\n      id: id\n    });\n\n    if (response.data.created) {\n      yield put(createOptionSuccess(response.data.option));\n    } else {\n      yield put(createOptionError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nconst add_Info = function* add_Info({\n  data,\n  id\n}) {\n  try {\n    const info = _objectSpread({}, data, {\n      id\n    });\n\n    const inter = data.interests.map(item => item.value);\n    info.interests = inter;\n    const response = yield axios.post('http://localhost:5000/addInfo', info);\n\n    if (response.data.added) {\n      yield put(updateUserSuccess(response.data.uu));\n    } else {\n      yield put(addInfoError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nconst getLocation = function* getLocation() {\n  try {\n    const id = yield select(state => state.user.id);\n    const response = yield axios.post(\"http://localhost:5000/getLocation\", {\n      id: id\n    });\n\n    if (response.data) {\n      yield put(addLocationSuccess(response.data));\n    } else {\n      yield put(addInfoError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nconst AddLocation = function* AddLocation({\n  loc\n}) {\n  try {\n    console.log(loc);\n    const id = yield select(state => state.user.id);\n    const response = yield axios.post(\"http://localhost:5000/addLocation\", {\n      id: id\n    });\n\n    if (response.data) {\n      yield put(addLocation(response.data));\n    } else {\n      yield put(addInfoError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info);\n  yield takeLatest(\"GET_LOC\", getLocation);\n  yield takeLatest(\"ADD_LOCATION\", AddLocation);\n}","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/Matcha/client/src/sagas/addInfoSaga.js"],"names":["takeLatest","put","select","getOptionsSuccess","createOptionSuccess","createOptionError","addInfoError","addLocationSuccess","addLocation","updateUserSuccess","axios","getSelectOptions","response","post","data","error","createSelectOption","act","id","state","user","option","value","created","add_Info","info","inter","interests","map","item","added","uu","getLocation","AddLocation","loc","console","log"],"mappings":"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","sourcesContent":["import { takeLatest, put,select} from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoError, addLocationSuccess, addLocation} from \"../actions/addInfoAction\";\nimport { updateUserSuccess} from '../actions/userAction';\nimport axios from 'axios';\n\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/getOptions');\n        if(response.data)\n        {\n            yield put(getOptionsSuccess(response.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess());\n      }\n    }\n};\n\nconst createSelectOption =\n  function *createSelectOption (act) {\n    try {\n        const id = yield select((state) => state.user.id);\n        const option = act.data.value;\n        const response  = yield axios.post('http://localhost:5000/createOption', {option: option, id: id});\n        if(response.data.created)\n        {\n          yield put(createOptionSuccess(response.data.option));\n        }\n        else\n        {\n          yield put(createOptionError(response.data.error));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst add_Info =\n  function *add_Info ({data, id}) {\n    try {\n      const info = {...data, id}\n      const inter = data.interests.map(item => item.value)\n      info.interests = inter;\n      const response  = yield axios.post('http://localhost:5000/addInfo', info);\n\n      if(response.data.added)\n      {\n        yield put(updateUserSuccess(response.data.uu));\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst getLocation =\n  function *getLocation () {\n    try {\n      const id = yield select((state) => state.user.id);\n      const response  = yield axios.post(\"http://localhost:5000/getLocation\", {id: id});\n      if(response.data)\n      {\n        yield put(addLocationSuccess(response.data));\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst AddLocation =\n  function *AddLocation ({loc}) {\n    try {\n      console.log(loc);\n      const id = yield select((state) => state.user.id);\n      const response  = yield axios.post(\"http://localhost:5000/addLocation\", {id: id});\n      if(response.data)\n      {\n        yield put(addLocation(response.data));\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info);\n  yield takeLatest(\"GET_LOC\", getLocation);\n  yield takeLatest(\"ADD_LOCATION\", AddLocation);\n}"]},"metadata":{},"sourceType":"module"}