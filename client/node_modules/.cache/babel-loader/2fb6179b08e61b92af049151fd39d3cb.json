{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/components/Home/viewProfile.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport ReactIdSwiperCustom from 'react-id-swiper/lib/ReactIdSwiper.custom';\nimport { Swiper, Navigation, Pagination } from 'swiper/js/swiper.esm';\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    height: 600,\n    border: 'solid',\n    borderColor: '#DBDFF3'\n  },\n  cardMedia: {//maxWidth: 100,\n    //maxHeight : 200,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15\n  }\n}));\nexport default function ViewProfile(props) {\n  const user = props.user,\n        images = props.images,\n        interests = props.interests,\n        handleBlock = props.handleBlock,\n        handleLike = props.handleLike,\n        handleReport = props.handleReport;\n  const classes = useStyles();\n  const value = user.rating;\n  const params = {\n    Swiper,\n    modules: [Navigation, Pagination],\n    pagination: {\n      //el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    },\n    // navigation: {\n    //   nextEl: '.swiper-button-next',\n    //   prevEl:  '.swiper-button-prev'\n    // },\n    spaceBetween: 30\n  };\n  const labels = {\n    0.5: 'Useless',\n    1: 'Useless+',\n    1.5: 'Poor',\n    2: 'Poor+',\n    2.5: 'Ok',\n    3: 'Ok+',\n    3.5: 'Good',\n    4: 'Good+',\n    4.5: 'Excellent',\n    5: 'Excellent+'\n  };\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    action: React.createElement(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.rating1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Box, {\n      ml: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, labels[value]), React.createElement(Rating, {\n      name: \"read-only\",\n      value: value,\n      precision: 0.5,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))),\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: user.isOnline === 1 ? classes.avatarON : classes.avatarOF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    title: user.firstname + ' ' + user.lastname + ' ' + user.birthday,\n    subheader: user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    children: React.createElement(ReactIdSwiperCustom, Object.assign({}, params, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), images.length !== 0 ? images.map(tile => React.createElement(\"div\", {\n      key: tile.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      src: `http://localhost:5000/images/${tile.path}`,\n      alt: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))) : React.createElement(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      src: defaultImg,\n      alt: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"TAGS :\"), \" \", interests !== null && interests.map(item => item.value + ' '))), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    userid: user.id,\n    onClick: handleLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"LIKE\"), React.createElement(\"button\", {\n    userid: user.id,\n    onClick: handleBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Block\"))));\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/components/Home/viewProfile.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","FavoriteIcon","Box","Rating","defaultImg","ReactIdSwiperCustom","Swiper","Navigation","Pagination","Grid","useStyles","theme","card","maxWidth","height","border","borderColor","cardMedia","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatarON","backgroundColor","width","avatarOF","ViewProfile","props","user","images","interests","handleBlock","handleLike","handleReport","classes","value","rating","params","modules","pagination","type","clickable","spaceBetween","labels","rating1","isOnline","firstname","lastname","birthday","lastSignIn","length","map","tile","id","path","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport ReactIdSwiperCustom from 'react-id-swiper/lib/ReactIdSwiper.custom';\nimport { Swiper, Navigation, Pagination } from 'swiper/js/swiper.esm';\n\nimport { Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    height:600,\n    border : 'solid',\n   borderColor : '#DBDFF3'\n  },\n  cardMedia : {\n    //maxWidth: 100,\n    //maxHeight : 200,\n  },\n\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15,\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15,\n  },\n}));\n\nexport default function ViewProfile(props) {\n  const {user,images,interests,handleBlock,handleLike,handleReport} = props;\n  const classes = useStyles();\n  const value = user.rating;\n  const params = {\n    Swiper,\n    modules: [Navigation, Pagination],\n    pagination: {\n      //el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true,\n    },\n    // navigation: {\n    //   nextEl: '.swiper-button-next',\n    //   prevEl:  '.swiper-button-prev'\n    // },\n    spaceBetween: 30 \n  }\n      const labels = {\n        0.5: 'Useless',\n        1: 'Useless+',\n        1.5: 'Poor',\n        2: 'Poor+',\n        2.5: 'Ok',\n        3: 'Ok+',\n        3.5: 'Good',\n        4: 'Good+',\n        4.5: 'Excellent',\n        5: 'Excellent+',\n      };\n\n  return (\n    <Grid container justify='center'>\n    <Card  className={classes.card}>\n      <CardHeader\n      action={ \n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <div className={classes.rating1}>\n        <Box ml={2}>{labels[value]}</Box>\n          <Rating\n            name=\"read-only\"\n            value={value}\n            precision={0.5}\n            readOnly\n          />\n          \n        </div>\n        </Box>\n        \n        }\n        avatar={\n          <Avatar aria-label=\"recipe\" className={user.isOnline === 1 ? classes.avatarON : classes.avatarOF}>\n              \n          </Avatar>\n          \n        }\n        title={user.firstname +' ' +user.lastname + ' '+ user.birthday}\n        subheader={user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn}\n      >\n     \n      </CardHeader>\n      \n      <CardMedia\n        className={classes.cardMedia}\n        children={\n            <ReactIdSwiperCustom {...params}>\n                {\n                    images.length !== 0 ? images.map((tile) =>\n                    <div key={tile.id}>\n                        <img style={{width: \"100%\"}} src={`http://localhost:5000/images/${tile.path}`} alt=\"images\"/>\n                    </div>\n                    ) : <img  style={{width: \"100%\"}} src={defaultImg} alt=\"images\"/>\n                }\n                </ReactIdSwiperCustom>\n        }\n      \n      />\n      <CardContent>\n        {/* <Typography >\n          <strong>BIO :</strong> {user.bio} \n        </Typography> */}\n        <Typography>\n        <strong>TAGS :</strong> {interests !== null &&  interests.map((item) =>item.value + ' ' )}\n        </Typography>\n      </CardContent>\n\n      <CardActions disableSpacing >\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon color=\"secondary\"/>\n        </IconButton> */}\n        <button  userid = {user.id} onClick={handleLike}>LIKE</button>\n        {/* <IconButton aria-label=\"share\" user_id={user.id} onClick={handleBlock}>\n          <BlockIcon color=\"secondary\" />\n        </IconButton> */}\n        <button  userid = {user.id} onClick={handleBlock}>Block</button>\n        {/* <button  userid = {user.id} onClick={handleReport}>Report</button> */}\n      </CardActions>\n    </Card>\n    </Grid>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}