{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SendEmail } from '../../actions/sendEmail';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport ForgotPassword from '../../components/ForgotPassword';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['email'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required!';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  \"form\": state.form,\n  \"status\": state.sendEmail.status,\n  \"errors\": state.sendEmail.error\n});\n\nconst mapDispatchToProps = {\n  \"sendEmail\": SendEmail\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(form => {\n    dispatchProps.sendEmail(form);\n  })\n});\n\nconst cnForgotPasswordContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(ForgotPassword);\nconst ForgotPasswordContainer = reduxForm({\n  form: 'ForgotPassword',\n  validate\n})(cnForgotPasswordContainer);\nexport default ForgotPasswordContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/ForgotPassword/index.js"],"names":["SendEmail","connect","reduxForm","ForgotPassword","validate","values","errors","requiredFields","forEach","field","email","test","mapStateToProps","state","form","sendEmail","status","error","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","cnForgotPasswordContainer","ForgotPasswordContainer"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,yBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAGA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,cAAc,GAAG,CACnB,OADmB,CAAvB;AAGEA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC9B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAX,EAAoB;AAClBH,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,WAAhB;AACD;AACF,GAJD;;AAMF,MAAIJ,MAAM,CAACK,KAAP,IAAgB,CAAC,4CAA4CC,IAA5C,CAAiDN,MAAM,CAACK,KAAxD,CAArB,EAAqF;AACjFJ,IAAAA,MAAM,CAACI,KAAP,GAAe,uBAAf;AACH;;AACD,SAAOJ,MAAP;AACH,CAhBD;;AAkBA,MAAMM,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAACC,IADnB;AAEI,YAAWD,KAAK,CAACE,SAAN,CAAgBC,MAF/B;AAGI,YAAUH,KAAK,CAACE,SAAN,CAAgBE;AAH9B,CADwB,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG;AACvB,eAAalB;AADU,CAA3B;;AAGA,MAAMmB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAyBT,IAAD,IAAU;AAC/CO,IAAAA,aAAa,CAACN,SAAd,CAAwBD,IAAxB;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMU,yBAAyB,GAAGvB,OAAO,CAACW,eAAD,EAAkBM,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDhB,cAAxD,CAAlC;AAEA,MAAMsB,uBAAuB,GAAGvB,SAAS,CAAE;AACvCY,EAAAA,IAAI,EAAE,gBADiC;AAEvCV,EAAAA;AAFuC,CAAF,CAAT,CAG5BoB,yBAH4B,CAAhC;AAKA,eAAeC,uBAAf","sourcesContent":["import {SendEmail} from '../../actions/sendEmail'\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport ForgotPassword from '../../components/ForgotPassword'\n\n\nconst validate = (values) => {\n    const errors = {};\n\n    const requiredFields = [\n        'email'\n      ];\n      requiredFields.forEach(field => {\n        if (!values[field]) {\n          errors[field] = 'Required!';\n        }\n      });\n\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n    }\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.sendEmail.status,\n    \"errors\": state.sendEmail.error,\n});\nconst mapDispatchToProps = {\n    \"sendEmail\": SendEmail\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        dispatchProps.sendEmail(form);\n    })\n});\n\nconst cnForgotPasswordContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(ForgotPassword);\n\nconst ForgotPasswordContainer = reduxForm ({\n    form: 'ForgotPassword',\n    validate\n}) (cnForgotPasswordContainer);\n\nexport default ForgotPasswordContainer;"]},"metadata":{},"sourceType":"module"}