{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { decodeTokenAction } from '../actions/decodeAction';\nimport { connect } from \"react-redux\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = state => ({\n  \"status\": state.status\n});\n\nconst mapDispatchToProps = {\n  \"decodeTokenAction\": decodeTokenAction\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"decodeToken\": otherProps.decodeToken(() => {\n    const token = ls.get('token');\n    dispatchProps.decodeTokenAction(token);\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(decodeToken);","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/helpers/decodeToken.js"],"names":["decodeTokenAction","connect","ls","mapStateToProps","state","status","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","decodeToken","token","get"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,QAAgC,yBAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,EAAP,MAAe,eAAf;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChC,YAAWA,KAAK,CAACC;AADe,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAG;AACvB,uBAAqBN;AADE,CAA3B;;AAGA,MAAMO,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,iBAAgBA,UAAU,CAACC,WAAX,CAAuB,MAAM;AACzC,UAAMC,KAAK,GAAIV,EAAE,CAACW,GAAH,CAAO,OAAP,CAAf;AACAJ,IAAAA,aAAa,CAACT,iBAAd,CAAgCY,KAAhC;AACH,GAHe;AAJD,EAAnB;;AAUA,eAAeX,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDI,WAAxD,CAAf","sourcesContent":["import {decodeTokenAction} from '../actions/decodeAction';\nimport {connect} from \"react-redux\";\nimport ls from 'local-storage';\n\nconst mapStateToProps = (state) => ({\n    \"status\" : state.status\n});\nconst mapDispatchToProps = {\n    \"decodeTokenAction\": decodeTokenAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"decodeToken\" : otherProps.decodeToken(() => {\n        const token  = ls.get('token');\n        dispatchProps.decodeTokenAction(token);\n    })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps,mergeProps)(decodeToken);\n"]},"metadata":{},"sourceType":"module"}