{"ast":null,"code":"import _objectSpread from \"/Users/isifeddi/Desktop/Matcha-i2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoError } from \"../actions/addInfoAction\";\nimport { updateUserSuccess } from '../actions/userAction';\nimport { select } from 'redux-saga/effects';\nimport axios from 'axios';\n\nconst getSelectOptions = function* getSelectOptions() {\n  try {\n    const response = yield axios.post('http://localhost:5000/getOptions');\n\n    if (response.data) {\n      yield put(getOptionsSuccess(response.data));\n    } else {\n      yield put(getOptionsSuccess());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess());\n    }\n  }\n};\n\nconst createSelectOption = function* createSelectOption(act) {\n  try {\n    const id = yield select(state => state.user.id);\n    const option = act.data.value;\n    const response = yield axios.post('http://localhost:5000/createOption', {\n      option: option,\n      id: id\n    });\n\n    if (response.data.created) {\n      yield put(createOptionSuccess(response.data.option));\n    } else {\n      yield put(createOptionError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nconst add_Info = function* add_Info({\n  data,\n  id\n}) {\n  try {\n    const info = _objectSpread({}, data, {\n      id\n    });\n\n    const inter = data.interests.map(item => item.value);\n    info.interests = inter;\n    const response = yield axios.post('http://localhost:5000/addInfo', info);\n\n    if (response.data.added) {\n      console.log(response.data);\n      yield put(updateUserSuccess(response.data.uu));\n    } else {\n      yield put(addInfoError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nconst getLocation = function* getLocation() {\n  try {\n    const response = yield axios.get('http://ipinfo.io/json');\n    console.log(response); // if(response.data)\n    // {\n    //   console.log(response.data);\n    // }\n    // else\n    // {\n    //   yield put(addInfoError(response.data.error));\n    // }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"GET_LOC\", getLocation);\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha-i2/client/src/sagas/addInfoSaga.js"],"names":["takeLatest","put","getOptionsSuccess","createOptionSuccess","createOptionError","addInfoError","updateUserSuccess","select","axios","getSelectOptions","response","post","data","error","createSelectOption","act","id","state","user","option","value","created","add_Info","info","inter","interests","map","item","added","console","log","uu","getLocation","get"],"mappings":"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","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoError} from \"../actions/addInfoAction\";\nimport { updateUserSuccess} from '../actions/userAction';\nimport { select } from 'redux-saga/effects'; \nimport axios from 'axios';\n\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/getOptions');\n        if(response.data)\n        {\n            yield put(getOptionsSuccess(response.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess());\n      }\n    }\n};\n\nconst createSelectOption =\n  function *createSelectOption (act) {\n    try {\n        const id = yield select((state) => state.user.id);\n        const option = act.data.value;\n        const response  = yield axios.post('http://localhost:5000/createOption', {option: option, id: id});\n        if(response.data.created)\n        {\n          yield put(createOptionSuccess(response.data.option));\n        }\n        else\n        {\n          yield put(createOptionError(response.data.error));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst add_Info =\n  function *add_Info ({data, id}) {\n    try {\n      const info = {...data, id}\n      const inter = data.interests.map(item => item.value)\n      info.interests = inter;\n      const response  = yield axios.post('http://localhost:5000/addInfo', info);\n\n      if(response.data.added)\n      {\n        console.log(response.data);\n        yield put(updateUserSuccess(response.data.uu));\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst getLocation =\n  function *getLocation () {\n    try {\n      const response  = yield axios.get('http://ipinfo.io/json');\n      console.log(response);\n      // if(response.data)\n      // {\n      //   console.log(response.data);\n      // }\n      // else\n      // {\n      //   yield put(addInfoError(response.data.error));\n      // }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"GET_LOC\", getLocation);\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info);\n}"]},"metadata":{},"sourceType":"module"}