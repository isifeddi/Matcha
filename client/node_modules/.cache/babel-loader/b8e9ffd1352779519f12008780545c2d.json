{"ast":null,"code":"const validate = values => {\n  const errors = {};\n  const requiredFields = ['firstname', 'lastname', 'username', 'email', 'password', 'confirmPassword'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  if (values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username)) errors.username = 'Username must contain a number and a letter'; // if(values.username.length <= 2)\n  //     errors.username = 'Username must contain at least 2 characters';\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address !\";\n  }\n\n  if (values.password && !/\\d/.test(values.password)) errors.password = \"Password must contain a number !\";else if (values.password && !/[A-Z]/.test(values.password)) errors.password = \"Password must contain an uppercase letter !\";else if (values.password && !/[a-z]/.test(values.password)) errors.password = \"Password must contain a lowercase letter !\";else if (values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password)) errors.password = \"Password must contain a special character !\";else if (values.password && !/[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]{6,20}/.test(values.password)) errors.password = \"Password must contain at least 6 characters !\";\n  if (values.confirmPassword && values.password !== values.confirmPassword) errors.confirmPassword = \"Passwords does not match !\";\n  return errors;\n};\n\nexport default validate;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Mmatcha/client/src/containers/Register/validate.js"],"names":["validate","values","errors","requiredFields","forEach","field","trim","username","test","email","password","confirmPassword"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,cAAc,GAAG,CACnB,WADmB,EAEnB,UAFmB,EAGnB,UAHmB,EAInB,OAJmB,EAKnB,UALmB,EAMnB,iBANmB,CAAvB;AAQEA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC9B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AAC3CJ,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACD;AACF,GAJD;AAKE,MAAGJ,MAAM,CAACM,QAAP,IAAmB,CAAC,qBAAqBC,IAArB,CAA0BP,MAAM,CAACM,QAAjC,CAAvB,EACIL,MAAM,CAACK,QAAP,GAAkB,6CAAlB,CAjBiB,CAkBrB;AACA;;AACA,MAAIN,MAAM,CAACQ,KAAP,IAAgB,CAAC,4CAA4CD,IAA5C,CAAiDP,MAAM,CAACQ,KAAxD,CAArB,EAAqF;AACjFP,IAAAA,MAAM,CAACO,KAAP,GAAe,yBAAf;AACH;;AACD,MAAGR,MAAM,CAACS,QAAP,IAAmB,CAAC,KAAKF,IAAL,CAAUP,MAAM,CAACS,QAAjB,CAAvB,EACER,MAAM,CAACQ,QAAP,GAAkB,kCAAlB,CADF,KAEK,IAAGT,MAAM,CAACS,QAAP,IAAmB,CAAC,QAAQF,IAAR,CAAaP,MAAM,CAACS,QAApB,CAAvB,EACDR,MAAM,CAACQ,QAAP,GAAkB,6CAAlB,CADC,KAEA,IAAGT,MAAM,CAACS,QAAP,IAAmB,CAAC,QAAQF,IAAR,CAAaP,MAAM,CAACS,QAApB,CAAvB,EACDR,MAAM,CAACQ,QAAP,GAAkB,4CAAlB,CADC,KAEA,IAAGT,MAAM,CAACS,QAAP,IAAmB,CAAC,uCAAuCF,IAAvC,CAA4CP,MAAM,CAACS,QAAnD,CAAvB,EACDR,MAAM,CAACQ,QAAP,GAAkB,6CAAlB,CADC,KAEA,IAAGT,MAAM,CAACS,QAAP,IAAmB,CAAC,qDAAqDF,IAArD,CAA0DP,MAAM,CAACS,QAAjE,CAAvB,EACDR,MAAM,CAACQ,QAAP,GAAkB,+CAAlB;AACJ,MAAGT,MAAM,CAACU,eAAP,IAA0BV,MAAM,CAACS,QAAP,KAAoBT,MAAM,CAACU,eAAxD,EACIT,MAAM,CAACS,eAAP,GAAyB,4BAAzB;AAEJ,SAAOT,MAAP;AACP,CArCD;;AAuCA,eAAeF,QAAf","sourcesContent":["const validate = (values) => {\n    const errors = {};\n\n    const requiredFields = [\n        'firstname',\n        'lastname',\n        'username',\n        'email',\n        'password',\n        'confirmPassword',\n      ];\n      requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n          errors[field] = 'Required !';\n        }\n      });\n        if(values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username))\n            errors.username = 'Username must contain a number and a letter';\n        // if(values.username.length <= 2)\n        //     errors.username = 'Username must contain at least 2 characters';\n        if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address !\";\n        }\n        if(values.password && !/\\d/.test(values.password))\n          errors.password = \"Password must contain a number !\"\n        else if(values.password && !/[A-Z]/.test(values.password))\n            errors.password = \"Password must contain an uppercase letter !\"\n        else if(values.password && !/[a-z]/.test(values.password))\n            errors.password = \"Password must contain a lowercase letter !\"\n        else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n            errors.password = \"Password must contain a special character !\"\n        else if(values.password && !/[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]{6,20}/.test(values.password))\n            errors.password = \"Password must contain at least 6 characters !\"\n        if(values.confirmPassword && values.password !== values.confirmPassword)\n            errors.confirmPassword = \"Passwords does not match !\"\n        \n        return errors;\n}\n\nexport default validate;"]},"metadata":{},"sourceType":"module"}