{"ast":null,"code":"import axios from 'axios';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst asyncValidate = values => {\n  return sleep(1000).then(async () => {\n    const error = {};\n    values.isSubmited = 0;\n    const er = await axios.post('http://localhost:5000/register', values);\n    values.isSubmited = 1;\n\n    if (er.data.username === 'Username already exists') {\n      error.username = er.data.username;\n    }\n\n    if (er.data.email === 'Email already exists') {\n      error.email = er.data.email;\n    }\n\n    if (error.username !== 'undefined' && error.email !== 'undefined') throw error;\n  });\n};\n\nexport default asyncValidate;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/Register/asyncValidate.js"],"names":["axios","sleep","ms","Promise","resolve","setTimeout","asyncValidate","values","then","error","isSubmited","er","post","data","username","email"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AAEA,MAAMI,aAAa,GAAIC,MAAD,IAAY;AAChC,SAAON,KAAK,CAAC,IAAD,CAAL,CACJO,IADI,CACC,YAAY;AAChB,UAAMC,KAAK,GAAG,EAAd;AACAF,IAAAA,MAAM,CAACG,UAAP,GAAoB,CAApB;AACA,UAAMC,EAAE,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,gCAAX,EAA6CL,MAA7C,CAAjB;AACAA,IAAAA,MAAM,CAACG,UAAP,GAAoB,CAApB;;AACA,QAAIC,EAAE,CAACE,IAAH,CAAQC,QAAR,KAAqB,yBAAzB,EACA;AACEL,MAAAA,KAAK,CAACK,QAAN,GAAiBH,EAAE,CAACE,IAAH,CAAQC,QAAzB;AACD;;AACD,QAAIH,EAAE,CAACE,IAAH,CAAQE,KAAR,KAAkB,sBAAtB,EACA;AACEN,MAAAA,KAAK,CAACM,KAAN,GAAaJ,EAAE,CAACE,IAAH,CAAQE,KAArB;AACD;;AACD,QAAGN,KAAK,CAACK,QAAN,KAAmB,WAAnB,IAAkCL,KAAK,CAACM,KAAN,KAAgB,WAArD,EACE,MAAMN,KAAN;AACH,GAhBI,CAAP;AAiBD,CAlBD;;AAoBA,eAAeH,aAAf","sourcesContent":["import axios from 'axios'\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nconst asyncValidate = (values) => {\n  return sleep(1000)\n    .then(async () => {\n      const error = {}\n      values.isSubmited = 0;\n      const er = await axios.post('http://localhost:5000/register', values)\n      values.isSubmited = 1;\n      if (er.data.username === 'Username already exists')\n      {\n        error.username = er.data.username \n      }\n      if (er.data.email === 'Email already exists') \n      {\n        error.email= er.data.email\n      }\n      if(error.username !== 'undefined' && error.email !== 'undefined')\n        throw error\n    })\n}\n\nexport default asyncValidate"]},"metadata":{},"sourceType":"module"}