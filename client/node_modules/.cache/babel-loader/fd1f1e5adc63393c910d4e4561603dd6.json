{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/components/completeProfile/pictures.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container } from '@material-ui/core';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport IconButton from '@material-ui/core/IconButton';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: 150,\n    position: 'center'\n  },\n  input: {\n    display: 'none'\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.6) 0%, ' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  },\n  delete: {\n    background: 'none'\n  },\n  add: {\n    display: 'none'\n  }\n}));\n\nconst calcImages = images => {\n  let len = 0;\n\n  if (images != null) {\n    len = images.length;\n\n    if (len > 4) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst Pictures = props => {\n  const fileChangedHandler = props.fileChangedHandler,\n        images = props.images,\n        deletePicture = props.deletePicture,\n        setProfilePicture = props.setProfilePicture;\n  const classes = useStyles(); // const fun = ()=>{\n  //   const url =  'http://localhost:5000/images/2019-12-10T00:14:23.376Z655568.jpg'\n  //   console.log(url);\n  //   return(url);\n  // }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    width: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: calcImages(images.images) === false && classes.add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"icon-button-file\",\n    type: \"file\",\n    onChange: fileChangedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AddAPhotoIcon, {\n    color: \"secondary\",\n    style: {\n      fontSize: 70\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, images.isImages && images.images.map(tile => {\n    console.log(tile.path);\n    return React.createElement(GridListTile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\".concat(tile.path),\n      alt: \"photos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      actionPosition: \"left\",\n      className: classes.titleBar,\n      title: tile.isProfilePic === 1 && 'Profile picture',\n      actionIcon: React.createElement(\"button\", {\n        imgId: tile.id,\n        onClick: setProfilePicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"ProfPic\") //<AddToPhotosTwoToneIcon color='primary' imgId = {tile.id} color=\"secondary\" onClick={setProfilePic}/>\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      className: classes.delete,\n      titlePosition: \"top\",\n      actionIcon: React.createElement(\"button\", {\n        imgId: tile.id,\n        isProfilePic: tile.isProfilePic,\n        onClick: deletePicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"DEl\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }))));\n};\n\nexport default Pictures;","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/components/completeProfile/pictures.js"],"names":["React","makeStyles","Grid","Container","AddAPhotoIcon","IconButton","GridList","GridListTile","GridListTileBar","useStyles","theme","card","height","position","input","display","submit","margin","spacing","backgroundColor","palette","secondary","main","root","flexWrap","justifyContent","overflow","gridList","width","titleBar","background","delete","add","calcImages","images","len","length","Pictures","props","fileChangedHandler","deletePicture","setProfilePicture","classes","fontSize","isImages","map","tile","console","log","path","isProfilePic","id"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container } from '@material-ui/core';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n   height :150,\n    position : 'center',\n  },\n  input: {\n    display: 'none',\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main,\n}, root: {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden',\n\n},\ngridList: {\n  width: 500,\n  height: 450,\n},\ntitleBar: {\n  background:\n    'linear-gradient(to top, rgba(0,0,0,0.6) 0%, ' +\n    'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n},\ndelete : {\n  background : 'none'\n},\nadd : {\n  display: 'none',\n}\n}));\nconst calcImages = (images) =>{\n  let len = 0;\n  if(images != null){\n    len = images.length;\n    if(len > 4){\n      return false;\n    }\n  }\n  return true;\n  \n}\n\nconst  Pictures = (props) => {\n  const {fileChangedHandler,images,deletePicture,setProfilePicture} = props;\n  const classes = useStyles();\n  // const fun = ()=>{\n  //   const url =  'http://localhost:5000/images/2019-12-10T00:14:23.376Z655568.jpg'\n  //   console.log(url);\n  //   return(url);\n  // }\n\n  return (\n    <Container>\n      <Grid container  justify=\"center\" width>\n       <div className={calcImages(images.images) === false && classes.add}>\n         <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\"  onChange={fileChangedHandler}/>\n         <label htmlFor=\"icon-button-file\">\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n            <AddAPhotoIcon color='secondary' style={{fontSize : 70}}/>\n          </IconButton>\n        </label>\n        </div>\n      \n      </Grid>\n      \n      {/* {images.images && images.images.map(item =>{\n       console.log(item.path)\n        return (<img src={img} alt=\"icon\" width=\"200\" />) */}\n\n          <div className={classes.root}>\n            <GridList cellHeight={180} className={classes.gridList}>\n\n              {images.isImages  && images.images.map((tile) => {\n                console.log(tile.path)\n                return (\n                 <GridListTile  >\n                <img src={`http://localhost:5000/images/${tile.path}`} alt='photos' />\n                <GridListTileBar\n               \n                actionPosition=\"left\"\n                className={classes.titleBar}\n                title={tile.isProfilePic === 1 && 'Profile picture'}\n                  actionIcon={\n                    <button  imgId = {tile.id}  onClick={setProfilePicture}>ProfPic</button>\n                    //<AddToPhotosTwoToneIcon color='primary' imgId = {tile.id} color=\"secondary\" onClick={setProfilePic}/>\n                  }\n                />\n                <GridListTileBar\n                className={classes.delete}\n                titlePosition=\"top\"\n\n                  actionIcon={\n                    <button imgId={tile.id} isProfilePic={tile.isProfilePic} onClick={deletePicture}>DEl</button>\n                  }\n                />\n                \n              </GridListTile> \n                \n              \n              )}\n              )}\n            </GridList>\n            \n          </div>\n    </Container>\n  )\n}\n  \nexport default Pictures;"]},"metadata":{},"sourceType":"module"}