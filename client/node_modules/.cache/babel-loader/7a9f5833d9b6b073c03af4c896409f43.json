{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { push } from \"react-router-redux\";\nimport { loginError, loginUserSuccess, loginErrorField } from \"../actions/loginAction\";\nimport axios from 'axios';\nimport ls from 'local-storage';\n\nconst login = function* login({\n  data\n}) {\n  try {\n    const response = yield axios.post('http://localhost:5000/login', data);\n\n    if (response.data.isValid) {\n      yield put(loginUserSuccess(response.data.token));\n      ls.set('token', response.data.token);\n      yield put(push(\"/\"));\n    } else {\n      yield put(loginErrorField(response.data.errorField));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"LOGIN_USER\", login);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/loginSaga.js"],"names":["takeLatest","put","push","loginError","loginUserSuccess","loginErrorField","axios","ls","login","data","response","post","isValid","token","set","errorField","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,QAA8B,oBAA9B;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,UAAR,EAAoBC,gBAApB,EAAqCC,eAArC,QAA2D,wBAA3D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,eAAf;;AAEA,MAAMC,KAAK,GACT,UAAUA,KAAV,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyB;AACvB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,6BAAX,EAA0CF,IAA1C,CAAvB;;AACA,QAAGC,QAAQ,CAACD,IAAT,CAAcG,OAAjB,EACA;AACE,YAAMX,GAAG,CAACG,gBAAgB,CAACM,QAAQ,CAACD,IAAT,CAAcI,KAAf,CAAjB,CAAT;AACAN,MAAAA,EAAE,CAACO,GAAH,CAAO,OAAP,EAAgBJ,QAAQ,CAACD,IAAT,CAAcI,KAA9B;AACA,YAAMZ,GAAG,CAACC,IAAI,CAAC,GAAD,CAAL,CAAT;AACD,KALD,MAOA;AACE,YAAMD,GAAG,CAACI,eAAe,CAACK,QAAQ,CAACD,IAAT,CAAcM,UAAf,CAAhB,CAAT;AACD;AACF,GAZD,CAYC,OAAOC,KAAP,EAAc;AACb,QAAIA,KAAK,CAACN,QAAV,EAAoB;AAClB,YAAMT,GAAG,CAACE,UAAU,CAAC,2BAAD,EAA8B,uBAA9B,CAAX,CAAT;AACD;AACF;AACF,CAnBH;;AAqBA,eAAe,aAAa;AAC1B,QAAMH,UAAU,CAAC,YAAD,EAAeQ,KAAf,CAAhB;AACD","sourcesContent":["import {takeLatest, put} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {loginError, loginUserSuccess,loginErrorField} from \"../actions/loginAction\";\nimport axios from 'axios';\nimport ls from 'local-storage';\n\nconst login =\n  function *login ({data}) {\n    try {\n      const response = yield axios.post('http://localhost:5000/login', data);\n      if(response.data.isValid)\n      {\n        yield put(loginUserSuccess(response.data.token));\n        ls.set('token', response.data.token);\n        yield put(push(\"/\"));\n      }\n      else \n      {\n        yield put(loginErrorField(response.data.errorField))\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"LOGIN_USER\", login);\n}"]},"metadata":{},"sourceType":"module"}