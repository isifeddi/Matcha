{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError } from \"../actions/addInfoAction\";\nimport axios from 'axios';\n\nconst getSelectOptions = function* getSelectOptions() {\n  try {\n    const response = yield axios.post('http://localhost:5000/getOptions');\n    console.log('get', response.data);\n\n    if (response.data) {\n      yield put(getOptionsSuccess(response.data));\n    } else {\n      yield put(getOptionsSuccess());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess());\n    }\n  }\n};\n\nconst createSelectOption = function* createSelectOption() {\n  try {\n    const response = yield axios.post('http://localhost:5000/createOption');\n\n    if (response.data) {\n      yield put(createOptionSuccess(response.data));\n    } else {\n      yield put(createOptionError());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess([]));\n    }\n  }\n};\n\nexport default function* () {\n  yield [takeLatest(\"GET_OPTIONS\", getSelectOptions), takeLatest(\"CREATE_OPTION\", createSelectOption)];\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/addInfoSaga.js"],"names":["takeLatest","put","getOptionsSuccess","createOptionSuccess","createOptionError","axios","getSelectOptions","response","post","console","log","data","error","createSelectOption"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,iBAAjD,QAAyE,0BAAzE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GACpB,UAAUA,gBAAV,GAA8B;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,kCAAX,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,QAAQ,CAACI,IAA5B;;AACA,QAAGJ,QAAQ,CAACI,IAAZ,EACA;AACI,YAAMV,GAAG,CAACC,iBAAiB,CAACK,QAAQ,CAACI,IAAV,CAAlB,CAAT;AACH,KAHD,MAKA;AACI,YAAMV,GAAG,CAACC,iBAAiB,EAAlB,CAAT;AACH;AACJ,GAXD,CAWC,OAAOU,KAAP,EAAc;AACb,QAAIA,KAAK,CAACL,QAAV,EAAoB;AAClB,YAAMN,GAAG,CAACC,iBAAiB,EAAlB,CAAT;AACD;AACF;AACJ,CAlBD;;AAoBA,MAAMW,kBAAkB,GACtB,UAAUA,kBAAV,GAAgC;AAC9B,MAAI;AACA,UAAMN,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,oCAAX,CAAxB;;AACA,QAAGD,QAAQ,CAACI,IAAZ,EACA;AACI,YAAMV,GAAG,CAACE,mBAAmB,CAACI,QAAQ,CAACI,IAAV,CAApB,CAAT;AACH,KAHD,MAKA;AACI,YAAMV,GAAG,CAACG,iBAAiB,EAAlB,CAAT;AACH;AACJ,GAVD,CAUC,OAAOQ,KAAP,EAAc;AACb,QAAIA,KAAK,CAACL,QAAV,EAAoB;AAClB,YAAMN,GAAG,CAACC,iBAAiB,CAAC,EAAD,CAAlB,CAAT;AACD;AACF;AACJ,CAjBD;;AAmBA,eAAe,aAAa;AAC1B,QAAM,CACJF,UAAU,CAAC,aAAD,EAAgBM,gBAAhB,CADN,EAEJN,UAAU,CAAC,eAAD,EAAkBa,kBAAlB,CAFN,CAAN;AAID","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError} from \"../actions/addInfoAction\";\nimport axios from 'axios';\n\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/getOptions');\n        console.log('get', response.data);\n        if(response.data)\n        {\n            yield put(getOptionsSuccess(response.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess());\n      }\n    }\n};\n\nconst createSelectOption =\n  function *createSelectOption () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/createOption');\n        if(response.data)\n        {\n            yield put(createOptionSuccess(response.data));\n        }\n        else\n        {\n            yield put(createOptionError());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess([]));\n      }\n    }\n};\n\nexport default function *() {\n  yield [\n    takeLatest(\"GET_OPTIONS\", getSelectOptions),\n    takeLatest(\"CREATE_OPTION\", createSelectOption)\n  ]\n}"]},"metadata":{},"sourceType":"module"}