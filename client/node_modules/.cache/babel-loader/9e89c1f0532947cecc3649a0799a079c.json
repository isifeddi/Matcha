{"ast":null,"code":"import { GET_OPTIONS, GET_OPTIONS_SUCCESS, CREATE_OPTION, CREATE_OPTION_SUCCESS, CREATE_OPTION_ERROR, ADD_INFO_ERROR, GET_USER_DATA, GET_USER_DATA_SUCCESS } from \"../actions/addInfoAction\";\nconst DEFAULT_STATE = {\n  selectOptions: [],\n  selectLoading: false\n};\nexport default function (state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case GET_OPTIONS:\n      return {\n        selectOptions: [],\n        selectLoading: true,\n        data: [...state.data]\n      };\n\n    case GET_OPTIONS_SUCCESS:\n      return {\n        selectOptions: action.options,\n        selectLoading: false,\n        data: [...state.data]\n      };\n\n    case CREATE_OPTION:\n      return {\n        selectOptions: [...state.selectOptions],\n        selectLoading: true,\n        data: [...state.data]\n      };\n\n    case CREATE_OPTION_SUCCESS:\n      return {\n        selectOptions: [...state.selectOptions, action.option],\n        selectLoading: false,\n        data: [...state.data]\n      };\n\n    case CREATE_OPTION_ERROR:\n      return {\n        selectOptions: [...state.selectOptions],\n        selectLoading: false,\n        error: action.error,\n        data: [...state.data]\n      };\n\n    case ADD_INFO_ERROR:\n      return {\n        selectOptions: [...state.selectOptions],\n        selectLoading: false,\n        error: action.error,\n        data: [...state.data]\n      };\n\n    case GET_USER_DATA:\n      return {\n        getData: 'loading'\n      };\n\n    case GET_USER_DATA_SUCCESS:\n      return {\n        selectOptions: [...state.selectOptions],\n        selectLoading: false,\n        getData: 'success',\n        data: action.data\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/reducers/addInfoReducer.js"],"names":["GET_OPTIONS","GET_OPTIONS_SUCCESS","CREATE_OPTION","CREATE_OPTION_SUCCESS","CREATE_OPTION_ERROR","ADD_INFO_ERROR","GET_USER_DATA","GET_USER_DATA_SUCCESS","DEFAULT_STATE","selectOptions","selectLoading","state","action","type","data","options","option","error","getData"],"mappings":"AAAA,SACEA,WADF,EAEEC,mBAFF,EAGEC,aAHF,EAIEC,qBAJF,EAKEC,mBALF,EAMEC,cANF,EAOEC,aAPF,EAQEC,qBARF,QASO,0BATP;AAWA,MAAMC,aAAa,GAAI;AAAEC,EAAAA,aAAa,EAAE,EAAjB;AAAqBC,EAAAA,aAAa,EAAE;AAApC,CAAvB;AAEA,eAAe,UAAUC,KAAK,GAAGH,aAAlB,EAAiCI,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,WAAL;AACE,aAAO;AAAES,QAAAA,aAAa,EAAE,EAAjB;AAAqBC,QAAAA,aAAa,EAAE,IAApC;AAA2CI,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV;AAAjD,OAAP;;AACF,SAAKb,mBAAL;AACE,aAAO;AAAEQ,QAAAA,aAAa,EAAEG,MAAM,CAACG,OAAxB;AAAiCL,QAAAA,aAAa,EAAE,KAAhD;AAAuDI,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV;AAA7D,OAAP;;AACF,SAAKZ,aAAL;AACE,aAAO;AAAEO,QAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAV,CAAjB;AAA2CC,QAAAA,aAAa,EAAE,IAA1D;AAAgEI,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV;AAAtE,OAAP;;AACF,SAAKX,qBAAL;AACE,aAAO;AAAEM,QAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAV,EAAyBG,MAAM,CAACI,MAAhC,CAAjB;AAA0DN,QAAAA,aAAa,EAAE,KAAzE;AAAiFI,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV;AAAvF,OAAP;;AACF,SAAKV,mBAAL;AACE,aAAO;AAAEK,QAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAV,CAAjB;AAA4CC,QAAAA,aAAa,EAAE,KAA3D;AAAmEO,QAAAA,KAAK,EAAEL,MAAM,CAACK,KAAjF;AAAyFH,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV;AAA/F,OAAP;;AACF,SAAKT,cAAL;AACE,aAAO;AAAEI,QAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAV,CAAjB;AAA4CC,QAAAA,aAAa,EAAE,KAA3D;AAAmEO,QAAAA,KAAK,EAAEL,MAAM,CAACK,KAAjF;AAAyFH,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV;AAA/F,OAAP;;AACF,SAAKR,aAAL;AACE,aAAO;AAAEY,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKX,qBAAL;AACE,aAAO;AAAEE,QAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAV,CAAjB;AAA4CC,QAAAA,aAAa,EAAE,KAA3D;AAAmEQ,QAAAA,OAAO,EAAE,SAA5E;AAAuFJ,QAAAA,IAAI,EAAEF,MAAM,CAACE;AAApG,OAAP;;AACF;AACE,aAAOH,KAAP;AAlBJ;AAoBD","sourcesContent":["import {\n  GET_OPTIONS,\n  GET_OPTIONS_SUCCESS,\n  CREATE_OPTION,\n  CREATE_OPTION_SUCCESS,\n  CREATE_OPTION_ERROR,\n  ADD_INFO_ERROR,\n  GET_USER_DATA,\n  GET_USER_DATA_SUCCESS,\n} from \"../actions/addInfoAction\";\n\nconst DEFAULT_STATE =  { selectOptions: [], selectLoading: false };\n\nexport default function (state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case GET_OPTIONS:\n      return { selectOptions: [], selectLoading: true , data: [...state.data]};\n    case GET_OPTIONS_SUCCESS:\n      return { selectOptions: action.options, selectLoading: false ,data: [...state.data]};\n    case CREATE_OPTION:\n      return { selectOptions: [...state.selectOptions], selectLoading: true ,data: [...state.data]};\n    case CREATE_OPTION_SUCCESS:\n      return { selectOptions: [...state.selectOptions, action.option], selectLoading: false , data: [...state.data]};\n    case CREATE_OPTION_ERROR:\n      return { selectOptions: [...state.selectOptions] , selectLoading: false , error: action.error , data: [...state.data]};\n    case ADD_INFO_ERROR:\n      return { selectOptions: [...state.selectOptions] , selectLoading: false , error: action.error , data: [...state.data]};\n    case GET_USER_DATA:\n      return { getData: 'loading'};\n    case GET_USER_DATA_SUCCESS:\n      return { selectOptions: [...state.selectOptions] , selectLoading: false , getData: 'success', data: action.data};\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}