{"ast":null,"code":"import { put, takeLatest, call } from \"redux-saga/effects\";\nimport { select } from 'redux-saga/effects';\nimport { request } from './helper';\nimport { incStepperSuccess } from '../actions/stepperAction';\nexport const Stepper = function* Stepper() {\n  try {\n    const user = yield select(state => state.user);\n    const response = yield call(request, {\n      \"url\": \"http://localhost:5000/updateStep\",\n      \"data\": {\n        step: user.complete + 1,\n        id: user.id\n      },\n      \"method\": \"post\"\n    });\n\n    if (response) {\n      yield put(incStepperSuccess());\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport default function* () {\n  yield takeLatest(\"INC_STEPPER\", Stepper);\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/sagas/stepperSaga.js"],"names":["put","takeLatest","call","select","request","incStepperSuccess","Stepper","user","state","response","step","complete","id","error","console","log"],"mappings":"AACA,SAAQA,GAAR,EAAaC,UAAb,EAAwBC,IAAxB,QAAmC,oBAAnC;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,OAAO,MAAMC,OAAO,GAChB,UAAUA,OAAV,GAAqB;AACjB,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMJ,MAAM,CAACK,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAzB;AACA,UAAME,QAAQ,GAAG,MAAMP,IAAI,CAACE,OAAD,EAAU;AACjC,aAAO,kCAD0B;AAEjC,cAAQ;AAACM,QAAAA,IAAI,EAAGH,IAAI,CAACI,QAAL,GAAgB,CAAxB;AAA0BC,QAAAA,EAAE,EAAGL,IAAI,CAACK;AAApC,OAFyB;AAGjC,gBAAU;AAHuB,KAAV,CAA3B;;AAKA,QAAGH,QAAH,EACA;AACI,YAAMT,GAAG,CAACK,iBAAiB,EAAlB,CAAT;AACH;AACJ,GAXD,CAWE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAhBE;AAkBP,eAAe,aAAa;AACxB,QAAMZ,UAAU,CAAC,aAAD,EAAgBK,OAAhB,CAAhB;AACH","sourcesContent":["\nimport {put, takeLatest,call} from \"redux-saga/effects\";\n\nimport { select } from 'redux-saga/effects'; \nimport {request} from './helper';\nimport { incStepperSuccess} from '../actions/stepperAction';\nexport const Stepper =\n    function *Stepper () {\n        try {\n            const user = yield select(state => state.user);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/updateStep\",\n                \"data\": {step : user.complete + 1,id : user.id},\n                \"method\": \"post\"\n              });\n            if(response)\n            {\n                yield put(incStepperSuccess());\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n  \nexport default function *() {\n    yield takeLatest(\"INC_STEPPER\", Stepper);\n}"]},"metadata":{},"sourceType":"module"}