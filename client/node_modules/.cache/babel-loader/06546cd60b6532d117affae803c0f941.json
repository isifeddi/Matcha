{"ast":null,"code":"import axios from 'axios';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst asyncValidate = (values, error) => {\n  if (error) {\n    return sleep(1000).then(async () => {\n      const error = {};\n      const er = await axios.post('http://localhost:5000/checkIfEx', [values.username, values.email]);\n      console.log(er.data);\n\n      if (er.data.username === 'Username already exists') {\n        error.username = er.data.username;\n      }\n\n      if (er.data.email === 'Email already exists') {\n        error.email = er.data.email;\n      } // console.log(error.username)\n\n\n      if (error.username !== 'undefined' && error.email !== 'undefined') throw error;\n    });\n  }\n};\n\nexport default asyncValidate;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/Register/asyncValidate.js"],"names":["axios","sleep","ms","Promise","resolve","setTimeout","asyncValidate","values","error","then","er","post","username","email","console","log","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AAEA,MAAMI,aAAa,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACvC,MAAGA,KAAH,EAAS;AACP,WAAOP,KAAK,CAAC,IAAD,CAAL,CACNQ,IADM,CACD,YAAY;AAChB,YAAMD,KAAK,GAAG,EAAd;AACA,YAAME,EAAE,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,iCAAX,EAA8C,CAACJ,MAAM,CAACK,QAAR,EAAkBL,MAAM,CAACM,KAAzB,CAA9C,CAAjB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,EAAE,CAACM,IAAf;;AACD,UAAIN,EAAE,CAACM,IAAH,CAAQJ,QAAR,KAAqB,yBAAzB,EACA;AACEJ,QAAAA,KAAK,CAACI,QAAN,GAAiBF,EAAE,CAACM,IAAH,CAAQJ,QAAzB;AACD;;AACD,UAAIF,EAAE,CAACM,IAAH,CAAQH,KAAR,KAAkB,sBAAtB,EACA;AACEL,QAAAA,KAAK,CAACK,KAAN,GAAaH,EAAE,CAACM,IAAH,CAAQH,KAArB;AACD,OAXe,CAYhB;;;AACA,UAAGL,KAAK,CAACI,QAAN,KAAmB,WAAnB,IAAkCJ,KAAK,CAACK,KAAN,KAAgB,WAArD,EACE,MAAML,KAAN;AACH,KAhBM,CAAP;AAiBD;AAEF,CArBD;;AAuBA,eAAeF,aAAf","sourcesContent":["import axios from 'axios'\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nconst asyncValidate = (values, error) => {\n  if(error){\n    return sleep(1000)\n    .then(async () => {\n      const error = {}\n      const er = await axios.post('http://localhost:5000/checkIfEx', [values.username, values.email])\n       console.log(er.data)\n      if (er.data.username === 'Username already exists')\n      {\n        error.username = er.data.username\n      }\n      if (er.data.email === 'Email already exists')\n      {\n        error.email= er.data.email\n      }\n      // console.log(error.username)\n      if(error.username !== 'undefined' && error.email !== 'undefined')\n        throw error\n    })\n  }\n  \n}\n\nexport default asyncValidate"]},"metadata":{},"sourceType":"module"}