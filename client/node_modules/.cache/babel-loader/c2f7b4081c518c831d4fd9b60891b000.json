{"ast":null,"code":"const validate = values => {\n  const errors = {};\n  const requiredFields = ['firstname', 'lastname', 'username', 'email', 'password', 'confirmPassword'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  /*if(values.username.length < 2)\n  errors.username = 'Username must contain at least 2 characters';*/\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address!\";\n  }\n\n  if (values.password && !/\\d/.test(values.password)) errors.password = \"Password must contain a number!\";else if (values.password && !/[A-Z]/.test(values.password)) errors.password = \"Password must contain an uppercase letter!\";else if (values.password && !/[a-z]/.test(values.password)) errors.password = \"Password must contain a lowercase letter!\";else if (values.password && !/[a-z]/.test(values.password)) errors.password = \"Password must contain a special character!\";else if (values.password && !/[a-zA-Z0-9]{6,20}/.test(values.password)) errors.password = \"Password must contain at least 6 characters!\";\n  if (values.confirmPassword && values.password !== values.confirmPassword) errors.confirmPassword = \"Passwords does not match!\";\n  return errors;\n};\n\nexport default validate;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Mmatcha/client/src/containers/Register/validate.js"],"names":["validate","values","errors","requiredFields","forEach","field","trim","email","test","password","confirmPassword"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,cAAc,GAAG,CACnB,WADmB,EAEnB,UAFmB,EAGnB,UAHmB,EAInB,OAJmB,EAKnB,UALmB,EAMnB,iBANmB,CAAvB;AAQEA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC9B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AAC3CJ,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACD;AACF,GAJD;AAKE;;;AAEA,MAAIJ,MAAM,CAACM,KAAP,IAAgB,CAAC,4CAA4CC,IAA5C,CAAiDP,MAAM,CAACM,KAAxD,CAArB,EAAqF;AACjFL,IAAAA,MAAM,CAACK,KAAP,GAAe,wBAAf;AACH;;AACD,MAAGN,MAAM,CAACQ,QAAP,IAAmB,CAAC,KAAKD,IAAL,CAAUP,MAAM,CAACQ,QAAjB,CAAvB,EACEP,MAAM,CAACO,QAAP,GAAkB,iCAAlB,CADF,KAEK,IAAGR,MAAM,CAACQ,QAAP,IAAmB,CAAC,QAAQD,IAAR,CAAaP,MAAM,CAACQ,QAApB,CAAvB,EACDP,MAAM,CAACO,QAAP,GAAkB,4CAAlB,CADC,KAEA,IAAGR,MAAM,CAACQ,QAAP,IAAmB,CAAC,QAAQD,IAAR,CAAaP,MAAM,CAACQ,QAApB,CAAvB,EACDP,MAAM,CAACO,QAAP,GAAkB,2CAAlB,CADC,KAEA,IAAGR,MAAM,CAACQ,QAAP,IAAmB,CAAC,QAAQD,IAAR,CAAaP,MAAM,CAACQ,QAApB,CAAvB,EACDP,MAAM,CAACO,QAAP,GAAkB,4CAAlB,CADC,KAEA,IAAGR,MAAM,CAACQ,QAAP,IAAmB,CAAC,oBAAoBD,IAApB,CAAyBP,MAAM,CAACQ,QAAhC,CAAvB,EACDP,MAAM,CAACO,QAAP,GAAkB,8CAAlB;AACJ,MAAGR,MAAM,CAACS,eAAP,IAA0BT,MAAM,CAACQ,QAAP,KAAoBR,MAAM,CAACS,eAAxD,EACIR,MAAM,CAACQ,eAAP,GAAyB,2BAAzB;AAEJ,SAAOR,MAAP;AACP,CAnCD;;AAqCA,eAAeF,QAAf","sourcesContent":["const validate = (values) => {\n    const errors = {};\n\n    const requiredFields = [\n        'firstname',\n        'lastname',\n        'username',\n        'email',\n        'password',\n        'confirmPassword',\n      ];\n      requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n          errors[field] = 'Required !';\n        }\n      });\n        /*if(values.username.length < 2)\n        errors.username = 'Username must contain at least 2 characters';*/\n        if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address!\";\n        }\n        if(values.password && !/\\d/.test(values.password))\n          errors.password = \"Password must contain a number!\"\n        else if(values.password && !/[A-Z]/.test(values.password))\n            errors.password = \"Password must contain an uppercase letter!\"\n        else if(values.password && !/[a-z]/.test(values.password))\n            errors.password = \"Password must contain a lowercase letter!\"\n        else if(values.password && !/[a-z]/.test(values.password))\n            errors.password = \"Password must contain a special character!\"\n        else if(values.password && !/[a-zA-Z0-9]{6,20}/.test(values.password))\n            errors.password = \"Password must contain at least 6 characters!\"\n        if(values.confirmPassword && values.password !== values.confirmPassword)\n            errors.confirmPassword = \"Passwords does not match!\"\n        \n        return errors;\n}\n\nexport default validate;"]},"metadata":{},"sourceType":"module"}