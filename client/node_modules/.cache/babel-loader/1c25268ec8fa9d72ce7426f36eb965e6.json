{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoSuccess, addInfoError } from \"../actions/addInfoAction\";\nimport { decodeToken } from \"../actions/decodeAction\";\nimport axios from 'axios';\n\nconst getSelectOptions = function* getSelectOptions() {\n  try {\n    const response = yield axios.post('http://localhost:5000/getOptions');\n\n    if (response.data) {\n      yield put(getOptionsSuccess(response.data));\n    } else {\n      yield put(getOptionsSuccess());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess());\n    }\n  }\n};\n\nconst createSelectOption = function* createSelectOption(act) {\n  try {\n    const option = act.data.value;\n    const response = yield axios.post('http://localhost:5000/createOption', {\n      option: option\n    });\n\n    if (response.data.created) {\n      yield put(createOptionSuccess(response.data.option));\n    } else {\n      yield put(createOptionError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nconst add_Info = function* add_Info({\n  data,\n  id\n}) {\n  try {\n    const info = _objectSpread({}, data, {\n      id\n    });\n\n    const inter = data.interests.map(item => item.value);\n    info.interests = inter;\n    const response = yield axios.post('http://localhost:5000/addInfo', info);\n\n    if (response.data.added) {\n      yield put(addInfoSuccess());\n      yield put(decodeToken);\n    } else {\n      yield put(addInfoError(response.data.error));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/addInfoSaga.js"],"names":["takeLatest","put","getOptionsSuccess","createOptionSuccess","createOptionError","addInfoSuccess","addInfoError","decodeToken","axios","getSelectOptions","response","post","data","error","createSelectOption","act","option","value","created","add_Info","id","info","inter","interests","map","item","added"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,iBAAjD,EAAoEC,cAApE,EAAoFC,YAApF,QAAuG,0BAAvG;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GACpB,UAAUA,gBAAV,GAA8B;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,kCAAX,CAAxB;;AACA,QAAGD,QAAQ,CAACE,IAAZ,EACA;AACI,YAAMX,GAAG,CAACC,iBAAiB,CAACQ,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACH,KAHD,MAKA;AACI,YAAMX,GAAG,CAACC,iBAAiB,EAAlB,CAAT;AACH;AACJ,GAVD,CAUC,OAAOW,KAAP,EAAc;AACb,QAAIA,KAAK,CAACH,QAAV,EAAoB;AAClB,YAAMT,GAAG,CAACC,iBAAiB,EAAlB,CAAT;AACD;AACF;AACJ,CAjBD;;AAmBA,MAAMY,kBAAkB,GACtB,UAAUA,kBAAV,CAA8BC,GAA9B,EAAmC;AACjC,MAAI;AACA,UAAMC,MAAM,GAAGD,GAAG,CAACH,IAAJ,CAASK,KAAxB;AACA,UAAMP,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,oCAAX,EAAiD;AAACK,MAAAA,MAAM,EAAEA;AAAT,KAAjD,CAAxB;;AACA,QAAGN,QAAQ,CAACE,IAAT,CAAcM,OAAjB,EACA;AACE,YAAMjB,GAAG,CAACE,mBAAmB,CAACO,QAAQ,CAACE,IAAT,CAAcI,MAAf,CAApB,CAAT;AACD,KAHD,MAKA;AACE,YAAMf,GAAG,CAACG,iBAAiB,CAACM,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAlB,CAAT;AACD;AACJ,GAXD,CAWC,OAAOA,KAAP,EAAc;AACb,QAAIA,KAAK,CAACH,QAAV,EAAoB;AAClB,YAAMT,GAAG,CAACG,iBAAiB,CAAC,yBAAD,CAAlB,CAAT;AACD;AACF;AACJ,CAlBD;;AAoBA,MAAMe,QAAQ,GACZ,UAAUA,QAAV,CAAoB;AAACP,EAAAA,IAAD;AAAOQ,EAAAA;AAAP,CAApB,EAAgC;AAC9B,MAAI;AACF,UAAMC,IAAI,qBAAOT,IAAP;AAAaQ,MAAAA;AAAb,MAAV;;AACA,UAAME,KAAK,GAAGV,IAAI,CAACW,SAAL,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACR,KAAhC,CAAd;AACAI,IAAAA,IAAI,CAACE,SAAL,GAAiBD,KAAjB;AACA,UAAMZ,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,+BAAX,EAA4CU,IAA5C,CAAxB;;AACA,QAAGX,QAAQ,CAACE,IAAT,CAAcc,KAAjB,EACA;AACE,YAAMzB,GAAG,CAACI,cAAc,EAAf,CAAT;AACA,YAAMJ,GAAG,CAACM,WAAD,CAAT;AACD,KAJD,MAMA;AACE,YAAMN,GAAG,CAACK,YAAY,CAACI,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAb,CAAT;AACD;AACF,GAdD,CAcC,OAAOA,KAAP,EAAc;AACb,QAAIA,KAAK,CAACH,QAAV,EAAoB;AAClB,YAAMT,GAAG,CAACG,iBAAiB,CAAC,yBAAD,CAAlB,CAAT;AACD;AACF;AACJ,CArBD;;AAuBA,eAAe,aAAa;AAC1B,QAAMJ,UAAU,CAAC,aAAD,EAAgBS,gBAAhB,CAAhB;AACA,QAAMT,UAAU,CAAC,eAAD,EAAkBc,kBAAlB,CAAhB;AACA,QAAMd,UAAU,CAAC,UAAD,EAAamB,QAAb,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoSuccess, addInfoError} from \"../actions/addInfoAction\";\nimport { decodeToken } from \"../actions/decodeAction\";\nimport axios from 'axios';\n\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/getOptions');\n        if(response.data)\n        {\n            yield put(getOptionsSuccess(response.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess());\n      }\n    }\n};\n\nconst createSelectOption =\n  function *createSelectOption (act) {\n    try {\n        const option = act.data.value;\n        const response  = yield axios.post('http://localhost:5000/createOption', {option: option});\n        if(response.data.created)\n        {\n          yield put(createOptionSuccess(response.data.option));\n        }\n        else\n        {\n          yield put(createOptionError(response.data.error));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst add_Info =\n  function *add_Info ({data, id}) {\n    try {\n      const info = {...data, id}\n      const inter = data.interests.map(item => item.value)\n      info.interests = inter;\n      const response  = yield axios.post('http://localhost:5000/addInfo', info);\n      if(response.data.added)\n      {\n        yield put(addInfoSuccess());\n        yield put(decodeToken);\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info)\n}"]},"metadata":{},"sourceType":"module"}