{"ast":null,"code":"import axios from 'axios';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst asyncValidate = values => {\n  return sleep(1000).then(async () => {\n    const error = {};\n    const v = {\n      username: values.username,\n      email: values.email\n    };\n    const er = await axios.post('http://localhost:5000/checkIfEx', v);\n    console.log(er.data);\n\n    if (er.data.username === 'Username already exists') {\n      error.username = er.data.username;\n    }\n\n    if (er.data.email === 'Email already exists') {\n      error.email = er.data.email;\n    } // console.log(error.username)\n\n\n    if (error.username !== 'undefined' && error.email !== 'undefined') throw error;\n  });\n};\n\nexport default asyncValidate;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/Register/asyncValidate.js"],"names":["axios","sleep","ms","Promise","resolve","setTimeout","asyncValidate","values","then","error","v","username","email","er","post","console","log","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AAEA,MAAMI,aAAa,GAAIC,MAAD,IAAY;AAE9B,SAAON,KAAK,CAAC,IAAD,CAAL,CACNO,IADM,CACD,YAAY;AAEhB,UAAMC,KAAK,GAAG,EAAd;AAEA,UAAMC,CAAC,GAAG;AAACC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAAlB;AAA4BC,MAAAA,KAAK,EAAEL,MAAM,CAACK;AAA1C,KAAV;AAEA,UAAMC,EAAE,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,iCAAX,EAA8CJ,CAA9C,CAAjB;AAECK,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACI,IAAf;;AAED,QAAIJ,EAAE,CAACI,IAAH,CAAQN,QAAR,KAAqB,yBAAzB,EACA;AACEF,MAAAA,KAAK,CAACE,QAAN,GAAiBE,EAAE,CAACI,IAAH,CAAQN,QAAzB;AACD;;AACD,QAAIE,EAAE,CAACI,IAAH,CAAQL,KAAR,KAAkB,sBAAtB,EACA;AACEH,MAAAA,KAAK,CAACG,KAAN,GAAaC,EAAE,CAACI,IAAH,CAAQL,KAArB;AACD,KAjBe,CAkBhB;;;AACA,QAAGH,KAAK,CAACE,QAAN,KAAmB,WAAnB,IAAkCF,KAAK,CAACG,KAAN,KAAgB,WAArD,EACE,MAAMH,KAAN;AACH,GAtBM,CAAP;AAuBH,CAzBD;;AA4BA,eAAeH,aAAf","sourcesContent":["import axios from 'axios'\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nconst asyncValidate = (values) => {\n  \n    return sleep(1000)\n    .then(async () => {\n\n      const error = {}\n\n      const v = {username :values.username, email: values.email}\n\n      const er = await axios.post('http://localhost:5000/checkIfEx', v)\n\n       console.log(er.data)\n       \n      if (er.data.username === 'Username already exists')\n      {\n        error.username = er.data.username\n      }\n      if (er.data.email === 'Email already exists')\n      {\n        error.email= er.data.email\n      }\n      // console.log(error.username)\n      if(error.username !== 'undefined' && error.email !== 'undefined')\n        throw error\n    })\n}\n  \n\nexport default asyncValidate"]},"metadata":{},"sourceType":"module"}