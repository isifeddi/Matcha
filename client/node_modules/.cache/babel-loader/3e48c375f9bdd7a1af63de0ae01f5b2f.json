{"ast":null,"code":"var _jsxFileName = \"/Volumes/Storage/goinfre/isifeddi/Matcha-i2/client/src/containers/completeProfile/localisation.js\";\nimport React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport { connect } from \"react-redux\";\nimport { getLoc } from '../../actions/addInfoAction';\n\nclass LocalisationContainer extends Component {\n  // state = { userLocation: { lat: 32, lng: 32 }, loading: true};\n  componentDidMount() {\n    //     const options = {\n    //         enableHighAccuracy: true,\n    //         timeout: 5000,\n    //         maximumAge: 0\n    //     };\n    //     navigator.geolocation.getCurrentPosition(\n    //         position => {\n    //             const { latitude, longitude, accuracy } = position.coords;\n    //             this.setState({\n    //                 userLocation: { lat: latitude, lng: longitude },\n    //                 loading: false\n    //             });\n    //             console.log('Votre position actuelle est :');\n    //             console.log(`Latitude : ${latitude}`);\n    //             console.log(`Longitude : ${longitude}`);\n    //             console.log(`La précision est de ${accuracy} mètres.`);\n    //         },\n    //         err => {\n    //             this.setState({\n    //                 userLocation: { lat: 32.8781004, lng: -6.8887306 },\n    //                 loading: false\n    //             });\n    //             console.warn(`ERREUR (${err.code}): ${err.message}`);\n    //         },\n    //         options\n    //     );\n    //  axios.get('http://ipinfo.io/json').then(res => console.log(res)).catch(err => console.log(err));\n    this.props.getLoc();\n  }\n\n  render() {\n    // const {loading, userLoc} = this.state;\n    const userLocation = {\n      lat: this.props.user.lat,\n      lng: this.props.user.lng\n    };\n    if (!this.props.user.lat) return null;\n    return React.createElement(Localisation, {\n      userL: userLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  \"user\": state.user\n});\n\nconst mapDispatchToProps = {\n  \"getLoc\": getLoc\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalisationContainer);","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/Matcha-i2/client/src/containers/completeProfile/localisation.js"],"names":["React","Component","Localisation","connect","getLoc","LocalisationContainer","componentDidMount","props","render","userLocation","lat","user","lng","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,6BAArB;;AAEA,MAAMC,qBAAN,SAAoCJ,SAApC,CAA6C;AACzC;AACCK,EAAAA,iBAAiB,GAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,SAAKC,KAAL,CAAWH,MAAX;AACH;;AACDI,EAAAA,MAAM,GAAE;AACJ;AACA,UAAMC,YAAY,GAAG;AAACC,MAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,IAAX,CAAgBD,GAAtB;AAA2BE,MAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWI,IAAX,CAAgBC;AAAhD,KAArB;AACA,QAAG,CAAC,KAAKL,KAAL,CAAWI,IAAX,CAAgBD,GAApB,EAAyB,OAAO,IAAP;AACzB,WACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAvCwC;;AAyC7C,MAAMI,eAAe,GAAIC,KAAD,KACxB;AACI,UAAQA,KAAK,CAACH;AADlB,CADwB,CAAxB;;AAIA,MAAMI,kBAAkB,GAAG;AACvB,YAAUX;AADa,CAA3B;AAIA,eAAeD,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,qBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport {connect} from \"react-redux\";\nimport {getLoc} from '../../actions/addInfoAction';\n\nclass LocalisationContainer extends Component{\n    // state = { userLocation: { lat: 32, lng: 32 }, loading: true};\n     componentDidMount(){\n    //     const options = {\n    //         enableHighAccuracy: true,\n    //         timeout: 5000,\n    //         maximumAge: 0\n    //     };\n    //     navigator.geolocation.getCurrentPosition(\n    //         position => {\n    //             const { latitude, longitude, accuracy } = position.coords;\n    //             this.setState({\n    //                 userLocation: { lat: latitude, lng: longitude },\n    //                 loading: false\n    //             });\n    //             console.log('Votre position actuelle est :');\n    //             console.log(`Latitude : ${latitude}`);\n    //             console.log(`Longitude : ${longitude}`);\n    //             console.log(`La précision est de ${accuracy} mètres.`);\n    //         },\n    //         err => {\n    //             this.setState({\n    //                 userLocation: { lat: 32.8781004, lng: -6.8887306 },\n    //                 loading: false\n    //             });\n    //             console.warn(`ERREUR (${err.code}): ${err.message}`);\n    //         },\n    //         options\n    //     );\n    //  axios.get('http://ipinfo.io/json').then(res => console.log(res)).catch(err => console.log(err));\n        this.props.getLoc();\n    }\n    render(){\n        // const {loading, userLoc} = this.state;\n        const userLocation = {lat: this.props.user.lat, lng: this.props.user.lng}\n        if(!this.props.user.lat) return null;\n        return (\n            <Localisation userL={userLocation}/>\n        )\n    }\n}\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n});\nconst mapDispatchToProps = {\n    \"getLoc\": getLoc,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalisationContainer);"]},"metadata":{},"sourceType":"module"}