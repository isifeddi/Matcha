{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\nvar GridList = React.forwardRef(function GridList(props, ref) {\n  var _props$cellHeight = props.cellHeight,\n      cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 2 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 4 : _props$spacing,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"spacing\", \"style\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp),\n    ref: ref,\n    style: _extends({\n      margin: -spacing / 2\n    }, style)\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (child.type === React.Fragment) {\n        console.error([\"Material-UI: the GridList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childCols = child.props.cols || 1;\n    var childRows = child.props.rows || 1;\n    return React.cloneElement(child, {\n      style: _extends({\n        width: \"\".concat(100 / cols * childCols, \"%\"),\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\n        padding: spacing / 2\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridList.propTypes = {\n  /**\n   * Number of px for one cell height.\n   * You can set `'auto'` if you want to let the children determine the height.\n   */\n  cellHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  /**\n   * Grid Tiles that will be in Grid List.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Number of px for the spacing between tiles.\n   */\n  spacing: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridList'\n})(GridList);","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/node_modules/@material-ui/core/esm/GridList/GridList.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","root","display","flexWrap","overflowY","listStyle","padding","WebkitOverflowScrolling","GridList","forwardRef","props","ref","_props$cellHeight","cellHeight","children","classes","classNameProp","className","_props$cols","cols","_props$component","component","Component","_props$spacing","spacing","style","other","createElement","margin","Children","map","child","isValidElement","process","env","NODE_ENV","type","Fragment","console","error","join","childCols","childRows","rows","cloneElement","width","concat","height","propTypes","oneOfType","number","oneOf","node","isRequired","object","string","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\nvar GridList = React.forwardRef(function GridList(props, ref) {\n  var _props$cellHeight = props.cellHeight,\n      cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 2 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 4 : _props$spacing,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"spacing\", \"style\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp),\n    ref: ref,\n    style: _extends({\n      margin: -spacing / 2\n    }, style)\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (child.type === React.Fragment) {\n        console.error([\"Material-UI: the GridList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childCols = child.props.cols || 1;\n    var childRows = child.props.rows || 1;\n    return React.cloneElement(child, {\n      style: _extends({\n        width: \"\".concat(100 / cols * childCols, \"%\"),\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\n        padding: spacing / 2\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridList.propTypes = {\n  /**\n   * Number of px for one cell height.\n   * You can set `'auto'` if you want to let the children determine the height.\n   */\n  cellHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  /**\n   * Grid Tiles that will be in Grid List.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Number of px for the spacing between tiles.\n   */\n  spacing: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridList'\n})(GridList);"]},"metadata":{},"sourceType":"module"}