{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { push } from \"react-router-redux\";\nimport { request } from './helper';\nimport { updateUserSuccess } from '../actions/userAction';\nexport const Stepper = function* Stepper() {\n  try {\n    const user = yield select(state => state.user);\n    const response = yield call(request, {\n      \"url\": \"http://localhost:5000/updateStep\",\n      \"data\": {\n        id: user.id,\n        step: user.complete + 1\n      },\n      \"method\": \"post\"\n    });\n    yield put(updateUserSuccess(response.data.user));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport default function* () {\n  yield takeLatest(\"INC_STEPPER\", Stepper);\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/sagas/stepperSaga.js"],"names":["put","takeLatest","push","request","updateUserSuccess","Stepper","user","select","state","response","call","id","step","complete","data","error","console","log"],"mappings":"AACA,SAAQA,GAAR,EAAaC,UAAb,QAA8B,oBAA9B;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,iBAAT,QAAiC,uBAAjC;AACA,OAAO,MAAMC,OAAO,GAChB,UAAUA,OAAV,GAAqB;AACjB,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACF,IAAhB,CAAzB;AACA,UAAMG,QAAQ,GAAG,MAAMC,IAAI,CAACP,OAAD,EAAU;AACjC,aAAO,kCAD0B;AAEjC,cAAQ;AAACQ,QAAAA,EAAE,EAAGL,IAAI,CAACK,EAAX;AAAcC,QAAAA,IAAI,EAAGN,IAAI,CAACO,QAAL,GAAgB;AAArC,OAFyB;AAGjC,gBAAU;AAHuB,KAAV,CAA3B;AAKE,UAAMb,GAAG,CAACI,iBAAiB,CAACK,QAAQ,CAACK,IAAT,CAAcR,IAAf,CAAlB,CAAT;AACL,GARD,CAQE,OAAOS,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAbE;AAeP,eAAe,aAAa;AACxB,QAAMd,UAAU,CAAC,aAAD,EAAgBI,OAAhB,CAAhB;AACH","sourcesContent":["\nimport {put, takeLatest} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {request} from './helper';\nimport { updateUserSuccess} from '../actions/userAction';\nexport const Stepper =\n    function *Stepper () {\n        try {\n            const user = yield select(state => state.user);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/updateStep\",\n                \"data\": {id : user.id,step : user.complete + 1},\n                \"method\": \"post\"\n              });\n              yield put(updateUserSuccess(response.data.user));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n  \nexport default function *() {\n    yield takeLatest(\"INC_STEPPER\", Stepper);\n}"]},"metadata":{},"sourceType":"module"}