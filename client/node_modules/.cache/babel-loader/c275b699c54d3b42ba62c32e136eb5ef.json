{"ast":null,"code":"import { put, takeLatest, call } from \"redux-saga/effects\";\nimport { select } from 'redux-saga/effects';\nimport { request } from './helper';\nimport { getUsersSuccess, getUsersError, deleteUser } from '../actions/userAction';\nexport const getUsers = function* getUsers() {\n  try {\n    const user = yield select(state => state.user);\n    const response = yield call(request, {\n      \"url\": \"http://localhost:5000/getUsers\",\n      \"data\": {\n        id: user.id\n      },\n      \"method\": \"post\"\n    });\n\n    if (response) {\n      yield put(getUsersSuccess(response.data));\n    } else yield put(getUsersError('there has been an error'));\n  } catch (error) {\n    yield put(getUsersError('there has been an error'));\n  }\n};\nexport const blockUser = function* blockUser({\n  blocked_user_id\n}) {\n  try {\n    const user = yield select(state => state.user);\n    const response = yield call(request, {\n      \"url\": \"http://localhost:5000/blockUser\",\n      \"data\": {\n        id: user.id,\n        blocked_user_id: blocked_user_id\n      },\n      \"method\": \"post\"\n    });\n\n    if (response) {\n      console.log(response);\n      yield put(deleteUser(blocked_user_id));\n    }\n  } catch (error) {// yield put(getUsersError('there has been an error'));\n  }\n};\nexport default function* () {\n  yield takeLatest(\"GET_USERS\", getUsers);\n  yield takeLatest(\"BLOCK_USER\", blockUser);\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/sagas/usersSaga.js"],"names":["put","takeLatest","call","select","request","getUsersSuccess","getUsersError","deleteUser","getUsers","user","state","response","id","data","error","blockUser","blocked_user_id","console","log"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAwBC,IAAxB,QAAmC,oBAAnC;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,eAAT,EAAyBC,aAAzB,EAAuCC,UAAvC,QAAwD,uBAAxD;AACA,OAAO,MAAMC,QAAQ,GACjB,UAAUA,QAAV,GAAsB;AAClB,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMN,MAAM,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAzB;AACA,UAAME,QAAQ,GAAG,MAAMT,IAAI,CAACE,OAAD,EAAU;AACjC,aAAO,gCAD0B;AAEjC,cAAQ;AAACQ,QAAAA,EAAE,EAAGH,IAAI,CAACG;AAAX,OAFyB;AAGjC,gBAAU;AAHuB,KAAV,CAA3B;;AAKA,QAAGD,QAAH,EACA;AACI,YAAMX,GAAG,CAACK,eAAe,CAACM,QAAQ,CAACE,IAAV,CAAhB,CAAT;AACH,KAHD,MAKI,MAAMb,GAAG,CAACM,aAAa,CAAC,yBAAD,CAAd,CAAT;AACP,GAbD,CAaE,OAAOQ,KAAP,EAAc;AACZ,UAAMd,GAAG,CAACM,aAAa,CAAC,yBAAD,CAAd,CAAT;AACH;AACJ,CAlBE;AAmBH,OAAO,MAAMS,SAAS,GACtB,UAAUA,SAAV,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAuC;AACnC,MAAI;AACA,UAAMP,IAAI,GAAG,MAAMN,MAAM,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAzB;AACA,UAAME,QAAQ,GAAG,MAAMT,IAAI,CAACE,OAAD,EAAU;AACjC,aAAO,iCAD0B;AAEjC,cAAQ;AAACQ,QAAAA,EAAE,EAAGH,IAAI,CAACG,EAAX;AAAeI,QAAAA,eAAe,EAAEA;AAAhC,OAFyB;AAGjC,gBAAU;AAHuB,KAAV,CAA3B;;AAKA,QAAGL,QAAH,EACA;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,YAAMX,GAAG,CAACO,UAAU,CAACS,eAAD,CAAX,CAAT;AACH;AACJ,GAZD,CAYE,OAAOF,KAAP,EAAc,CACZ;AACH;AACJ,CAjBM;AAkBX,eAAe,aAAa;AACxB,QAAMb,UAAU,CAAC,WAAD,EAAcO,QAAd,CAAhB;AACA,QAAMP,UAAU,CAAC,YAAD,EAAcc,SAAd,CAAhB;AACH","sourcesContent":["import {put, takeLatest,call} from \"redux-saga/effects\";\n\nimport { select } from 'redux-saga/effects'; \nimport {request} from './helper';\nimport { getUsersSuccess,getUsersError,deleteUser} from '../actions/userAction';\nexport const getUsers =\n    function *getUsers () {\n        try {\n            const user = yield select(state => state.user);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getUsers\",\n                \"data\": {id : user.id},\n                \"method\": \"post\"\n              });\n            if(response)\n            {\n                yield put(getUsersSuccess(response.data));\n            }\n            else\n                yield put(getUsersError('there has been an error'));\n        } catch (error) {\n            yield put(getUsersError('there has been an error'));\n        }\n    };\n    export const blockUser =\n    function *blockUser({blocked_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/blockUser\",\n                \"data\": {id : user.id, blocked_user_id: blocked_user_id},\n                \"method\": \"post\"\n              });\n            if(response)\n            {\n                console.log(response)\n                yield put(deleteUser(blocked_user_id));\n            }\n        } catch (error) {\n            // yield put(getUsersError('there has been an error'));\n        }\n    };\nexport default function *() {\n    yield takeLatest(\"GET_USERS\", getUsers);\n    yield takeLatest(\"BLOCK_USER\",blockUser);\n}"]},"metadata":{},"sourceType":"module"}