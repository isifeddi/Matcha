{"ast":null,"code":"import _slicedToArray from \"/Users/ibouroum/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js\";\nimport React, { useState } from 'react';\nimport Pictures from '../../components/completeProfile/pictures';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nconst _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      imagePreviewUrl = _React$useState2[0],\n      setImagePreviewUrl = _React$useState2[1];\n\nconst fileChangedHandler = async event => {\n  let files = event.target.files[0];\n  let reader = new FileReader();\n\n  reader.onload = event => {\n    reader.readAsDataURL(files);\n  };\n\n  setImagePreviewUrl(reader.result);\n  const headers = {\n    'Content-Type': 'multipart/form-data'\n  };\n  const formData = new FormData();\n  formData.append('files', files);\n\n  try {\n    const response = await axios.post('http://localhost:5000/upload', formData, headers);\n    console.log(response);\n  } catch (err) {}\n};\n\nexport const pictures = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Pictures, {\n    fileChangedHandler: fileChangedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(pictures);","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js"],"names":["React","useState","Pictures","connect","axios","imagePreviewUrl","setImagePreviewUrl","fileChangedHandler","event","files","target","reader","FileReader","onload","readAsDataURL","result","headers","formData","FormData","append","response","post","console","log","err","pictures","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,2CAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;wBAE6CJ,KAAK,CAACC,QAAN,CAAe,IAAf,C;;MAAtCI,e;MAAgBC,kB;;AACvB,MAAMC,kBAAkB,GAAI,MAAOC,KAAP,IAAgB;AACxC,MAAIC,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAmB,CAAnB,CAAb;AACA,MAAIE,MAAM,GAAI,IAAIC,UAAJ,EAAd;;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAiBL,KAAD,IAAW;AAC3BG,IAAAA,MAAM,CAACG,aAAP,CAAqBL,KAArB;AACD,GAFC;;AAGFH,EAAAA,kBAAkB,CAACK,MAAM,CAACI,MAAR,CAAlB;AACA,QAAMC,OAAO,GAAG;AAAC,oBAAgB;AAAjB,GAAhB;AAEE,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwBV,KAAxB;;AACA,MAAG;AACD,UAAMW,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA0CJ,QAA1C,EAAmDD,OAAnD,CAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAHD,CAGE,OAAMI,GAAN,EAAU,CACX;AACJ,CAhBD;;AAmBA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,kBAAkB,EAAIlB,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CANM;;AASP,MAAMmB,eAAe,GAAIC,KAAD,KACxB,EADwB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,EAA3B;AAIA,eAAezB,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CH,QAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport Pictures from '../../components/completeProfile/pictures';\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\n\nconst [imagePreviewUrl,setImagePreviewUrl] = React.useState(null);\nconst fileChangedHandler =  async  event => {\n    let files  = event.target.files[0];\n    let reader  = new FileReader();\n    reader.onload = (event) => {\n    reader.readAsDataURL(files);\n  }\n  setImagePreviewUrl(reader.result);\n  const headers = {'Content-Type': 'multipart/form-data'};\n   \n    const formData = new FormData();\n    formData.append('files',files);\n    try{\n      const response = await axios.post('http://localhost:5000/upload',formData,headers);\n      console.log(response)\n    } catch(err){\n    }\n}\n  \n\nexport const pictures = () => {\n    return (\n        <div>\n            <Pictures fileChangedHandler = {fileChangedHandler}/>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => (\n{\n    \n});\nconst mapDispatchToProps = {\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(pictures);"]},"metadata":{},"sourceType":"module"}