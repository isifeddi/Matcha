{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { delay } from 'redux-saga/effects';\nimport { getOptions, getOptionsSuccess, createOptionSuccess, createOptionError } from \"../actions/addInfoAction\";\nimport axios from 'axios';\n\nconst getSelectOptions = function* getSelectOptions() {\n  try {\n    const response = yield axios.post('http://localhost:5000/getOptions');\n\n    if (response.data) {\n      yield put(getOptionsSuccess(response.data));\n    } else {\n      yield put(getOptionsSuccess());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(getOptionsSuccess());\n    }\n  }\n};\n\nconst createSelectOption = function* createSelectOption(act) {\n  try {\n    const option = act.data.value;\n    const response = yield axios.post('http://localhost:5000/createOption', {\n      option: option\n    });\n\n    if (response.data.created) {\n      yield put(createOptionSuccess(response.data.option));\n    } else {\n      yield put(createOptionError(response.data.error));\n      yield delay(3000);\n      yield put(getOptions());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(createOptionError('there has been an error'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/addInfoSaga.js"],"names":["takeLatest","put","delay","getOptions","getOptionsSuccess","createOptionSuccess","createOptionError","axios","getSelectOptions","response","post","data","error","createSelectOption","act","option","value","created"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,mBAAxC,EAA6DC,iBAA7D,QAAqF,0BAArF;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GACpB,UAAUA,gBAAV,GAA8B;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,kCAAX,CAAxB;;AACA,QAAGD,QAAQ,CAACE,IAAZ,EACA;AACI,YAAMV,GAAG,CAACG,iBAAiB,CAACK,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACH,KAHD,MAKA;AACI,YAAMV,GAAG,CAACG,iBAAiB,EAAlB,CAAT;AACH;AACJ,GAVD,CAUC,OAAOQ,KAAP,EAAc;AACb,QAAIA,KAAK,CAACH,QAAV,EAAoB;AAClB,YAAMR,GAAG,CAACG,iBAAiB,EAAlB,CAAT;AACD;AACF;AACJ,CAjBD;;AAmBA,MAAMS,kBAAkB,GACtB,UAAUA,kBAAV,CAA8BC,GAA9B,EAAmC;AACjC,MAAI;AACA,UAAMC,MAAM,GAAGD,GAAG,CAACH,IAAJ,CAASK,KAAxB;AACA,UAAMP,QAAQ,GAAI,MAAMF,KAAK,CAACG,IAAN,CAAW,oCAAX,EAAiD;AAACK,MAAAA,MAAM,EAAEA;AAAT,KAAjD,CAAxB;;AACA,QAAGN,QAAQ,CAACE,IAAT,CAAcM,OAAjB,EACA;AACE,YAAMhB,GAAG,CAACI,mBAAmB,CAACI,QAAQ,CAACE,IAAT,CAAcI,MAAf,CAApB,CAAT;AACD,KAHD,MAKA;AACE,YAAMd,GAAG,CAACK,iBAAiB,CAACG,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAlB,CAAT;AACA,YAAMV,KAAK,CAAC,IAAD,CAAX;AACA,YAAMD,GAAG,CAACE,UAAU,EAAX,CAAT;AACD;AACJ,GAbD,CAaC,OAAOS,KAAP,EAAc;AACb,QAAIA,KAAK,CAACH,QAAV,EAAoB;AAClB,YAAMR,GAAG,CAACK,iBAAiB,CAAC,yBAAD,CAAlB,CAAT;AACD;AACF;AACJ,CApBD;;AAsBA,eAAe,aAAa;AAC1B,QAAMN,UAAU,CAAC,aAAD,EAAgBQ,gBAAhB,CAAhB;AACA,QAAMR,UAAU,CAAC,eAAD,EAAkBa,kBAAlB,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport { delay } from 'redux-saga/effects'\nimport { getOptions, getOptionsSuccess, createOptionSuccess, createOptionError} from \"../actions/addInfoAction\";\nimport axios from 'axios';\n\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n        const response  = yield axios.post('http://localhost:5000/getOptions');\n        if(response.data)\n        {\n            yield put(getOptionsSuccess(response.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess());\n      }\n    }\n};\n\nconst createSelectOption =\n  function *createSelectOption (act) {\n    try {\n        const option = act.data.value;\n        const response  = yield axios.post('http://localhost:5000/createOption', {option: option});\n        if(response.data.created)\n        {\n          yield put(createOptionSuccess(response.data.option));\n        }\n        else\n        {\n          yield put(createOptionError(response.data.error));\n          yield delay(3000);       \n          yield put(getOptions());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n}"]},"metadata":{},"sourceType":"module"}