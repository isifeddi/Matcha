{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/MATCHA/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Register from '../../components/Register';\nimport { LoginAction } from '../../actions/loginAction';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['username', 'password'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  \"form\": state.form,\n  \"status\": state.login\n});\n\nconst mapDispatchToProps = {\n  \"loginAction\": LoginAction\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(form => {\n    dispatchProps.registerAction(form);\n  })\n});\n\nconst connectedRegisterContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Register);\nconst RegisterContainer = reduxForm({\n  form: \"register\",\n  \"destroyOnUnmount\": true,\n  validate,\n  \"asyncValidate\": asyncValidateAll,\n  \"asyncBlurFields\": [\"username\", \"email\"]\n})(connectedRegisterContainer);\nexport default RegisterContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/MATCHA/client/src/containers/Login/index.js"],"names":["Register","LoginAction","connect","reduxForm","validate","values","errors","requiredFields","forEach","field","trim","mapStateToProps","state","form","login","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","registerAction","connectedRegisterContainer","RegisterContainer","asyncValidateAll"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAyB,YAAzB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,UADmB,EAEnB,UAFmB,CAAvB;AAIAA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AACzCJ,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKA,SAAOH,MAAP;AACH,CAZD;;AAcA,MAAMK,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAACC,IADnB;AAEI,YAAWD,KAAK,CAACE;AAFrB,CADwB,CAAxB;;AAKA,MAAMC,kBAAkB,GAAG;AACvB,iBAAed;AADQ,CAA3B;;AAGA,MAAMe,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAyBP,IAAD,IAAQ;AAC7CK,IAAAA,aAAa,CAACG,cAAd,CAA6BR,IAA7B;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMS,0BAA0B,GAAGpB,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDhB,QAAxD,CAAnC;AACA,MAAMuB,iBAAiB,GAAGpB,SAAS,CAAC;AAChCU,EAAAA,IAAI,EAAG,UADyB;AAEhC,sBAAoB,IAFY;AAGhCT,EAAAA,QAHgC;AAIhC,mBAAiBoB,gBAJe;AAKhC,qBAAmB,CAAC,UAAD,EAAa,OAAb;AALa,CAAD,CAAT,CAOvBF,0BAPuB,CAA1B;AAUA,eAAeC,iBAAf","sourcesContent":["import Register from '../../components/Register';\nimport {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm } from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'username',\n        'password',\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.login\n});\nconst mapDispatchToProps = {\n    \"loginAction\": LoginAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps)=> ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form)=>{\n        dispatchProps.registerAction(form);\n    })\n});\n\nconst connectedRegisterContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Register); \nconst RegisterContainer = reduxForm({\n    form : \"register\",\n    \"destroyOnUnmount\": true,  \n    validate,\n    \"asyncValidate\": asyncValidateAll,\n    \"asyncBlurFields\": [\"username\", \"email\"]\n\n})(connectedRegisterContainer);\n\n\nexport default RegisterContainer;"]},"metadata":{},"sourceType":"module"}