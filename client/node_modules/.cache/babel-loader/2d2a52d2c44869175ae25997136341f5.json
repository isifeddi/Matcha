{"ast":null,"code":"import _slicedToArray from \"/Users/ibouroum/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js\";\nimport React from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nconst Pictures = props => {\n  const user = props.user,\n        images = props.images;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        imagePreviewUrl = _React$useState2[0],\n        setImagePreviewUrl = _React$useState2[1];\n\n  const fileChangedHandler = event => {\n    //console.log(event.target.files[0]);\n    let files = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onload = event => {\n      setImagePreviewUrl(reader.result);\n    };\n\n    reader.readAsDataURL(files);\n    const headers = {\n      'Content-Type': 'multipart/form-data'\n    };\n    const formData = new FormData();\n    formData.append('files', files);\n    axios.post('https:localhost:5000/upload', {\n      formData: formData,\n      userId: user.id\n    }, headers).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Picture, {\n    fileChangedHandler: fileChangedHandler,\n    imagePreviewUrl: imagePreviewUrl,\n    images: images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  \"user\": state.user,\n  \"images\": state.imagesReducer\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js"],"names":["React","Picture","connect","axios","Pictures","props","user","images","useState","imagePreviewUrl","setImagePreviewUrl","fileChangedHandler","event","files","target","reader","FileReader","onload","result","readAsDataURL","headers","formData","FormData","append","post","userId","id","then","res","console","log","catch","err","mapStateToProps","state","imagesReducer","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QACjBC,IADiB,GACFD,KADE,CACjBC,IADiB;AAAA,QACZC,MADY,GACFF,KADE,CACZE,MADY;;AAAA,0BAEiBP,KAAK,CAACQ,QAAN,EAFjB;AAAA;AAAA,QAErBC,eAFqB;AAAA,QAELC,kBAFK;;AAI5B,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC;AACE,QAAIC,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAmB,CAAnB,CAAb;AACA,QAAIE,MAAM,GAAI,IAAIC,UAAJ,EAAd;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBL,KAAD,IAAW;AACvBF,MAAAA,kBAAkB,CAACK,MAAM,CAACG,MAAR,CAAlB;AACH,KAFD;;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBN,KAArB;AACA,UAAMO,OAAO,GAAG;AAAC,sBAAgB;AAAjB,KAAhB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwBV,KAAxB;AACAV,IAAAA,KAAK,CAACqB,IAAN,CAAW,6BAAX,EAAyC;AAACH,MAAAA,QAAQ,EAAGA,QAAZ;AAAsBI,MAAAA,MAAM,EAAGnB,IAAI,CAACoB;AAApC,KAAzC,EAAiFN,OAAjF,EACCO,IADD,CACOC,GAAD,IAAQ;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAHD,EAGGG,KAHH,CAGUC,GAAD,IAAO;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KALD;AAOH,GAlBD;;AAmBI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,kBAAkB,EAAIrB,kBAA/B;AAAmD,IAAA,eAAe,EAAIF,eAAtE;AAAuF,IAAA,MAAM,EAAIF,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA5BD;;AA+BA,MAAM0B,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAAC5B,IADnB;AAEI,YAAW4B,KAAK,CAACC;AAFrB,CADwB,CAAxB;;AAKA,MAAMC,kBAAkB,GAAG,EAA3B;AAIA,eAAelC,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChC,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\n\nconst Pictures = (props) => {\n    const {user,images} = props;\nconst [imagePreviewUrl,setImagePreviewUrl] = React.useState();\n\nconst fileChangedHandler = (event) => {\n  //console.log(event.target.files[0]);\n    let files  = event.target.files[0];\n    let reader  = new FileReader();\n    reader.onload = (event) => {\n        setImagePreviewUrl(reader.result);\n    }\n    reader.readAsDataURL(files);\n    const headers = {'Content-Type': 'multipart/form-data'};\n    const formData = new FormData();\n    formData.append('files',files);\n    axios.post('https:localhost:5000/upload',{formData : formData, userId : user.id},headers)\n    .then((res) =>{\n        console.log(res);\n    }).catch((err)=>{\n        console.log(err);\n    })\n\n}\n    return (\n        <div>\n            <Picture fileChangedHandler = {fileChangedHandler} imagePreviewUrl = {imagePreviewUrl} images = {images}/>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => (\n{\n    \"user\" : state.user,\n    \"images\" : state.imagesReducer,\n});\nconst mapDispatchToProps = {\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);"]},"metadata":{},"sourceType":"module"}