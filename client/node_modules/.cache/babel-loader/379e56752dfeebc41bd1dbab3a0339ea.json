{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/Routes/Routes.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport RegisterContainer from '../containers/Register';\nimport HomeContainer from '../containers/Home';\nimport loginContainer from '../containers/Login';\nimport NotFoundPage from '../containers/NotFoundPage';\nimport ForgotPasswordContainer from '../containers/sendEmail';\nimport EmailConfirmCont from '../containers/emailConfirmation';\nimport ResetPasswordContainer from '../containers/resetPassword';\nimport CompleteProfile from '../containers/completeProfile/stepper';\nimport Profile from '../containers/Profile';\nimport PrivateRoute from './PrivateRoute'; //import menu from '../components/commun/menu'\n\nimport BlockList from '../containers/settings/blockList';\n\nconst Routes = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/confirmation/:token\",\n    component: EmailConfirmCont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/resetPassword/:token\",\n    component: ResetPasswordContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/forgotPassword\",\n    component: ForgotPasswordContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    component: RegisterContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: loginContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.user && props.user.complete === 3 ? React.createElement(Route, {\n    path: \"/profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: \"/completeProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/BlockList\",\n    component: BlockList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/completeProfile\",\n    component: CompleteProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), props.user && props.user.complete === 3 ? React.createElement(Route, {\n    path: \"/home\",\n    component: HomeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: \"/completeProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"*\",\n    component: NotFoundPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  'user': state.user\n});\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/Routes/Routes.js"],"names":["React","connect","Route","Switch","Redirect","RegisterContainer","HomeContainer","loginContainer","NotFoundPage","ForgotPasswordContainer","EmailConfirmCont","ResetPasswordContainer","CompleteProfile","Profile","PrivateRoute","BlockList","Routes","props","user","complete","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport RegisterContainer from '../containers/Register'\nimport HomeContainer from '../containers/Home'\nimport loginContainer from '../containers/Login'\nimport NotFoundPage from '../containers/NotFoundPage'\nimport ForgotPasswordContainer from '../containers/sendEmail'\nimport EmailConfirmCont from '../containers/emailConfirmation'\nimport ResetPasswordContainer from '../containers/resetPassword'\nimport CompleteProfile from '../containers/completeProfile/stepper'\nimport Profile from '../containers/Profile'\nimport PrivateRoute from './PrivateRoute';\n//import menu from '../components/commun/menu'\nimport BlockList from '../containers/settings/blockList'\nconst Routes = (props) => {\n\n    return (\n        <div>\n            <Switch>\n            \n            \n                <Route path=\"/confirmation/:token\"  component={ EmailConfirmCont }/>\n                <Route path=\"/resetPassword/:token\"  component={ ResetPasswordContainer }/>\n                <Route path=\"/forgotPassword\"  component={ ForgotPasswordContainer }/>\n                <Route path=\"/register\"  component={ RegisterContainer } />\n                <Route path=\"/login\"  component={ loginContainer }/>\n                <PrivateRoute>\n                    {props.user && props.user.complete === 3 ? <Route path=\"/profile\" component={ Profile }/> : <Redirect to='/completeProfile'/>}\n                    <Route path=\"/BlockList\" component={ BlockList }/>\n                    <Route path=\"/completeProfile\"  component={ CompleteProfile }/>\n\n                    {props.user && props.user.complete === 3 ? <Route path=\"/home\" component={ HomeContainer }/> : <Redirect to='/completeProfile'/>}\n\n                </PrivateRoute>\n \n                <Route  path=\"*\" component={ NotFoundPage } />\n            </Switch>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => (\n{\n    'user': state.user,\n});\nexport default connect(mapStateToProps)(Routes);"]},"metadata":{},"sourceType":"module"}