{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/components/Home/viewProfile.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    maxHeight: 550,\n    border: 'solid',\n    borderColor: '#E6D09E',\n    backgroundColor: '#DBDFF3'\n  },\n  cardMedia: {\n    maxWidth: 400,\n    maxHeight: 250\n  },\n  cardHeader: {\n    maxWidth: 400,\n    maxHeight: 150\n  },\n  cardContent: {\n    maxWidth: 400,\n    maxHeight: 100\n  },\n  cardAction: {\n    maxWidth: 400,\n    maxHeight: 50\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15\n  }\n}));\nexport default function ViewProfile(props) {\n  const user = props.user,\n        images = props.images,\n        interests = props.interests,\n        handleBlock = props.handleBlock,\n        handleLike = props.handleLike,\n        handleViewProfile = props.handleViewProfile;\n  const classes = useStyles();\n  const value = user.rating;\n  const labels = {\n    0.5: 'Useless',\n    1: 'Useless+',\n    1.5: 'Poor',\n    2: 'Poor+',\n    2.5: 'Ok',\n    3: 'Ok+',\n    3.5: 'Good',\n    4: 'Good+',\n    4.5: 'Excellent',\n    5: 'Excellent+'\n  };\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: classes.cardHeader,\n    action: React.createElement(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.rating1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Box, {\n      ml: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, labels[value]), React.createElement(Rating, {\n      name: \"read-only\",\n      value: value,\n      precision: 0.5,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))),\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: user.isOnline === 1 ? classes.avatarON : classes.avatarOF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }),\n    title: user.firstname + ' ' + user.lastname,\n    subheader: user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    children: images.length !== 0 ? images.map(tile => React.createElement(\"div\", {\n      key: tile.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, tile.isProfilePic === 1 && React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"250px\"\n      },\n      src: `http://localhost:5000/images/${tile.path}`,\n      alt: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))) : React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"250px\"\n      },\n      src: defaultImg,\n      alt: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Age : \", user.birthday)), React.createElement(CardActions, {\n    className: classes.cardAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    userid: user.id,\n    onClick: handleLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"LIKE\"), React.createElement(\"button\", {\n    userid: user.id,\n    onClick: handleBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Block\"), React.createElement(\"button\", {\n    user: JSON.stringify(user),\n    img: JSON.stringify(images),\n    inters: JSON.stringify(interests),\n    onClick: handleViewProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"ViewProfile\"))));\n}","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/components/Home/viewProfile.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Box","Rating","defaultImg","Grid","useStyles","theme","card","maxWidth","maxHeight","border","borderColor","backgroundColor","cardMedia","cardHeader","cardContent","cardAction","avatarON","width","height","avatarOF","ViewProfile","props","user","images","interests","handleBlock","handleLike","handleViewProfile","classes","value","rating","labels","rating1","isOnline","firstname","lastname","lastSignIn","length","map","tile","id","isProfilePic","path","birthday","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport { Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    maxHeight:550,\n    border : 'solid',\n   borderColor : '#E6D09E',\n   backgroundColor: '#DBDFF3'\n  },\n  cardMedia : {\n    maxWidth: 400,\n    maxHeight : 250,\n  },\n  cardHeader : {\n    maxWidth: 400,\n    maxHeight : 150,\n  },\n  cardContent : {\n    maxWidth: 400,\n    maxHeight : 100,\n  },\n  cardAction : {\n    maxWidth: 400,\n    maxHeight : 50,\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15,\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15,\n  },\n}));\n\nexport default function ViewProfile(props) {\n  const {user,images,interests,handleBlock,handleLike,handleViewProfile} = props;\n  const classes = useStyles();\n  const value = user.rating;\n      const labels = {\n        0.5: 'Useless',\n        1: 'Useless+',\n        1.5: 'Poor',\n        2: 'Poor+',\n        2.5: 'Ok',\n        3: 'Ok+',\n        3.5: 'Good',\n        4: 'Good+',\n        4.5: 'Excellent',\n        5: 'Excellent+',\n      };\n\n  return (\n    <Grid container justify='center'>\n    <Card  className={classes.card}>\n      <CardHeader\n      className={classes.cardHeader}\n      action={ \n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <div className={classes.rating1}>\n        <Box ml={2}>{labels[value]}</Box>\n          <Rating\n            name=\"read-only\"\n            value={value}\n            precision={0.5}\n            readOnly\n          />\n        </div>\n        </Box>\n        }\n        avatar={\n          <Avatar aria-label=\"recipe\" className={user.isOnline === 1 ? classes.avatarON : classes.avatarOF}></Avatar> \n        }\n        title={user.firstname +' ' +user.lastname}\n        subheader={user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn}\n      >\n      </CardHeader>\n      <CardMedia\n        className={classes.cardMedia}\n        children={\n          images.length !== 0 ? images.map((tile) =>\n            <div key={tile.id}>\n              {tile.isProfilePic === 1 &&\n                <img style={{width: \"100%\",height:\"250px\"}} src={`http://localhost:5000/images/${tile.path}`} alt=\"images\"/>\n              }\n            </div>\n            ) : <img  style={{width: \"100%\",height:\"250px\"}} src={defaultImg} alt=\"images\"/>\n        }\n      />\n      <CardContent className={classes.cardContent}> \n        <Typography>\n          Age : {user.birthday}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardAction}>\n        <button  userid = {user.id} onClick={handleLike}>LIKE</button>\n        <button  userid = {user.id} onClick={handleBlock}>Block</button>\n        <button  user = {JSON.stringify(user)} img= {JSON.stringify(images)} inters = {JSON.stringify(interests)}  onClick={handleViewProfile}>ViewProfile</button>\n      </CardActions>\n    </Card>\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}