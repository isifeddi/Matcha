{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AddInfo from '../../components/completeProfile/addInfo'; //import {LoginAction} from '../../actions/loginAction';\n\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport { incStepper } from '../../actions/stepperAction';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['gender', 'sexOrient', 'bio'];\n  const requiredArr = ['interests'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  requiredArr.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required !';\n    }\n  });\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  'selectOptions': state.selectOptions\n});\n\nconst mapDispatchToProps = {\n  \"incStepper\": incStepper\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(() => {\n    dispatchProps.incStepper();\n  })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\nconst AddInfoContainer = reduxForm({\n  form: \"addInfo\",\n  \"destroyOnUnmount\": false,\n  validate\n})(connectedAddInfoContainer);\nexport default AddInfoContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/completeProfile/addInfo.js"],"names":["AddInfo","connect","reduxForm","incStepper","validate","values","errors","requiredFields","requiredArr","forEach","field","trim","mapStateToProps","state","selectOptions","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","connectedAddInfoContainer","AddInfoContainer","form"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,0CAApB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;;AAGA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,QADmB,EAEnB,WAFmB,EAGnB,KAHmB,CAAvB;AAKA,QAAMC,WAAW,GAAG,CAChB,WADgB,CAApB;AAGAD,EAAAA,cAAc,CAACE,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAI,CAACL,MAAM,CAACK,KAAD,CAAP,IAAkB,CAACL,MAAM,CAACK,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AACzCL,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKAF,EAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAAK,IAAI;AACzB,QAAI,CAACL,MAAM,CAACK,KAAD,CAAX,EAAoB;AAChBJ,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKA,SAAOJ,MAAP;AACH,CArBD;;AAuBA,MAAMM,eAAe,GAAIC,KAAD,KACxB;AACI,mBAAiBA,KAAK,CAACC;AAD3B,CADwB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACvB,gBAAcZ;AADS,CAA3B;;AAIA,MAAMa,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAwB,MAAM;AAC3CF,IAAAA,aAAa,CAACf,UAAd;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMkB,yBAAyB,GAAGpB,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDhB,OAAxD,CAAlC;AAEA,MAAMsB,gBAAgB,GAAGpB,SAAS,CAAC;AAC/BqB,EAAAA,IAAI,EAAG,SADwB;AAE/B,sBAAoB,KAFW;AAG/BnB,EAAAA;AAH+B,CAAD,CAAT,CAItBiB,yBAJsB,CAAzB;AAMA,eAAeC,gBAAf","sourcesContent":["import AddInfo from '../../components/completeProfile/addInfo';\n//import {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport {incStepper} from '../../actions/stepperAction'\n\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'gender',\n        'sexOrient',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    'selectOptions': state.selectOptions\n});\nconst mapDispatchToProps = {\n    \"incStepper\": incStepper\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit(() => {\n        dispatchProps.incStepper();\n    })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(AddInfo);\n\nconst AddInfoContainer = reduxForm({\n    form : \"addInfo\",\n    \"destroyOnUnmount\": false,\n    validate,\n})(connectedAddInfoContainer);\n\nexport default AddInfoContainer;"]},"metadata":{},"sourceType":"module"}