{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Login from '../../components/Login';\nimport { LoginAction } from '../../actions/loginAction';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport NavBar from '../../components/NavBar';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['username', 'password'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  \"form\": state.form,\n  \"status\": state.login.status,\n  \"errors\": state.login.error,\n  \"token\": state.login.token\n});\n\nconst mapDispatchToProps = {\n  \"loginAction\": LoginAction\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(form => {\n    dispatchProps.loginAction(form);\n  })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Login);\nconst LoginContainer = reduxForm({\n  form: \"login\",\n  \"destroyOnUnmount\": false,\n  validate\n})(connectedLoginContainer);\nexport const connectedNavbar = connect(mapStateToProps, mergeProps)(NavBar);\nexport default LoginContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/matcha/client/src/containers/Login/index.js"],"names":["Login","LoginAction","connect","reduxForm","NavBar","validate","values","errors","requiredFields","forEach","field","trim","mapStateToProps","state","form","login","status","error","token","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","loginAction","connectedLoginContainer","LoginContainer","connectedNavbar"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,UADmB,EAEnB,UAFmB,CAAvB;AAIAA,EAAAA,cAAc,CAACC,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAP,IAAkB,CAACJ,MAAM,CAACI,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AACzCJ,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKA,SAAOH,MAAP;AACH,CAZD;;AAcA,MAAMK,eAAe,GAAIC,KAAD,KACxB;AACI,UAASA,KAAK,CAACC,IADnB;AAEI,YAAWD,KAAK,CAACE,KAAN,CAAYC,MAF3B;AAGI,YAAUH,KAAK,CAACE,KAAN,CAAYE,KAH1B;AAII,WAAUJ,KAAK,CAACE,KAAN,CAAYG;AAJ1B,CADwB,CAAxB;;AAOA,MAAMC,kBAAkB,GAAG;AACvB,iBAAelB;AADQ,CAA3B;;AAGA,MAAMmB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAyBV,IAAD,IAAQ;AAC7CQ,IAAAA,aAAa,CAACG,WAAd,CAA0BX,IAA1B;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMY,uBAAuB,GAAGxB,OAAO,CAACU,eAAD,EAAkBO,kBAAlB,EAAqCC,UAArC,CAAP,CAAwDpB,KAAxD,CAAhC;AAEA,MAAM2B,cAAc,GAAGxB,SAAS,CAAC;AAC7BW,EAAAA,IAAI,EAAG,OADsB;AAE7B,sBAAoB,KAFS;AAG7BT,EAAAA;AAH6B,CAAD,CAAT,CAKpBqB,uBALoB,CAAvB;AAOA,OAAO,MAAME,eAAe,GAAG1B,OAAO,CAACU,eAAD,EAAkBQ,UAAlB,CAAP,CAAqChB,MAArC,CAAxB;AACP,eAAeuB,cAAf","sourcesContent":["import Login from '../../components/Login';\nimport {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport NavBar from '../../components/NavBar'\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'username',\n        'password',\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.login.status,\n    \"errors\": state.login.error,\n    \"token\" : state.login.token\n});\nconst mapDispatchToProps = {\n    \"loginAction\": LoginAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form)=>{\n        dispatchProps.loginAction(form);\n    })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Login);\n\nconst LoginContainer = reduxForm({\n    form : \"login\",\n    \"destroyOnUnmount\": false,  \n    validate,\n\n})(connectedLoginContainer);\n\nexport const connectedNavbar = connect(mapStateToProps, mergeProps)(NavBar);\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}