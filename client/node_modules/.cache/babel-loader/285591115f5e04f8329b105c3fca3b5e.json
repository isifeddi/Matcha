{"ast":null,"code":"import { takeLatest, put, call, delay } from \"redux-saga/effects\";\nimport { push } from \"react-router-redux\";\nimport { resetState } from '../actions/resetStateAction';\nimport { loginError, loginUserSuccess, loginErrorField } from \"../actions/loginAction\";\nimport { request } from './helper';\n\nconst login = function* login({\n  data\n}) {\n  try {\n    const username = data.username;\n    const password = data.password;\n    const response = yield call(request, {\n      \"url\": \"http://localhost:5000/login\",\n      \"data\": {\n        username,\n        password\n      },\n      \"method\": \"post\"\n    });\n    console.log(response);\n\n    if (response.data.isValid) {\n      const user = response.data.user;\n      console.log(user.complete);\n      yield put(loginUserSuccess(response.data)); // if(user.complete === 4)\n      //   yield put(push(\"/\"));\n      // else\n      //   yield put(push(\"/completeProfile\"));\n    } else {\n      yield put(loginErrorField(response.data.errorField));\n      yield delay(4000);\n      yield put(resetState());\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"LOGIN_USER\", login);\n}","map":{"version":3,"sources":["/Volumes/Storage/goinfre/isifeddi/dd/client/src/sagas/loginSaga.js"],"names":["takeLatest","put","call","delay","push","resetState","loginError","loginUserSuccess","loginErrorField","request","login","data","username","password","response","console","log","isValid","user","complete","errorField","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAwBC,IAAxB,EAA6BC,KAA7B,QAAyC,oBAAzC;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAAQC,UAAR,EAAoBC,gBAApB,EAAqCC,eAArC,QAA2D,wBAA3D;AAEA,SAAQC,OAAR,QAAsB,UAAtB;;AAEA,MAAMC,KAAK,GACT,UAAUA,KAAV,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyB;AACvB,MAAI;AACJ,UAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAtB;AACA,UAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAtB;AACE,UAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACO,OAAD,EAAU;AACnC,aAAO,6BAD4B;AAEnC,cAAQ;AACNG,QAAAA,QADM;AAEPC,QAAAA;AAFO,OAF2B;AAMnC,gBAAU;AANyB,KAAV,CAA3B;AAQAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAGA,QAAQ,CAACH,IAAT,CAAcM,OAAjB,EACA;AACC,YAAOC,IAAI,GAAGJ,QAAQ,CAACH,IAAT,CAAcO,IAA5B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,QAAjB;AACC,YAAMlB,GAAG,CAACM,gBAAgB,CAACO,QAAQ,CAACH,IAAV,CAAjB,CAAT,CAHF,CAIE;AACA;AACA;AACA;AACD,KATD,MAWA;AACE,YAAMV,GAAG,CAACO,eAAe,CAACM,QAAQ,CAACH,IAAT,CAAcS,UAAf,CAAhB,CAAT;AACA,YAAMjB,KAAK,CAAC,IAAD,CAAX;AACA,YAAMF,GAAG,CAACI,UAAU,EAAX,CAAT;AACD;AACF,GA5BD,CA4BC,OAAOgB,KAAP,EAAc;AACb,QAAIA,KAAK,CAACP,QAAV,EAAoB;AAClB,YAAMb,GAAG,CAACK,UAAU,CAAC,2BAAD,EAA8B,uBAA9B,CAAX,CAAT;AACD;AACF;AACF,CAnCH;;AAqCA,eAAe,aAAa;AAC1B,QAAMN,UAAU,CAAC,YAAD,EAAeU,KAAf,CAAhB;AACD","sourcesContent":["import {takeLatest, put,call,delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport {loginError, loginUserSuccess,loginErrorField} from \"../actions/loginAction\";\n\nimport {request} from './helper';\n\nconst login =\n  function *login ({data}) {\n    try {\n    const username = data.username;\n    const password = data.password;\n      const response = yield call(request, {\n        \"url\": \"http://localhost:5000/login\",\n        \"data\": {\n          username,\n         password\n        },\n        \"method\": \"post\"\n      });\n      console.log(response)\n      if(response.data.isValid)\n      {\n       const  user = response.data.user;\n       console.log(user.complete);\n        yield put(loginUserSuccess(response.data));\n        // if(user.complete === 4)\n        //   yield put(push(\"/\"));\n        // else\n        //   yield put(push(\"/completeProfile\"));\n      }\n      else \n      {\n        yield put(loginErrorField(response.data.errorField))\n        yield delay(4000);\n        yield put(resetState());\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"LOGIN_USER\", login);\n}"]},"metadata":{},"sourceType":"module"}