{"ast":null,"code":"import _slicedToArray from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/isifeddi/Desktop/Matcha/client/src/components/commun/snackBar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon\n};\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[700]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst MySnackBar = props => {\n  const variant = props.variant,\n        message = props.message,\n        other = _objectWithoutProperties(props, [\"variant\", \"message\"]);\n\n  const classes = useStyles();\n  const Icon = variantIcon[variant];\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Snackbar, Object.assign({\n    className: classes.variant,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose,\n    autoHideDuration: 4000,\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), message),\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default MySnackBar;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/components/commun/snackBar.js"],"names":["React","clsx","CheckCircleIcon","ErrorIcon","IconButton","CloseIcon","Snackbar","green","makeStyles","variantIcon","success","error","useStyles","theme","backgroundColor","palette","dark","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackBar","props","variant","other","classes","Icon","useState","open","setOpen","handleClose","event","reason","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    error: ErrorIcon,\n};\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[700],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n\nconst MySnackBar = (props) => {\n\n    const { variant, message, ...other } = props;\n    const classes = useStyles();\n    const Icon = variantIcon[variant];\n\n    const [open, setOpen] = React.useState(true);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <>\n        <Snackbar\n            className={classes.variant}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={open}\n            onClose={handleClose}\n            autoHideDuration={4000}\n            message={\n                    <span id=\"client-snackbar\" className={classes.message}>\n                        <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                        {message}\n                    </span>\n                    }\n            action={\n                    <IconButton  aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>\n                    }\n            {...other}\n        />\n        </>\n    )\n}\n\nexport default MySnackBar;"]},"metadata":{},"sourceType":"module"}