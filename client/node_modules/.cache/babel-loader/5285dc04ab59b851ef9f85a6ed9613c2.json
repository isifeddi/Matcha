{"ast":null,"code":"var _jsxFileName = \"/Users/isifeddi/Desktop/Matcha-i2/client/src/containers/completeProfile/localisation.js\";\nimport React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport { connect } from \"react-redux\";\n\nclass LocalisationContainer extends Component {\n  //state = { userLocation: { lat: 32, lng: 32 }, loading: true};\n  // componentDidMount(){\n  //     const options = {\n  //         enableHighAccuracy: true,\n  //         timeout: 5000,\n  //         maximumAge: 0\n  //     };\n  //     navigator.geolocation.getCurrentPosition(\n  //         position => {\n  //             const { latitude, longitude, accuracy } = position.coords;\n  //             this.setState({\n  //                 userLocation: { lat: latitude, lng: longitude },\n  //                 loading: false\n  //             });\n  //             console.log('Votre position actuelle est :');\n  //             console.log(`Latitude : ${latitude}`);\n  //             console.log(`Longitude : ${longitude}`);\n  //             console.log(`La précision est de ${accuracy} mètres.`);\n  //         },\n  //         err => {\n  //             this.setState({\n  //                 userLocation: { lat: 32.8781004, lng: -6.8887306 },\n  //                 loading: false\n  //             });\n  //             console.warn(`ERREUR (${err.code}): ${err.message}`);\n  //         },\n  //         options\n  //     );\n  //     //axios.get('http://ipinfo.io/json').then(res => console.log(res)).catch(err => console.log(err));\n  // }\n  render() {\n    //const {loading, userLocation} = this.state;\n    //if(loading) return null;\n    const userLocation = {\n      lat: parseFloat(this.props.user.lat),\n      lng: parseFloat(this.props.user.lng)\n    };\n    console.log(userLocation);\n    return React.createElement(Localisation, {\n      userL: userLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  \"user\": state.user\n});\n\nexport default connect(mapStateToProps)(LocalisationContainer);","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha-i2/client/src/containers/completeProfile/localisation.js"],"names":["React","Component","Localisation","connect","LocalisationContainer","render","userLocation","lat","parseFloat","props","user","lng","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,qBAAN,SAAoCH,SAApC,CAA6C;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,EAAAA,MAAM,GAAE;AACJ;AACA;AACA,UAAMC,YAAY,GAAG;AAACC,MAAAA,GAAG,EAAEC,UAAU,CAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBH,GAAjB,CAAhB;AAAuCI,MAAAA,GAAG,EAAEH,UAAU,CAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAjB;AAAtD,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,WACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGH;;AAvCwC;;AAyC7C,MAAMQ,eAAe,GAAIC,KAAD,KACxB;AACI,UAAQA,KAAK,CAACL;AADlB,CADwB,CAAxB;;AAKA,eAAeP,OAAO,CAACW,eAAD,CAAP,CAAyBV,qBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport {connect} from \"react-redux\";\n\nclass LocalisationContainer extends Component{\n    //state = { userLocation: { lat: 32, lng: 32 }, loading: true};\n    // componentDidMount(){\n    //     const options = {\n    //         enableHighAccuracy: true,\n    //         timeout: 5000,\n    //         maximumAge: 0\n    //     };\n    //     navigator.geolocation.getCurrentPosition(\n    //         position => {\n    //             const { latitude, longitude, accuracy } = position.coords;\n    //             this.setState({\n    //                 userLocation: { lat: latitude, lng: longitude },\n    //                 loading: false\n    //             });\n    //             console.log('Votre position actuelle est :');\n    //             console.log(`Latitude : ${latitude}`);\n    //             console.log(`Longitude : ${longitude}`);\n    //             console.log(`La précision est de ${accuracy} mètres.`);\n    //         },\n    //         err => {\n    //             this.setState({\n    //                 userLocation: { lat: 32.8781004, lng: -6.8887306 },\n    //                 loading: false\n    //             });\n    //             console.warn(`ERREUR (${err.code}): ${err.message}`);\n    //         },\n    //         options\n    //     );\n    //     //axios.get('http://ipinfo.io/json').then(res => console.log(res)).catch(err => console.log(err));\n    // }\n    render(){\n        //const {loading, userLocation} = this.state;\n        //if(loading) return null;\n        const userLocation = {lat: parseFloat(this.props.user.lat), lng: parseFloat(this.props.user.lng)}\n        console.log(userLocation)\n        return (\n          <Localisation userL={userLocation}/>\n        )\n    }\n}\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n});\n    \nexport default connect(mapStateToProps)(LocalisationContainer);"]},"metadata":{},"sourceType":"module"}