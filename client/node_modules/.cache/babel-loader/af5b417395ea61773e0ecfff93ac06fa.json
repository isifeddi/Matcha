{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { SendEmailSuccess, SendEmailError } from \"../actions/sendEmail\";\nimport axios from 'axios';\n\nconst sendEmailS = function* sendEmailS(data) {\n  try {\n    console.log(data);\n    const response = yield axios.post('http://localhost:5000/sendResetEmail', {\n      email: data.email\n    });\n    console.log(response.data);\n\n    if (response.data.sent) {\n      yield put(SendEmailSuccess());\n    } else if (response.data.error === 'Email not found') {\n      yield put(SendEmailError('Email not found'));\n    }\n  } catch (error) {\n    if (error.response) {\n      yield put(SendEmailError('Error sending the email, please retry'));\n    }\n  }\n};\n\nexport default function* () {\n  yield takeLatest(\"SEND_EMAIL\", sendEmailS);\n}","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/sagas/sendEmailSaga.js"],"names":["takeLatest","put","SendEmailSuccess","SendEmailError","axios","sendEmailS","data","console","log","response","post","email","sent","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,QAA8B,oBAA9B;AACA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,sBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GACd,UAAUA,UAAV,CAAsBC,IAAtB,EAA4B;AAC1B,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,sCAAX,EAAmD;AAACC,MAAAA,KAAK,EAAEL,IAAI,CAACK;AAAb,KAAnD,CAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACH,IAArB;;AACA,QAAGG,QAAQ,CAACH,IAAT,CAAcM,IAAjB,EACA;AACE,YAAMX,GAAG,CAACC,gBAAgB,EAAjB,CAAT;AACD,KAHD,MAIK,IAAGO,QAAQ,CAACH,IAAT,CAAcO,KAAd,KAAwB,iBAA3B,EACL;AACE,YAAMZ,GAAG,CAACE,cAAc,CAAC,iBAAD,CAAf,CAAT;AACD;AACF,GAZD,CAYC,OAAOU,KAAP,EAAc;AACb,QAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB,YAAMR,GAAG,CAACE,cAAc,CAAC,uCAAD,CAAf,CAAT;AACD;AACF;AACF,CAnBH;;AAqBA,eAAe,aAAa;AAC1B,QAAMH,UAAU,CAAC,YAAD,EAAeK,UAAf,CAAhB;AACD","sourcesContent":["import {takeLatest, put} from \"redux-saga/effects\";\nimport {SendEmailSuccess,SendEmailError} from \"../actions/sendEmail\";\nimport axios from 'axios';\n\nconst sendEmailS =\n  function *sendEmailS (data) {\n    try {\n      console.log(data);\n      const response = yield axios.post('http://localhost:5000/sendResetEmail', {email: data.email});\n      console.log(response.data);\n      if(response.data.sent)\n      {\n        yield put(SendEmailSuccess());\n      }\n      else if(response.data.error === 'Email not found')\n      {\n        yield put(SendEmailError('Email not found'));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(SendEmailError('Error sending the email, please retry'));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"SEND_EMAIL\", sendEmailS);\n}"]},"metadata":{},"sourceType":"module"}