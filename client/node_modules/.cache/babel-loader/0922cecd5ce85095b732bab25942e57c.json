{"ast":null,"code":"import _objectSpread from \"/Users/isifeddi/Desktop/eewe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport AddInfo from '../../components/completeProfile/addInfo';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport Age from '../../components/commun/age';\nimport { createOption, addInfo } from '../../actions/addInfoAction';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['gender', 'sexOrient', 'birthday', 'bio'];\n  const requiredArr = ['interests'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  requiredArr.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required !';\n    }\n  });\n  if (values.bio && !/^.{1,200}$/.test(values.bio)) errors.bio = 'maximum 200 characters';\n  if (values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday)) errors.birthday = 'Invalid date !';\n  const age = Age(values.birthday);\n  if (age < 18) errors.birthday = \"Come back when you're 18 ;)\";\n  if (age > 120) errors.birthday = 'Invalid age !';\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  'values': state.form.values,\n  'selectOptions': state.addInfo.selectOptions,\n  'selectLoading': state.addInfo.selectLoading,\n  'selectError': state.addInfo.error,\n  'user': state.user\n});\n\nconst mapDispatchToProps = {\n  \"addInfo\": addInfo,\n  \"createOption\": createOption\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(values => {\n    dispatchProps.addInfo(values, stateProps.user.id);\n  })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\nlet AddInfoContainer = reduxForm({\n  form: \"addInfo\",\n  destroyOnUnmount: true,\n  validate\n})(connectedAddInfoContainer);\nAddInfoContainer = connect(state => ({\n  initialValues: {\n    gender:\n    /*state.userData ? state.userData.gender : */\n    state.user.gender,\n    sexOrient:\n    /*state.userData ? state.userData.sexOrient : */\n    state.user.sexOrient,\n    birthday:\n    /*state.userData ? state.userData.birthday : */\n    state.user.birthday,\n    bio:\n    /*state.userData ? state.userData.bio : */\n    state.user.bio,\n    interests:\n    /*state.userData ? state.userData.interests : */\n    state.user.interests\n  }\n}))(AddInfoContainer);\nexport default AddInfoContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/eewe/client/src/containers/completeProfile/addInfo.js"],"names":["AddInfo","connect","reduxForm","Age","createOption","addInfo","validate","values","errors","requiredFields","requiredArr","forEach","field","trim","bio","test","birthday","age","mapStateToProps","state","form","selectOptions","selectLoading","error","user","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","id","connectedAddInfoContainer","AddInfoContainer","destroyOnUnmount","initialValues","gender","sexOrient","interests"],"mappings":"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","sourcesContent":["import AddInfo from '../../components/completeProfile/addInfo';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport Age from '../../components/commun/age';\n\nimport {createOption, addInfo} from '../../actions/addInfoAction';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'gender',\n        'sexOrient',\n        'birthday',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.bio && !/^.{1,200}$/.test(values.bio))\n        errors.bio = 'maximum 200 characters';\n\n    if(values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday))\n        errors.birthday = 'Invalid date !';\n\n    const age = Age(values.birthday)\n    if(age < 18)\n        errors.birthday = \"Come back when you're 18 ;)\"\n    if(age > 120)\n        errors.birthday = 'Invalid age !'\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    'values' : state.form.values,\n    'selectOptions': state.addInfo.selectOptions,\n    'selectLoading': state.addInfo.selectLoading,\n    'selectError' : state.addInfo.error,\n    'user': state.user,\n});\nconst mapDispatchToProps = {\n    \"addInfo\": addInfo,\n    \n    \"createOption\": createOption,\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n\n    \"handleSubmit\" : otherProps.handleSubmit((values) => {\n        dispatchProps.addInfo(values, stateProps.user.id);\n    }),\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\n\nlet AddInfoContainer = reduxForm ({\n    form : \"addInfo\",\n    destroyOnUnmount: true,\n    validate,\n})(connectedAddInfoContainer);\n\nAddInfoContainer = connect(\n    state => ({\n        initialValues: {\n            gender: /*state.userData ? state.userData.gender : */state.user.gender,\n            sexOrient: /*state.userData ? state.userData.sexOrient : */state.user.sexOrient,\n            birthday: /*state.userData ? state.userData.birthday : */state.user.birthday,\n            bio: /*state.userData ? state.userData.bio : */state.user.bio,\n            interests: /*state.userData ? state.userData.interests : */state.user.interests,\n        },\n    }),\n)(AddInfoContainer);\n\nexport default AddInfoContainer;"]},"metadata":{},"sourceType":"module"}