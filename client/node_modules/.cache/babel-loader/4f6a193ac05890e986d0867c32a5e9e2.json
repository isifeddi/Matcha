{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js\";\nimport React, { useState } from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nexport const Pictures = () => {\n  //const [imagePreviewUrl,setImagePreviewUrl] = React.useState(null);\n  //const [message,setMessage] = React.useState(null);\n  const fileChangedHandler = async event => {\n    let files = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onload = event => {\n      reader.readAsDataURL(files);\n    }; //setImagePreviewUrl(reader.result);\n\n\n    const headers = {\n      'Content-Type': 'multipart/form-data'\n    };\n    const formData = new FormData();\n    formData.append('files', files);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, headers);\n      console.log(response);\n    } catch (err) {}\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Picture, {\n    fileChangedHandler: fileChangedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/containers/completeProfile/pictures.js"],"names":["React","useState","Picture","connect","axios","Pictures","fileChangedHandler","event","files","target","reader","FileReader","onload","readAsDataURL","headers","formData","FormData","append","response","post","console","log","err","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC9B;AACA;AACA,QAAMC,kBAAkB,GAAI,MAAOC,KAAP,IAAgB;AACxC,QAAIC,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAmB,CAAnB,CAAb;AACA,QAAIE,MAAM,GAAI,IAAIC,UAAJ,EAAd;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBL,KAAD,IAAW;AAC3BG,MAAAA,MAAM,CAACG,aAAP,CAAqBL,KAArB;AACD,KAFC,CAHwC,CAM1C;;;AACA,UAAMM,OAAO,GAAG;AAAC,sBAAgB;AAAjB,KAAhB;AAEE,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwBT,KAAxB;;AACA,QAAG;AACD,YAAMU,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,8BAAX,EAA0CJ,QAA1C,EAAmDD,OAAnD,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,KAHD,CAGE,OAAMI,GAAN,EAAU,CACX;AACJ,GAhBD;;AAoBI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,kBAAkB,EAAIhB,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA5BM;;AA+BP,MAAMiB,eAAe,GAAIC,KAAD,KACxB,EADwB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,EAA3B;AAIA,eAAetB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\n\nexport const Pictures = () => {\n//const [imagePreviewUrl,setImagePreviewUrl] = React.useState(null);\n//const [message,setMessage] = React.useState(null);\nconst fileChangedHandler =  async  event => {\n    let files  = event.target.files[0];\n    let reader  = new FileReader();\n    reader.onload = (event) => {\n    reader.readAsDataURL(files);\n  }\n  //setImagePreviewUrl(reader.result);\n  const headers = {'Content-Type': 'multipart/form-data'};\n   \n    const formData = new FormData();\n    formData.append('files',files);\n    try{\n      const response = await axios.post('http://localhost:5000/upload',formData,headers);\n      console.log(response)\n    } catch(err){\n    }\n}\n  \n\n\n    return (\n        <div>\n            <Picture fileChangedHandler = {fileChangedHandler}/>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => (\n{\n    \n});\nconst mapDispatchToProps = {\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);"]},"metadata":{},"sourceType":"module"}