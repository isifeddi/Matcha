{"ast":null,"code":"import _defineProperty from \"/Users/ibouroum/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//import {CANCEL} from \"redux-saga\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport axios from \"axios\"; // export type RequestConfig = {\n//   url: string,\n//   params?: { [string]: (string | number | boolean) },\n//   data: any,\n//   method?: (\"get\" | \"post\" | \"put\" | \"delete\")\n// }\n\nexport const request = (config, token) => {\n  //const source = axios.CancelToken.source();\n  const responsePromise = axios(_objectSpread({}, config, {\n    \"headers\": {\n      \"Authorization\": token\n    } // \"cancelToken\": source.token\n\n  })); // responsePromise[CANCEL] = () => source.cancel();\n\n  return responsePromise;\n};\nconst UNAUTHORIZED_STATUS_CODE = 401;\nconst NOT_FOUND_STATUS_CODE = 404;\nconst FORBIDDEN_STATUS_CODE = 403;\n/**\n * @param {Object} config: axios configuration\n * @return {null} nothing\n */\n\n/* eslint-disable max-statements */\n\nfunction* apiCall(config) {\n  console.log(config);\n  const token = yield select(state => state.login.get(\"token\"));\n\n  try {\n    return yield call(request, config, token);\n  } catch (error) {\n    // if (error.response && error.response.status === UNAUTHORIZED_STATUS_CODE) {\n    //   yield put(clearUserInformation());\n    //   yield put(push(\"/home\"));\n    // }\n    // if (error.response && error.response.status === NOT_FOUND_STATUS_CODE) {\n    //   yield put(push(\"/404\"));\n    // }\n    // if (error.response && error.response.status === FORBIDDEN_STATUS_CODE) {\n    //   yield put(push(\"/403\"));\n    // }\n    throw Error(error);\n  }\n}\n\n;\nexport default apiCall;","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/sagas/helper.js"],"names":["call","put","select","axios","request","config","token","responsePromise","UNAUTHORIZED_STATUS_CODE","NOT_FOUND_STATUS_CODE","FORBIDDEN_STATUS_CODE","apiCall","console","log","state","login","get","error","Error"],"mappings":";;;;;;AAEA;AACA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACxC;AAEA,QAAMC,eAAe,GAAGJ,KAAK,mBACxBE,MADwB;AAE3B,eAAW;AAAC,uBAAiBC;AAAlB,KAFgB,CAG3B;;AAH2B,KAA7B,CAHwC,CASxC;;AAEA,SAAOC,eAAP;AACD,CAZM;AAcP,MAAMC,wBAAwB,GAAG,GAAjC;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AAGA;;;;;AAIA;;AAGE,UAAUC,OAAV,CAAmBN,MAAnB,EAA0B;AACxBO,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,QAAMC,KAAK,GAAG,MAAMJ,MAAM,CAAEY,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,OAAhB,CAAZ,CAA1B;;AACA,MAAI;AACF,WAAO,MAAMhB,IAAI,CAACI,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,CAAjB;AACD,GAFD,CAEE,OAAOW,KAAP,EAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAK,CAACD,KAAD,CAAX;AACD;AACF;;AAAA;AACD,eAAeN,OAAf","sourcesContent":["// @flow\n\n//import {CANCEL} from \"redux-saga\";\nimport {call, put, select} from \"redux-saga/effects\";\nimport axios from \"axios\";\n\n\n// export type RequestConfig = {\n//   url: string,\n//   params?: { [string]: (string | number | boolean) },\n//   data: any,\n//   method?: (\"get\" | \"post\" | \"put\" | \"delete\")\n// }\n\nexport const request = (config, token) => {\n  //const source = axios.CancelToken.source();\n\n  const responsePromise = axios({\n    ...config,\n    \"headers\": {\"Authorization\": token},\n    // \"cancelToken\": source.token\n  });\n\n  // responsePromise[CANCEL] = () => source.cancel();\n\n  return responsePromise;\n};\n\nconst UNAUTHORIZED_STATUS_CODE = 401;\nconst NOT_FOUND_STATUS_CODE = 404;\nconst FORBIDDEN_STATUS_CODE = 403;\n\n\n/**\n * @param {Object} config: axios configuration\n * @return {null} nothing\n */\n/* eslint-disable max-statements */\n\n\n  function *apiCall (config){\n    console.log(config)\n    const token = yield select((state) => state.login.get(\"token\"));\n    try {\n      return yield call(request, config, token);\n    } catch (error) {\n      // if (error.response && error.response.status === UNAUTHORIZED_STATUS_CODE) {\n      //   yield put(clearUserInformation());\n      //   yield put(push(\"/home\"));\n      // }\n      // if (error.response && error.response.status === NOT_FOUND_STATUS_CODE) {\n      //   yield put(push(\"/404\"));\n      // }\n      // if (error.response && error.response.status === FORBIDDEN_STATUS_CODE) {\n      //   yield put(push(\"/403\"));\n      // }\n      throw Error(error);\n    }\n  };\n  export default apiCall "]},"metadata":{},"sourceType":"module"}