{"ast":null,"code":"var _jsxFileName = \"/Users/ibouroum/Desktop/Matcha/client/src/components/Profile/viewProfile.js\";\nimport React from 'react';\n\nconst ViewProfile = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"View Profile\"), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      src: \"https://c4.wallpaperflare.com/wallpaper/200/466/543/monica-bellucci-actress-women-wallpaper-preview.jpg\",\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }),\n    title: \"Monica Bellucci \",\n    subheader: React.createElement(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"legend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"55 ans\"), React.createElement(\"div\", {\n      className: classes.rating1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Box, {\n      ml: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, labels[valu]), React.createElement(Rating, {\n      name: \"read-only\",\n      value: valu,\n      precision: 0.5,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, tileData.map(tile => React.createElement(GridListTile, {\n    key: tile.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(GridListTileBar, {\n    title: tile.title,\n    subtitle: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"by: \", tile.author),\n    actionIcon: React.createElement(IconButton, {\n      \"aria-label\": \"info about \".concat(tile.title),\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(InfoIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })))))))));\n};\n\nexport default ViewProfile;","map":{"version":3,"sources":["/Users/ibouroum/Desktop/Matcha/client/src/components/Profile/viewProfile.js"],"names":["React","ViewProfile","classes","card","avatar","rating1","labels","valu","root","gridList","tileData","map","tile","img","title","author","icon"],"mappings":"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","sourcesContent":["import React from 'react'\n \nconst ViewProfile = () => {\n    return (\n        <div>\n            <p>View Profile</p>\n            <Grid item xs={4} sm={6}>\n          <Card className={classes.card}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\"\n                  src=\"https://c4.wallpaperflare.com/wallpaper/200/466/543/monica-bellucci-actress-women-wallpaper-preview.jpg\"\n                  className={classes.avatar}>\n                </Avatar>\n              }\n              title=\"Monica Bellucci \"\n              subheader={\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                  <Typography component=\"legend\">55 ans</Typography>\n                  <div className={classes.rating1}>\n                  <Box ml={2}>{labels[valu]}</Box>\n                    <Rating name=\"read-only\" value={valu} precision={0.5} readOnly/>\n                  </div>\n                </Box>\n              }\n            />\n            <CardContent>\n              <div className={classes.root}>\n                <GridList cellHeight={180} className={classes.gridList}>\n                  {tileData.map(tile => (\n                    <GridListTile key={tile.img}>\n                      <img src={tile.img} alt={tile.title} />\n                      <GridListTileBar\n                        title={tile.title}\n                        subtitle={<span>by: {tile.author}</span>}\n                        actionIcon={\n                          <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                            <InfoIcon />\n                          </IconButton>\n                        }\n                      />\n                    </GridListTile>\n                  ))}\n                </GridList>\n              </div>\n            </CardContent> \n          </Card>\n        </Grid>\n        </div>\n    )\n}\nexport default ViewProfile;\n"]},"metadata":{},"sourceType":"module"}