{"ast":null,"code":"import _defineProperty from \"/home/isifeddi/Desktop/Maatcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CANCEL } from \"redux-saga\";\nimport { call, put, select } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { clearUserInformation } from \"../actions/loginAction\";\nimport { push } from \"react-router-redux\"; // export type RequestConfig = {\n//   url: string,\n//   params?: { [string]: (string | number | boolean) },\n//   data: any,\n//   method?: (\"get\" | \"post\" | \"put\" | \"delete\")\n// }\n\nexport const request = (config, token) => {\n  const source = axios.CancelToken.source();\n  const responsePromise = axios(_objectSpread({}, config, {\n    \"headers\": {\n      \"Authorization\": token\n    },\n    \"cancelToken\": source.token\n  }));\n\n  responsePromise[CANCEL] = () => source.cancel();\n\n  return responsePromise;\n};\nconst UNAUTHORIZED_STATUS_CODE = 401;\nconst NOT_FOUND_STATUS_CODE = 404;\nconst FORBIDDEN_STATUS_CODE = 403;\n/**\n * @param {Object} config: axios configuration\n * @return {null} nothing\n */\n\n/* eslint-disable max-statements */\n\nexport const apiCall = function* apiCall(config) {\n  const token = yield select(state => state.loginUser.get(\"token\"));\n\n  try {\n    return yield call(request, config, token);\n  } catch (error) {\n    if (error.response && error.response.status === UNAUTHORIZED_STATUS_CODE) {\n      yield put(clearUserInformation());\n      yield put(push(\"/home\"));\n    }\n\n    if (error.response && error.response.status === NOT_FOUND_STATUS_CODE) {\n      yield put(push(\"/404\"));\n    }\n\n    if (error.response && error.response.status === FORBIDDEN_STATUS_CODE) {\n      yield put(push(\"/403\"));\n    }\n\n    throw Error(error);\n  }\n};","map":{"version":3,"sources":["/home/isifeddi/Desktop/Maatcha/client/src/sagas/helper.js"],"names":["CANCEL","call","put","select","axios","clearUserInformation","push","request","config","token","source","CancelToken","responsePromise","cancel","UNAUTHORIZED_STATUS_CODE","NOT_FOUND_STATUS_CODE","FORBIDDEN_STATUS_CODE","apiCall","state","loginUser","get","error","response","status","Error"],"mappings":";;;;;;AAEA,SAAQA,MAAR,QAAqB,YAArB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,QAAmC,wBAAnC;AACA,SAAQC,IAAR,QAAmB,oBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACxC,QAAMC,MAAM,GAAGN,KAAK,CAACO,WAAN,CAAkBD,MAAlB,EAAf;AAEA,QAAME,eAAe,GAAGR,KAAK,mBACxBI,MADwB;AAE3B,eAAW;AAAC,uBAAiBC;AAAlB,KAFgB;AAG3B,mBAAeC,MAAM,CAACD;AAHK,KAA7B;;AAMAG,EAAAA,eAAe,CAACZ,MAAD,CAAf,GAA0B,MAAMU,MAAM,CAACG,MAAP,EAAhC;;AAEA,SAAOD,eAAP;AACD,CAZM;AAcP,MAAME,wBAAwB,GAAG,GAAjC;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AAGA;;;;;AAIA;;AAEA,OAAO,MAAMC,OAAO,GAClB,UAAUA,OAAV,CAAmBT,MAAnB,EAA0B;AACxB,QAAMC,KAAK,GAAG,MAAMN,MAAM,CAAEe,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,OAApB,CAAZ,CAA1B;;AACA,MAAI;AACF,WAAO,MAAMnB,IAAI,CAACM,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,CAAjB;AACD,GAFD,CAEE,OAAOY,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0BT,wBAAhD,EAA0E;AACxE,YAAMZ,GAAG,CAACG,oBAAoB,EAArB,CAAT;AACA,YAAMH,GAAG,CAACI,IAAI,CAAC,OAAD,CAAL,CAAT;AACD;;AACD,QAAIe,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0BR,qBAAhD,EAAuE;AACrE,YAAMb,GAAG,CAACI,IAAI,CAAC,MAAD,CAAL,CAAT;AACD;;AACD,QAAIe,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0BP,qBAAhD,EAAuE;AACrE,YAAMd,GAAG,CAACI,IAAI,CAAC,MAAD,CAAL,CAAT;AACD;;AACD,UAAMkB,KAAK,CAACH,KAAD,CAAX;AACD;AACF,CAlBI","sourcesContent":["// @flow\n\nimport {CANCEL} from \"redux-saga\";\nimport {call, put, select} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {clearUserInformation} from \"../actions/loginAction\";\nimport {push} from \"react-router-redux\";\n\n// export type RequestConfig = {\n//   url: string,\n//   params?: { [string]: (string | number | boolean) },\n//   data: any,\n//   method?: (\"get\" | \"post\" | \"put\" | \"delete\")\n// }\n\nexport const request = (config, token) => {\n  const source = axios.CancelToken.source();\n\n  const responsePromise = axios({\n    ...config,\n    \"headers\": {\"Authorization\": token},\n    \"cancelToken\": source.token\n  });\n\n  responsePromise[CANCEL] = () => source.cancel();\n\n  return responsePromise;\n};\n\nconst UNAUTHORIZED_STATUS_CODE = 401;\nconst NOT_FOUND_STATUS_CODE = 404;\nconst FORBIDDEN_STATUS_CODE = 403;\n\n\n/**\n * @param {Object} config: axios configuration\n * @return {null} nothing\n */\n/* eslint-disable max-statements */\n\nexport const apiCall =\n  function *apiCall (config){\n    const token = yield select((state) => state.loginUser.get(\"token\"));\n    try {\n      return yield call(request, config, token);\n    } catch (error) {\n      if (error.response && error.response.status === UNAUTHORIZED_STATUS_CODE) {\n        yield put(clearUserInformation());\n        yield put(push(\"/home\"));\n      }\n      if (error.response && error.response.status === NOT_FOUND_STATUS_CODE) {\n        yield put(push(\"/404\"));\n      }\n      if (error.response && error.response.status === FORBIDDEN_STATUS_CODE) {\n        yield put(push(\"/403\"));\n      }\n      throw Error(error);\n    }\n  };"]},"metadata":{},"sourceType":"module"}