{"ast":null,"code":"import _defineProperty from \"/Users/isifeddi/Desktop/Matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/isifeddi/Desktop/Matcha/client/src/containers/completeProfile/addInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport AddInfo from '../../components/completeProfile/addInfo';\nimport { getOptions } from '../../actions/addInfoAction';\nimport { connect } from \"react-redux\";\nimport { reduxForm } from 'redux-form';\nimport { incStepper } from '../../actions/stepperAction';\n\nclass AddInfoContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.getOptions();\n    };\n  }\n\n  render() {\n    return React.createElement(AddInfo, {\n      selectLoading: this.props.selectLoading,\n      selectOptions: this.props.selectOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['gender', 'sexOrient', 'bio'];\n  const requiredArr = ['interests'];\n  requiredFields.forEach(field => {\n    if (!values[field] || !values[field].trim()) {\n      errors[field] = 'Required !';\n    }\n  });\n  requiredArr.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required !';\n    }\n  });\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  'selectOptions': state.select.selectOptions,\n  'selectLoading': state.select.selectLoading\n});\n\nconst mapDispatchToProps = {\n  \"incStepper\": incStepper,\n  \"getOptions\": getOptions\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => _objectSpread({}, stateProps, {}, dispatchProps, {}, otherProps, {\n  \"handleSubmit\": otherProps.handleSubmit(() => {\n    dispatchProps.incStepper();\n  })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfoContainer);\nAddInfoContainer = reduxForm({\n  form: \"addInfo\",\n  \"destroyOnUnmount\": false,\n  validate\n})(connectedAddInfoContainer);\nexport default AddInfoContainer;","map":{"version":3,"sources":["/Users/isifeddi/Desktop/Matcha/client/src/containers/completeProfile/addInfo.js"],"names":["React","Component","AddInfo","getOptions","connect","reduxForm","incStepper","AddInfoContainer","componentDidMount","props","render","selectLoading","selectOptions","validate","values","errors","requiredFields","requiredArr","forEach","field","trim","mapStateToProps","state","select","mapDispatchToProps","mergeProps","stateProps","dispatchProps","otherProps","handleSubmit","connectedAddInfoContainer","form"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACrCO,iBADqC,GACjB,MAAM;AACtB,WAAKC,KAAL,CAAWN,UAAX;AACH,KAHoC;AAAA;;AAIrCO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAS,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWE,aAAnC;AAAkD,MAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,aAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AARoC;;AAWzC,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,cAAc,GAAG,CACnB,QADmB,EAEnB,WAFmB,EAGnB,KAHmB,CAAvB;AAKA,QAAMC,WAAW,GAAG,CAChB,WADgB,CAApB;AAGAD,EAAAA,cAAc,CAACE,OAAf,CAAuBC,KAAK,IAAI;AAC5B,QAAI,CAACL,MAAM,CAACK,KAAD,CAAP,IAAkB,CAACL,MAAM,CAACK,KAAD,CAAN,CAAcC,IAAd,EAAvB,EAA6C;AACzCL,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKAF,EAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAAK,IAAI;AACzB,QAAI,CAACL,MAAM,CAACK,KAAD,CAAX,EAAoB;AAChBJ,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB,YAAhB;AACH;AACJ,GAJD;AAKA,SAAOJ,MAAP;AACH,CArBD;;AAuBA,MAAMM,eAAe,GAAIC,KAAD,KACxB;AACI,mBAAiBA,KAAK,CAACC,MAAN,CAAaX,aADlC;AAEI,mBAAiBU,KAAK,CAACC,MAAN,CAAaZ;AAFlC,CADwB,CAAxB;;AAKA,MAAMa,kBAAkB,GAAG;AACvB,gBAAclB,UADS;AAEvB,gBAAcH;AAFS,CAA3B;;AAKA,MAAMsB,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,UAA5B,uBACZF,UADY,MAEZC,aAFY,MAGZC,UAHY;AAIf,kBAAiBA,UAAU,CAACC,YAAX,CAAwB,MAAM;AAC3CF,IAAAA,aAAa,CAACrB,UAAd;AACH,GAFgB;AAJF,EAAnB;;AASA,MAAMwB,yBAAyB,GAAG1B,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,EAAsCC,UAAtC,CAAP,CAAyDlB,gBAAzD,CAAlC;AAEAA,gBAAgB,GAAGF,SAAS,CAAC;AACzB0B,EAAAA,IAAI,EAAG,SADkB;AAEzB,sBAAoB,KAFK;AAGzBlB,EAAAA;AAHyB,CAAD,CAAT,CAIhBiB,yBAJgB,CAAnB;AAMA,eAAevB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport AddInfo from '../../components/completeProfile/addInfo';\nimport {getOptions} from '../../actions/addInfoAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport {incStepper} from '../../actions/stepperAction'\n\nclass AddInfoContainer extends Component {\n    componentDidMount = () => {\n        this.props.getOptions();\n    }\n    render() {\n        return (\n            <AddInfo selectLoading={this.props.selectLoading} selectOptions={this.props.selectOptions}/>\n        )\n    }\n}\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'gender',\n        'sexOrient',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    'selectOptions': state.select.selectOptions,\n    'selectLoading': state.select.selectLoading\n});\nconst mapDispatchToProps = {\n    \"incStepper\": incStepper,\n    \"getOptions\": getOptions\n};\n\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit(() => {\n        dispatchProps.incStepper();\n    })\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfoContainer);\n\nAddInfoContainer = reduxForm({\n    form : \"addInfo\",\n    \"destroyOnUnmount\": false,\n    validate,\n})(connectedAddInfoContainer);\n\nexport default AddInfoContainer;"]},"metadata":{},"sourceType":"module"}